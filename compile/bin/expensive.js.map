{
"version":3,
"file":"compile/bin/expensive.js",
"lineCount":1470,
"mappings":"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",
"sources":["node_modules/util/index.js","node_modules/erotic/src/lib.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/https/index.js","node_modules/http/index.js","node_modules/url/index.js","node_modules/stream/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/zlib/index.js","node_modules/@rqt/aqt/src/lib/make-request.js","node_modules/@rqt/aqt/src/lib/index.js","node_modules/@rqt/aqt/src/index.js","node_modules/querystring/index.js","node_modules/mismatch/src/index.js","node_modules/rexml/src/lib/res-simple.js","node_modules/rexml/src/index.js","node_modules/rexml/src/lib/index.js","node_modules/@rqt/namecheap/src/lib/index.js","node_modules/@rqt/namecheap/src/lib/query.js","node_modules/@rqt/namecheap/src/api/domains/get-list.js","node_modules/@rqt/namecheap/src/api/domains/get-info.js","node_modules/@rqt/namecheap/src/api/domains/check.js","node_modules/@rqt/namecheap/src/api/domains/create.js","node_modules/@rqt/namecheap/src/api/domains/dns/get-hosts.js","node_modules/@rqt/namecheap/src/api/domains/dns/set-hosts.js","node_modules/@rqt/namecheap/src/api/address/get-list.js","node_modules/@rqt/namecheap/src/api/address/get-info.js","node_modules/@rqt/namecheap/src/api/users/get-pricing.js","node_modules/@rqt/namecheap/src/index.js","node_modules/fs/index.js","node_modules/@wrote/read/src/index.js","node_modules/@wrote/write/src/index.js","node_modules/bosom/src/index.js","node_modules/rqt/src/lib/index.js","node_modules/rqt/src/lib/Session.js","node_modules/@rqt/ip/src/index.js","node_modules/assert/index.js","node_modules/readline/index.js","node_modules/promto/src/index.js","node_modules/reloquent/src/lib/ask.js","node_modules/reloquent/src/lib/ask-questions.js","node_modules/reloquent/src/index.js","node_modules/erte/src/index.js","node_modules/@rqt/namecheap-web/src/lib/index.js","node_modules/@rqt/namecheap-web/src/lib/Authenticator.js","node_modules/@rqt/namecheap-web/src/lib/App.js","node_modules/@rqt/namecheap-web/src/whois.js","node_modules/@rqt/namecheap-web/src/index.js","node_modules/@rqt/namecheap-web/src/coupon.js","node_modules/usually/src/index.js","node_modules/argufy/src/index.js","src/bin/get-args.js","src/lib/index.js","src/bin/get-usage.js","node_modules/tablature/src/index.js","src/lib/print/list.js","src/bin/commands/list.js","node_modules/path/index.js","src/bin/commands/check.js","src/bin/expensive.js","node_modules/paddys/src/index.js","node_modules/frame-of-mind/src/index.js","node_modules/indicatrix/src/index.js","src/bin/commands/reg.js","src/bin/commands/github.js","node_modules/africa/src/lib/index.js","node_modules/africa/src/index.js","src/questions.js","src/lib/get-config.js","src/lib/whitelist-ip.js","src/bin/errors.js","src/bin/commands/whois.js","src/bin/commands/init.js","src/bin/commands/info.js","src/lib/print/info.js","src/bin/commands/coupon.js"],
"sourcesContent":["export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","export default https\nexport const {\n  Agent,\n  Server,\n  createServer,\n  get,\n  globalAgent,\n  request,\n} = https","export default http\nexport const {\n  Agent,\n  ClientRequest,\n  IncomingMessage,\n  METHODS,\n  OutgoingMessage,\n  STATUS_CODES,\n  Server,\n  ServerResponse,\n  createServer,\n  get,\n  globalAgent,\n  maxHeaderSize,\n  request,\n} = http","export default url\nexport const {\n  URL,\n  URLSearchParams,\n  Url,\n  domainToASCII,\n  domainToUnicode,\n  format,\n  parse,\n  resolve,\n} = url","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","export default zlib\nexport const {\n  Deflate,\n  DeflateRaw,\n  Gunzip,\n  Gzip,\n  Inflate,\n  InflateRaw,\n  Unzip,\n  Z_BEST_COMPRESSION,\n  Z_BEST_SPEED,\n  Z_BLOCK,\n  Z_BUF_ERROR,\n  Z_DATA_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_ERRNO,\n  Z_FILTERED,\n  Z_FINISH,\n  Z_FIXED,\n  Z_FULL_FLUSH,\n  Z_HUFFMAN_ONLY,\n  Z_MEM_ERROR,\n  Z_NEED_DICT,\n  Z_NO_COMPRESSION,\n  Z_NO_FLUSH,\n  Z_OK,\n  Z_PARTIAL_FLUSH,\n  Z_RLE,\n  Z_STREAM_END,\n  Z_STREAM_ERROR,\n  Z_SYNC_FLUSH,\n  Z_VERSION_ERROR,\n  constants,\n  createDeflate,\n  createDeflateRaw,\n  createGunzip,\n  createGzip,\n  createInflate,\n  createInflateRaw,\n  createUnzip,\n  deflate,\n  deflateRaw,\n  deflateRawSync,\n  deflateSync,\n  gunzip,\n  gunzipSync,\n  gzip,\n  gzipSync,\n  inflate,\n  inflateRaw,\n  inflateRawSync,\n  inflateSync,\n  unzip,\n  unzipSync,\n} = zlib","import erotic from 'erotic'\nimport { collect } from 'catchment'\nimport { createGunzip } from 'zlib'\nimport { request as Request } from 'http' // eslint-disable-line\n\n/**\n * @param {!http.IncomingMessage} res\n */\nexport const isMessageGzip = (res) => {\n  /**\n   * @suppress {checkTypes}\n   */\n  const { 'content-encoding': contentEncoding } = res.headers\n  return contentEncoding == 'gzip'\n}\n\n/**\n * @param {typeof Request} request The actual http or https request function.\n * @param {!http.RequestOptions} requestOptions\n * @param {!Object} [config] Config object.\n * @param {boolean} [config.justHeaders] only return headers as soon as available. false\n * @param {boolean} [config.binary] return binary\n * @param {boolean} [config.er] erotic callback\n */\nconst makeRequest = (request, requestOptions, config = {}) => {\n  const { justHeaders, binary, er = erotic(true) } = config\n  /** @type {!http.ClientRequest} */\n  let req\n\n  /** @type {!http.IncomingHttpHeaders} */\n  let headers\n  /** @type {{statusMessage: string, statusCode: number}} */\n  let m\n  /** @type {string|!Buffer} */\n  let body\n  let rawLength = 0\n  let byteLength = 0\n\n  const promise = new Promise((r, j) => {\n    req = request(requestOptions, async (res) => {\n      ({ headers } = res)\n      const { statusMessage, statusCode } = res\n      m = { statusMessage, statusCode }\n      if (justHeaders) {\n        res.destroy()\n        r()\n        return\n      }\n      const isGzip = isMessageGzip(res)\n\n      res.on('data', data => rawLength += data.byteLength )\n\n      const rs = isGzip\n        ? res.pipe(createGunzip())\n        : res\n\n      body = await collect(rs, { binary })\n      byteLength = body.length\n\n      r()\n    })\n      .on('error', (error) => {\n        const err = er(error)\n        j(err)\n      })\n      .on('timeout', () => {\n        req.abort()\n      })\n  }).then(() => {\n    const r = {\n      body,\n      headers,\n      ...m,\n      rawLength,\n      byteLength,\n      parsedBody: null,\n    }\n    return r\n  })\n  return { req, promise }\n}\n\nexport default makeRequest\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').ClientRequest} http.ClientRequest\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').RequestOptions} http.RequestOptions\n */","import erotic from 'erotic'\nimport makeRequest from './make-request'\n\nexport const getFormData = (form = {}) => {\n  const urlEncodedDataPairs = Object.keys(form).reduce((acc, key) => {\n    const v = form[key]\n    const p = `${encodeURIComponent(key)}=${encodeURIComponent(v)}`\n    return [...acc, p]\n  }, [])\n\n  const d = urlEncodedDataPairs.join('&').replace(/%20/g, '+')\n  return d\n}\n\nexport const getData = (type, data) => {\n  switch (type) {\n  case 'json':\n    data = JSON.stringify(data)\n    type = 'application/json'\n    break\n  case 'form':\n    data = getFormData(data)\n    type = 'application/x-www-form-urlencoded'\n    break\n  }\n  return {\n    data,\n    contentType: type,\n  }\n}\n\nexport const exec = async (request, requestOptions,\n  { data, justHeaders, binary, er = erotic(true) },\n) => {\n  const { req, promise } = makeRequest(request, requestOptions, {\n    justHeaders,\n    binary,\n    er,\n  })\n  req.end(data)\n  const res = await promise\n\n  const isJson = isHeadersJson(res.headers)\n\n  if (isJson && res.body) {\n    try {\n      res.parsedBody = JSON.parse(res.body)\n    } catch (e) {\n      const err = er(e)\n      err.response = res.body\n      throw err\n    }\n  }\n\n  return res\n}\n\n/**\n * Check if the returned content-type starts with application/json.\n * @param {!http.IncomingHttpHeaders} headers\n */\nconst isHeadersJson = (headers) => {\n  /**\n   * @suppress {checkTypes}\n   */\n  const { 'content-type': contentType = '' } = headers\n  return contentType.startsWith('application/json')\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */","import { request as https } from 'https'\nimport { request as http } from 'http'\nimport { debuglog } from 'util'\nimport erotic from 'erotic'\nimport { parse } from 'url'\nimport { getData, exec } from './lib'\n\nlet ua\ntry {\n  // require in index won't lead to --process_common_js_modules\n  const { 'version': version, 'name': name } = require('../package.json')\n  ua = name == '@rqt/aqt' ? `@rqt/aqt/${version}` : `@rqt/aqt via ${name}/${version}`\n} catch (err) {\n  ua = '@aqt/rqt'\n}\n\nconst LOG = debuglog('aqt')\n\n/**\n * Request a web page and return information including `headers`, `statusCode`, `statusMessage` along with the `body` (which is also parsed if JSON received).\n * @param {string} address The URL such as http://example.com/api.\n * @param {_rqt.AqtOptions} [options] Configuration for requests.\n */\nconst aqt = async (address, options = {}) => {\n  const {\n    data: d,\n    type = 'json',\n    headers: outgoingHeaders = {\n      'User-Agent': `Mozilla/5.0 (Node.JS) ${ua}`,\n    },\n    compress = true,\n    binary = false,\n    justHeaders = false,\n    method,\n    timeout,\n  } = options\n  const er = erotic(true)\n\n  const { hostname, protocol, port, path } = parse(address)\n  const isHttps = protocol === 'https:'\n  const request = isHttps ? https : http\n\n  const opts = {\n    hostname,\n    port,\n    path,\n    headers: {\n      ...outgoingHeaders,\n    },\n    timeout,\n    method,\n  }\n\n  let data\n  if (d) {\n    const _d = getData(type, d)\n      ; ({ data } = _d)\n    const { contentType } = _d\n\n    opts.method = method || 'POST'\n    if (!('Content-Type' in opts.headers)) {\n      opts.headers['Content-Type'] = contentType\n    }\n    if (!('Content-Length' in opts.headers)) {\n      opts.headers['Content-Length'] = Buffer.byteLength(data)\n    }\n  }\n  if (compress && !('Accept-Encoding' in opts.headers)) {\n    opts.headers['Accept-Encoding'] = 'gzip, deflate'\n  }\n\n  const {\n    body, headers, byteLength, statusCode, statusMessage, rawLength,\n    parsedBody,\n  } = await exec(request, opts, {\n    data,\n    justHeaders,\n    binary,\n    er,\n  })\n\n  LOG('%s %s B%s', address, byteLength, `${byteLength != rawLength ? ` (raw ${rawLength} B)` : ''}`)\n\n  /** @type {!_rqt.AqtReturn} */\n  const res = {\n    body: parsedBody ? parsedBody : body,\n    headers,\n    statusCode,\n    statusMessage,\n  }\n  return res\n}\n\nexport default aqt\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').AqtOptions} _rqt.AqtOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').AqtReturn} _rqt.AqtReturn\n */","export default querystring\nexport const {\n  decode,\n  encode,\n  escape,\n  parse,\n  stringify,\n  unescape,\n} = querystring","/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {Array<string>} keys Keys to use to create an captured group object.\n * @param {boolean} addPositions Whether to include positions in the return.\n * @example\n *\n```js\nconst re = /(test) inside of a (string)(\\d)?/ig\nconst s = 'Test inside of a STRING1. TEST inside of a string.'\nconst keys = ['test', 'string', 'number']\nconst res = mismatch(re, s, keys)\n\n// result:\n[\n {\n   test: 'Test',\n   string: 'STRING',\n   number: '1',\n },\n {\n   test: 'TEST',\n   string: 'string',\n },\n]\n```\n */\nexport default function mismatch(re, string, keys, addPositions = false) {\n  /** @type {!Array<!Object<string, string>>} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    // remove position and input\n    const position = args[args.length - 2]\n    const start = addPositions ? { position } : {}\n    const p = args.slice(0, args.length - 2)\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup !== undefined)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, start)\n    m.push(o)\n  })\n  return m\n}","const nameRe = /([^\\s>=/]+)/\nconst valRe = /(?:\"([\\s\\S]*?)\"|'([\\s\\S]*?)')/\n\nexport const attributeRe = new RegExp(`${nameRe.source}(?:\\\\s*=\\\\s*${valRe.source})?`, 'g')\n\n/**\n * This regex will match all attributes as a string inside of element, e.g., matching `<el attr=\"abc\" bool/>` will result in `attr=\"abc\" bool`.\n */\nexport const attributesRe = new RegExp(`\\\\s*((?:${attributeRe.source}\\\\s*)*)`)\n","import mismatch from 'mismatch'\nimport { extractProps as extractPropsSpec, getPropValue } from './lib'\nimport { attributesRe } from './lib/res'\nimport { attributesRe as simple, attributeRe as simpleAttribute } from './lib/res-simple'\n\nconst execRes = (re, s) => {\n  const res = re.exec(s)\n  if (!res) return res\n  const [, ...args] = res\n  return args\n}\n\n/**\n * Extract member elements from an XML string. Numbers and booleans will be parsed into their JS types.\n * @param {string} tag Which tag to extract, e.g., `div`.\n * @param {string} string The XML string.\n * @example\n *\n * const xml = `\n<html>\n  <div id=\"1\" class=\"test\" contenteditable>\n    Hello World\n  </div>\n</html>\n`\n * const [{ content, props }] = extractTag('div', xml)\n * // content: Hello World\n * // props: { id: 1, class: 'test', contenteditable: true }\n */\nconst extractTags = (tag, string) => {\n  const end1 = /\\s*\\/>/\n  const end2 = new RegExp(`>([\\\\s\\\\S]+?)?</${tag}>`)\n  const re = new RegExp(`<${tag}${simple.source}?(?:${end1.source}|${end2.source})`, 'g')\n\n  const matches = mismatch(re, string, ['a', 'v', 'v1', 'v2', 'c'])\n  const res = matches.map(({ 'a': attributes = '', 'c': content = '' }) => {\n    const attrs = attributes.replace(/\\/$/, '').trim()\n    const props = extractProps(attrs)\n    return { content, props }\n  })\n  return res\n}\n\n/**\n * Extracts the properties from the attributes part of the tag and returns them as an object. It will parse values if not specified otherwise.\n * @param {string} string The attribute part of the tag.\n * @param {boolean} parseValue Whether to transform the value into its value.\n */\nexport const extractProps = (string, parseValue = true) => {\n  const m = mismatch(simpleAttribute, string, ['key', 'val', 'def', 'f'])\n  const props = m\n    .reduce((acc, { 'key': key, 'val': val }) => {\n      if (val === undefined) {\n        acc[key] = true\n        return acc\n      }\n      acc[key] = parseValue ? getPropValue(val) : val\n      return acc\n    }, {})\n  return props\n}\n\n/**\n * Extract member elements from an XML string using the complex regular expression to match attributes that confirms to the XML spec. Numbers and booleans will be parsed into their JS types.\n * @param {string} tag Which tag to extract, e.g., `div`.\n * @param {string} string The XML string.\n * @example\n *\n * const xml = `\n<html>\n  <div id=\"1\" class=\"test\" contenteditable>\n    Hello World\n  </div>\n</html>\n`\n * const [{ content, props }] = extractTag('div', xml)\n * // content: Hello World\n * // props: { id: 1, class: 'test', contenteditable: true }\n */\nexport const extractTagsSpec = (tag, string) => {\n  const end1 = /\\s*\\/>/\n  const end2 = new RegExp(`>([\\\\s\\\\S]+?)?</${tag}>`)\n  const re = new RegExp(`<${tag}${attributesRe.source}?(?:${end1.source}|${end2.source})`, 'gu')\n  const r = []\n\n  let t\n  while ((t = execRes(re, string))) {\n    if (!t.length) continue\n    const [_p = '', _c = ''] = t\n    const p = _p.replace(/\\/$/, '').trim()\n    const props = extractProps(p)\n    const item = {\n      props,\n      content: _c,\n    }\n    r.push(item)\n  }\n  return r\n}\n\nexport default extractTags\nexport { extractPropsSpec }","import { attributeRe } from './res'\n\nexport const getPropValue = (val) => {\n  if (val == 'true') return true\n  if (val == 'false') return false\n  if (/^\\d+$/.test(val)) {\n    return parseInt(val, 10)\n  }\n  return val\n}\n\n/**\n * Parse the arguments part of an XML element\n * @param {string} string String to extract attributes from.\n * @param {boolean} parseValue Parse `true` and `false` values into a boolean, and numbers into integers. Default `true`.\n */\nexport const extractProps = (string, parseValue = true) => {\n  const o = {}\n  const re = new RegExp(`\\\\s+${attributeRe.source}`, 'gu')\n  ;` ${string}`.replace(re, (match, name,  doubleQuoteVal, singleQuoteVal) => {\n    const value = singleQuoteVal || doubleQuoteVal\n    const v = value === undefined ? true : value\n    const val = parseValue ? getPropValue(v) : v\n    o[name] = val\n  })\n  return o\n}\n","export const filterEmpty = (obj) => {\n  return Object.keys(obj).reduce((acc, k) => {\n    const val = obj[k]\n    if (val === undefined) return acc\n    acc[k] = val\n    return acc\n  }, {})\n}\n\nexport const validateDomains = (arr) => arr.reduce((acc, current) => {\n  return acc && typeof current == 'string'\n}, true)","import aqt from '@rqt/aqt'\nimport { stringify } from 'querystring'\nimport extractTags from 'rexml'\nimport { filterEmpty } from './'\n\n/** @param {string} s */\nconst isXml = s => s.startsWith('<?xml version=\"1.0\" encoding=\"utf-8\"?>')\n\nconst UA = [\n  'Mozilla/5.0',\n  '(Node.JS; @rqt/namecheap v2.4.0)',\n  'https://github.com/rqt/namecheap',\n].join(' ')\n\nexport default async function query({\n  ApiUser,\n  ApiKey,\n  ClientIp,\n  host,\n}, Command, Options = {}, method = 'GET') {\n  if (!Command) throw new Error('Command must be passed.')\n  const data = filterEmpty(Options)\n  const authData = {\n    'ApiUser': ApiUser,\n    'ApiKey': ApiKey,\n    'UserName': ApiUser,\n    'ClientIp': ClientIp,\n    'Command': Command,\n  }\n  let res\n  const headers = {\n    'User-Agent': UA,\n  }\n  if (method == 'GET') {\n    const qs = stringify({ ...authData, ...data })\n    const url = `${host}/xml.response?${qs}`\n    res = await aqt(url, {\n      headers,\n    })\n  } else if (method == 'POST') {\n    const qs = stringify(authData)\n    res = await aqt(`${host}/xml.response?${qs}`, {\n      data,\n      headers,\n      type: 'form',\n    })\n  } else {\n    throw new Error('Unknown method.')\n  }\n  res = res.body\n\n  const xml = isXml(res)\n  if (!xml) throw new Error('non-xml response')\n\n  const error = getError(res)\n  if (error) throw error\n\n  const [{ content: CommandResponse }] = extractTags('CommandResponse', res)\n\n  return CommandResponse.trim()\n}\n\nexport const getError = (res) => {\n  const [{ content: Errors }] = extractTags('Errors', res)\n  if (Errors.length) {\n    const errors = extractTags('Error', Errors)\n\n    let c\n    let p\n    if (errors.length == 1) {\n      const [{ content, props }] = errors\n      c = content\n      p = props\n    } else {\n      c = errors.map(({ content }) => content).join('; ')\n      p = errors.map(({ props }) => props)\n    }\n    const er = new NamecheapError(c)\n    /** @suppress {checkTypes} */\n    er['props'] = p\n\n    return er\n  }\n}\n\nexport class NamecheapError extends Error {}","import extractTag from 'rexml'\n\nconst GET_LIST = 'namecheap.domains.getList'\n\nconst m = {\n  'name': 'name',\n  'expire': 'expiredate',\n  'create': 'createdate',\n}\n\n/**\n * @param {string} sort\n */\nconst getSort = (sort, desc) => {\n  if (!['name', 'expire', 'create'].includes(sort.toLowerCase())) {\n    throw new Error(`Unknown sort by option: ${sort}.`)\n  }\n  const s = m[sort].toUpperCase()\n  if (desc) return `${s}_DESC`\n  return s\n}\n\n/**\n * Returns a list of domains for the particular user.\n * @param {!Function} query\n * @param {!_namecheap.GetList} options Options to get a list of domains. https://www.namecheap.com/support/api/methods/domains/get-list.aspx\n * @example\n *\n  // Get information about domains in the `.app` zone sorted by descending  create date (oldest first)\n  await nc.domains.getList({\n   sort: 'create',\n   desc: true,\n   filter: '.app',\n  })\n\n  // Result:\n  {\n   domains: [\n     {\n       ID: 30071047,\n       Name: 'example.app',\n       User: 'artdeco',\n       Created: '06/05/2018',\n       Expires: '06/05/2019',\n       IsExpired: false,\n       IsLocked: false,\n       AutoRenew: true,\n       WhoisGuard: 'ENABLED',\n       IsPremium: false,\n       IsOurDNS: false\n     },\n     {\n       ID: 30072635,\n       Name: 'test.app',\n       User: 'artdeco',\n       Created: '06/06/2018',\n       Expires: '06/06/2019',\n       IsExpired: false,\n       IsLocked: false,\n       AutoRenew: true,\n       WhoisGuard: 'ENABLED',\n       IsPremium: false,\n       IsOurDNS: false\n     },\n   ],\n   TotalItems: 2,\n   CurrentPage: 1,\n   PageSize: 20,\n  }\n */\nasync function getList(query, options = {}) {\n  const {\n    page,\n    sort,\n    desc,\n    filter,\n    type,\n    pageSize,\n  } = options\n  const reqOpts = {\n    'Page': page,\n    'PageSize': pageSize,\n    'SortBy': sort ? getSort(sort, desc) : getSort('create', 'desc'),\n    'SearchTerm': filter,\n    'ListType': type,\n  }\n  const res = await query(GET_LIST, reqOpts)\n  const domain = extractTag('Domain', res)\n  const domains = domain.map(({ props }) => {\n    /** @type {!_namecheap.Domain} */\n    const d = props\n    return d\n  })\n  const [{ content: Paging }] = extractTag('Paging', res)\n  const [{ content: TotalItems }] = extractTag('TotalItems', Paging)\n  const [{ content: CurrentPage }] = extractTag('CurrentPage', Paging)\n  const [{ content: PageSize }] = extractTag('PageSize', Paging)\n\n  return {\n    domains,\n    TotalItems: parseInt(TotalItems, 10),\n    CurrentPage: parseInt(CurrentPage, 10),\n    PageSize: parseInt(PageSize, 10),\n  }\n}\n\nexport default getList\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').Domain} _namecheap.Domain\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').GetList} _namecheap.GetList\n */","import extractTags from 'rexml'\n\nconst COMMAND = 'namecheap.domains.getinfo'\n\nconst parseWhois = (Whoisguard) => {\n  let ID\n  let ExpiredDate\n  let EmailDetails\n  ([{ content: ID }] = extractTags('ID', Whoisguard))\n  try {\n    ([{ props: EmailDetails }] = extractTags('EmailDetails', Whoisguard))\n  } catch (err) {\n    // ok\n  }\n  try {\n    ([{ content: ExpiredDate }] = extractTags('ExpiredDate', Whoisguard))\n  } catch (err) {\n    // ok\n  }\n  return {\n    ID: parseInt(ID, 10),\n    ...(ExpiredDate ? { ExpiredDate } : {}),\n    ...(EmailDetails ? { EmailDetails } : {}),\n  }\n}\n\nconst parsePremiumDNS = (dns) => {\n  const [{ content: UseAutoRenew }] = extractTags('UseAutoRenew', dns)\n  const [{ content: SubscriptionId }] = extractTags('SubscriptionId', dns)\n  const [{ content: CreatedDate }] = extractTags('CreatedDate', dns)\n  const [{ content: ExpirationDate }] = extractTags('ExpirationDate', dns)\n  const [{ content: IsActive }] = extractTags('IsActive', dns)\n  return {\n    UseAutoRenew: UseAutoRenew == 'true',\n    SubscriptionId: parseInt(SubscriptionId, 10),\n    CreatedDate: new Date(Date.parse(CreatedDate)),\n    ExpirationDate: new Date(Date.parse(ExpirationDate)),\n    IsActive: IsActive == true,\n  }\n}\n\nexport const parse = (res) => {\n  const [{\n    content: DomainGetInfoResult,\n    props,\n  }] = extractTags('DomainGetInfoResult', res)\n  const [{\n    content: DomainDetails,\n  }] = extractTags('DomainDetails', DomainGetInfoResult)\n  const [{ content: CreatedDate }] = extractTags('CreatedDate', DomainDetails)\n  const [{ content: ExpiredDate }] = extractTags('ExpiredDate', DomainDetails)\n  const [{ content: NumYears }] = extractTags('NumYears', DomainDetails)\n  const [{\n    content: Whoisguard,\n    props: WhoisProps,\n  }] = extractTags('Whoisguard', DomainGetInfoResult)\n  const whois = parseWhois(Whoisguard)\n\n  const [{\n    content: PremiumDnsSubscription,\n  }] = extractTags('PremiumDnsSubscription', DomainGetInfoResult)\n  const premiumDns = parsePremiumDNS(PremiumDnsSubscription)\n\n  const [{\n    content: DnsDetails,\n    props: DnsProps,\n  }] = extractTags('DnsDetails', DomainGetInfoResult)\n  const Nameserver = extractTags('Nameserver', DnsDetails)\n    .map(({ content }) => content)\n\n  const [{\n    content: Modificationrights,\n    props: ModificationrightsProps,\n  }] = extractTags('Modificationrights', DomainGetInfoResult)\n  let rights = {}\n  if (Modificationrights) {\n    rights = extractTags('Rights', Modificationrights)\n      .reduce((acc, { props: p }) => {\n        const { Type } = p\n        return {\n          ...acc,\n          [Type]: true,\n        }\n      }, {})\n  }\n\n  const d = {\n    ...props,\n    DomainDetails: {\n      CreatedDate,\n      ExpiredDate,\n      NumYears: parseInt(NumYears, 10),\n    },\n    Whoisguard: {\n      ...WhoisProps,\n      ...whois,\n    },\n    PremiumDnsSubscription: premiumDns,\n    DnsDetails: {\n      ...DnsProps,\n      Nameserver,\n    },\n    Modificationrights: {\n      ...ModificationrightsProps,\n      ...rights,\n    },\n  }\n  return d\n}\n\n/**\n * Returns information about the requested domain.\n * @param {!Function} query\n * @param {string|_namecheap.GetInfo} options The domain name, or options to get info about a domain.\n * @example\n *\n * // Obtain information for the testt.cc domain:\n * await nc.domains.getInfo({ domain: 'testt.cc' })\n * await nc.domains.getInfo('testt.cc')\n *\n * // Result:\n * { Status: 'Ok',\n *  ID: 30072635,\n *  DomainName: 'testt.cc',\n *  OwnerName: 'artdeco',\n *  IsOwner: true,\n *  IsPremium: false,\n *  DomainDetails:\n *   { CreatedDate: '06/06/2018',\n *     ExpiredDate: '06/06/2019',\n *     NumYears: 0 },\n *  Whoisguard:\n *   { Enabled: 'True',\n *     ID: 23996873,\n *     ExpiredDate: '06/05/2019',\n *     EmailDetails:\n *      { WhoisGuardEmail: 'ff474db8ad3b4c3b95a2b0f3b3a73acc.protect[at]whoisguard.com',\n *        ForwardedTo: 'example[at]adc.sh',\n *        LastAutoEmailChangeDate: '',\n *        AutoEmailChangeFrequencyDays: 0 } },\n *  PremiumDnsSubscription:\n *   { UseAutoRenew: false,\n *     SubscriptionId: -1,\n *     CreatedDate: 0001-01-01T00:00:00.000Z,\n *     ExpirationDate: 0001-01-01T00:00:00.000Z,\n *     IsActive: false },\n *  DnsDetails:\n *   { ProviderType: 'CUSTOM',\n *     IsUsingOurDNS: false,\n *     HostCount: 2,\n *     EmailType: 'FWD',\n *     DynamicDNSStatus: false,\n *     IsFailover: false,\n *     Nameserver:\n *      [ 'ns-1013.awsdns-62.net',\n *        'ns-1311.awsdns-35.org',\n *        'ns-1616.awsdns-10.co.uk',\n *        'ns-355.awsdns-44.com' ] },\n *  Modificationrights: { All: true } }\n */\nasync function getInfo(query, options) {\n  const opts = typeof options == 'string' ? { domain: options } : options\n  const {\n    domain,\n    host,\n  } = opts\n  const res = await query(COMMAND, {\n    'DomainName': domain,\n    'HostName': host,\n  })\n\n  /** @type {!_namecheap.DomainInfo} */\n  const d = parse(res)\n  return d\n}\n\nexport default getInfo\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').DomainInfo} _namecheap.DomainInfo\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').GetInfo} _namecheap.GetInfo\n */","import { validateDomains } from '../../lib'\nimport extractTags from 'rexml'\n\nconst COMMAND = 'namecheap.domains.check'\n\n/**\n * Check if the domain name is taken.\n * @param {!Function} query\n * @param {string|_namecheap.Check} options\n * @example\n *\n * await nc.domains.check('test.co')\n *\n * [ { Domain: 'test.co',\n    Available: false,\n    ErrorNo: 0,\n    Description: '',\n    IsPremiumName: false,\n    PremiumRegistrationPrice: 0,\n    PremiumRenewalPrice: 0,\n    PremiumRestorePrice: 0,\n    PremiumTransferPrice: 0,\n    IcannFee: 0,\n    EapFee: '0.0' } ]\n *\n */\nasync function check(query, options) {\n  const isSingle = typeof options == 'string'\n  const opts = isSingle ? { domain: options } : options\n  const {\n    domains = [],\n    domain,\n  } = opts\n  if (!Array.isArray(domains)) throw new Error('Domains must be a list.')\n  const val = validateDomains(domains)\n  if (!val) throw new Error('All domains must be strings.')\n  if (domain && typeof domain != 'string')\n    throw new Error('Domain must be a string.')\n  const d = [...domains, ...(domain ? [domain] : [])]\n\n  const res = await query(COMMAND, { 'DomainList': d.join(',') })\n  const DomainCheckResult = extractTags('DomainCheckResult', res)\n\n  /** @type {!Array<!_namecheap.DomainCheck>} */\n  const results = DomainCheckResult.map(({ props }) => props)\n  return results\n}\n\nexport default check\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').DomainCheck} _namecheap.DomainCheck\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').Check} _namecheap.Check\n */","import extractTags from 'rexml'\n\nconst COMMAND = 'namecheap.domains.create'\n\n/**\n * Register a domain.\n * @param {!Function} query\n * @param {_namecheap.Create} options\n * @example\n *\n * // 0. Find the default account address.\n * const ad = await nc.address.getList()\n * const { AddressId } = ad.find(({ IsDefault }) => IsDefault)\n * const address = await nc.address.getInfo(AddressId)\n *\n * // Register a domain.\n * await nc.domains.create({\n *  domain: 'example-test-100.com',\n *  address,\n * })\n * // Result:\n * { Domain: 'example-test-100.com',\n *  Registered: true,\n *  ChargedAmount: '9.0600',\n *  DomainID: 330037,\n *  OrderID: 1291740,\n *  TransactionID: 1828960,\n *  WhoisguardEnable: true,\n *  FreePositiveSSL: false,\n *  NonRealTimeDomain: false }\n */\nasync function create(query, options) {\n  const {\n    domain,\n    years = 1,\n    promo,\n    address,\n    registrantAddress = address,\n    techAddress = address,\n    adminAddress = address,\n    billingAddress = address,\n    nameservers = [],\n    whois = true,\n    premium = {},\n  } = options\n  const RegistrantAddress = getAddressObject(registrantAddress, 'Registrant')\n  const TechAddress = getAddressObject(techAddress, 'Tech')\n  const AdminAddress = getAddressObject(adminAddress, 'Admin')\n  const AuxAddress = getAddressObject(billingAddress, 'AuxBilling')\n\n  const res = await query(COMMAND, {\n    'DomainName': domain,\n    'Years': years,\n    'PromotionCode': promo,\n    ...RegistrantAddress,\n    ...TechAddress,\n    ...AdminAddress,\n    ...AuxAddress,\n    'Nameservers': nameservers.join(','),\n    'AddFreeWhoisguard': whois ? 'yes' : 'no',\n    'WGEnabled': whois ? 'yes' : 'no',\n    ...premium,\n  }, 'POST')\n  const [{ props }] = extractTags('DomainCreateResult', res)\n  /** @type {!_namecheap.RegistrationResult} */\n  const r = props\n  return r\n}\n\nconst keys = ['JobTitle', 'FirstName', 'LastName', 'Address1', 'Address2',\n  'City', 'StateProvince', 'StateProvinceChoice', 'Country',\n  'Phone', 'PhoneExt', 'Fax', 'EmailAddress']\n\nexport const getAddressObject = (address, key) => {\n  const res = keys\n    .reduce((acc, current) => {\n      const val = (current == 'StateProvince' && !address[current]) ? 'NA' : address[current]\n      return {\n        ...acc,\n        [`${key}${current}`]: val,\n      }\n    }, {\n      [`${key}OrganizationName`]: address.Organization,\n      [`${key}PostalCode`]: address.Zip,\n    })\n  return res\n}\n\nexport default create\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').Create} _namecheap.Create\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/domains').RegistrationResult} _namecheap.RegistrationResult\n */","import extractTag from 'rexml'\n\nconst COMMAND = 'namecheap.domains.dns.getHosts'\n\nasync function getList(query, { sld, tld }) {\n  const reqOpts = {\n    'SLD': sld,\n    'TLD': tld,\n  }\n  const res = await query(COMMAND, reqOpts)\n  const [{ content, props }] = extractTag('DomainDNSGetHostsResult', res)\n  const hosts1 = getHosts(content, 'Host')\n  const hosts2 = getHosts(content, 'host')\n  const hosts3 = getHosts(content, 'HOST')\n  const hosts = [...hosts1, ...hosts2, ...hosts3]\n  const p = /** @type {{ IsUsingOurDNS: boolean, Domain: string, EmailType: string }} */ (props)\n  const r = {\n    ...p,\n    hosts,\n  }\n  return r\n}\n\n/**\n * @returns {!Array<!_namecheap.Host>}\n */\nconst getHosts = (content, tag) => {\n  return extractTag(tag, content).map(({ props }) => {\n    return props\n  })\n}\n\nexport default getList\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../../types/typedefs/dns').Host} _namecheap.Host\n */","import extractTag from 'rexml'\n\nconst COMMAND = 'namecheap.domains.dns.setHosts'\n\n/**\n * @param {?} query\n * @param {!Object} params\n * @param {!Array<!_namecheap.HostParams>} [hosts]\n */\nexport default async function setHosts(query, params, hosts) {\n  const reqOpts = hosts.reduce((acc, host, i) => {\n    Object.entries(host).forEach(([key, value]) => {\n      if (!['HostName', 'RecordType', 'Address', 'MXPref', 'TTL'].includes(key)) return\n      const k = `${key}${i+1}`\n      acc[k] = value\n    })\n    return acc\n  }, params)\n  const res = await query(COMMAND, reqOpts, 'POST')\n  const [{ props }] = extractTag('DomainDNSSetHostsResult', res)\n  /** @type {{ Domain: string, IsSuccess: boolean }} */\n  const p = props\n  return p\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../../types/typedefs/dns').Host} _namecheap.Host\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../../types/typedefs/dns').HostParams} _namecheap.HostParams\n */","import extractTags from 'rexml'\n\nconst COMMAND = 'namecheap.users.address.getList'\n\n/**\n * Gets a list of address IDs and address names associated with the user account.\n * @param {!Function} query\n * @example\n *\n * // Get the list of addresses added to the account.\n * await nc.address.getList()\n * // Result:\n * [\n *  {\n *    AddressId: 0,\n *    AddressName: 'Primary Address',\n *    IsDefault: true,\n *  }\n * ]\n */\nasync function getList(query) {\n  const res = await query(COMMAND)\n  const [{\n    content: AddressGetListResult,\n  }] = extractTags('AddressGetListResult', res)\n  const List = extractTags('List', AddressGetListResult)\n  const addresses = List.map(({ props }) => {\n    /** @type {_namecheap.Address} */\n    const a = props\n    return a\n  })\n  return addresses\n}\n\nexport default getList\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/address').Address} _namecheap.Address\n */","import { debuglog } from 'util'\nimport extractTags from 'rexml'\n\nconst LOG = debuglog('expensive')\n\nconst COMMAND = 'namecheap.users.address.getInfo'\n\n/**\n * Gets information for the requested address ID.\n * @param {!Function} query\n * @param {string|number} id The address id to get info about.\n * @example\n *\n * // Find the address info.\n * await nc.address.getInfo(0)\n *\n * // Result:\n * { AddressId: 0,\n *  UserName: 'example',\n *  AddressName: 'Main Address',\n *  Default_YN: true,\n *  FirstName: 'Art',\n *  LastName: 'Deco',\n *  JobTitle: 'Developer',\n *  Organization: 'Example Co Limited',\n *  Address1: 'Planetary Express',\n *  Address2: '57th Street',\n *  City: 'New New York',\n *  StateProvince: 'NA',\n *  StateProvinceChoice: 'P',\n *  Zip: '10019',\n *  Country: 'US',\n *  Phone: '+1.5417543010',\n *  PhoneExt: '',\n *  EmailAddress: 'artdeco[at]adc.sh' }\n */\nasync function getInfo(query, id) {\n  const res = await query(COMMAND, {\n    'AddressId': id,\n  })\n  const [{\n    content: GetAddressInfoResult,\n  }] = extractTags('GetAddressInfoResult', res)\n  const address = parse(GetAddressInfoResult)\n  return address\n}\n\nconst keys = [\n  'AddressId', 'UserName', 'AddressName', 'Default_YN',\n  'FirstName', 'LastName', 'JobTitle', 'Organization', 'Address1', 'Address2',\n  'City', 'StateProvince', 'StateProvinceChoice', 'Zip', 'Country', 'Phone',\n  'PhoneExt', 'EmailAddress',\n]\n\nconst parse = (add) => {\n  /** @type {!_namecheap.AddressDetail} */\n  const res = keys\n    .reduce((acc, key) => {\n      try {\n        let [{ content }] = extractTags(key, add)\n        if (key == 'Default_YN') {\n          content = content == 'true'\n        } else if (key == 'AddressId') {\n          content = parseInt(content, 10)\n        }\n        return {\n          ...acc,\n          [key]: content,\n        }\n      } catch (er) {\n        LOG(`Could not extract tag ${key}`)\n        return acc\n      }\n    }, {})\n  return res\n}\n\nexport default getInfo\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/address').AddressDetail} _namecheap.AddressDetail\n */","import extractTags from 'rexml'\n\nconst COMMAND = 'namecheap.users.getPricing'\n\n/**\n * @param {?} query\n * @param {_namecheap.GetPricing} options\n */\nconst getPricing = async (query, options) => {\n  const { type, category, promoCode, action, product } = options\n  const res = await query(COMMAND, {\n    'ProductType': type,\n    'ProductCategory': category,\n    'PromotionCode': promoCode,\n    'ActionName': action,\n    'ProductName': product,\n  })\n  const productType = /** @type {!_namecheap.Pricing} */ (extractTags('ProductType', res)\n    .reduce((acc, { content, props: { 'Name': name } }) => {\n      const cat = getCategory(content)\n      acc[name] = cat\n      return acc\n    }, {}))\n  return productType\n}\n\nconst getCategory = (typeContent) => {\n  const category = extractTags('ProductCategory', typeContent)\n    .reduce((acc, { content, props: { 'Name': name } }) => {\n      const product = getProduct(content)\n      acc[name] = product\n      return acc\n    }, {})\n  return category\n}\n\nconst getProduct = (categoryContent) => {\n  const product = extractTags('Product', categoryContent).reduce((acc, {\n    content,\n    props: { 'Name': name },\n  }) => {\n    const price = extractTags('Price', content)\n    const prices = price.map(({ props: p }) => p)\n    const n = name.replace(/-(.)/g, (_, l) => l.toUpperCase())\n    acc[n] = prices\n    return acc\n  }, {})\n  return product\n}\n\nexport default getPricing\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/users').Pricing} _namecheap.Pricing\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../../types/typedefs/users').GetPricing} _namecheap.GetPricing\n */\n","import erotic from 'erotic'\nimport query, { NamecheapError } from './lib/query'\n\nimport getList from './api/domains/get-list'\nimport getInfo from './api/domains/get-info'\nimport check from './api/domains/check'\nimport create from './api/domains/create'\n\nimport getHosts from './api/domains/dns/get-hosts'\nimport setHosts from './api/domains/dns/set-hosts'\n\nimport getAddressList from './api/address/get-list'\nimport getAddressInfo from './api/address/get-info'\n\nimport getPricing from './api/users/get-pricing'\n\n/**\n * @implements {_namecheap.NameCheap}\n */\nexport default class NameCheap {\n  /**\n   * Create a new instance of the client.\n   * @param {!_namecheap.Options} options Options for the NameCheap client.\n   * @param {string} options.user The username required to access the API.\n   * @param {string} options.key The password required used to access the API.\n   * @param {string} options.ip The IP address of the client accessing the application (End-user IP address).\n   * @param {boolean} [options.sandbox=false] Whether to use the sandbox version of the API. Default `false`.\n   */\n  constructor(options) {\n    const {\n      user,\n      key,\n      sandbox = false,\n      ip,\n    } = options\n    this._user = user\n    this._key = key\n    this._host = `https://api.${sandbox ? 'sandbox.' : ''}namecheap.com`\n    this._ip = ip\n    const q = this._query.bind(this)\n\n    this.users = {\n      /**\n       * Returns pricing information for a requested product type.\n       * @param {!_namecheap.GetPricing} opts\n       */\n      async getPricing(opts) {\n        const res = await getPricing(q, opts)\n        return res\n      },\n    }\n\n    this.domains = {\n      /**\n       * Returns a list of domains for the particular user.\n       * @param {!_namecheap.GetList} opts Options to get a list of domains. https://www.namecheap.com/support/api/methods/domains/get-list.aspx\n       */\n      async getList(opts = {}) {\n        const res = await getList(q, opts)\n        return res\n      },\n      /**\n       * Returns information about the requested domain.\n       * @param {string|!_namecheap.GetInfo} opts Options to get info about a domain. https://www.namecheap.com/support/api/methods/domains/get-info.aspx\n       */\n      async getInfo(opts) {\n        const res = await getInfo(q, opts)\n        return res\n      },\n      /**\n       * Check if the domain name is taken.\n       * @param {string|!_namecheap.Check} opts Options to check a domain or domains. https://www.namecheap.com/support/api/methods/domains/check.aspx\n       */\n      async check(opts) {\n        const res = await check(q, opts)\n        return res\n      },\n      /**\n       * Register a domain.\n       * @param {!_namecheap.Create} opts Options to register a domain. https://www.namecheap.com/support/api/methods/domains/create.aspx\n       */\n      async create(opts) {\n        const res = await create(q, opts)\n        return res\n      },\n    }\n\n    this.address = {\n      /**\n       * Gets a list of address IDs and address names associated with the user account.\n       */\n      async getList() {\n        const res = await getAddressList(q)\n        return res\n      },\n      /**\n       * Gets information for the requested address ID.\n       * @param {string|number} id The address id to get info about.\n       */\n      async getInfo(id) {\n        const res = await getAddressInfo(q, id)\n        return res\n      },\n    }\n\n    this.dns = {\n      /**\n       * Retrieves DNS host record settings for the requested domain.\n       * @param {string} domain\n       */\n      async getHosts(domain) {\n        const [sld, ...rest] = domain.split('.')\n        const tld = rest.join('.')\n        const res = await getHosts(q, { sld, tld })\n        return res\n      },\n      /**\n       * Sets the host records.\n       * @param {string} domain The domain name for which to set records.\n       * @param {!Array<!_namecheap.HostParams>} hosts An array with hosts to set.\n       * @param {!_namecheap.DNSSetOptions} [params] Optional parameters.\n       */\n      async setHosts(domain, hosts, params = {}) {\n        const [sld, ...rest] = domain.split('.')\n        const tld = rest.join('.')\n        const res = await setHosts(q, { 'SLD': sld, 'TLD': tld, ...params }, hosts)\n        return res\n      },\n    }\n  }\n  /**\n   * @param {string} endpoint Which method should be queried, e.g., `namecheap.domains.getList`.\n   * @param {!Object<string, string>} [params] The map of parameters.\n   * @param {string} [method] Such as POST or GET.\n   */\n  async _query(endpoint, params, method) {\n    const cb = erotic(true)\n    try {\n      const res = await query({\n        ApiKey: this._key,\n        ApiUser: this._user,\n        host: this._host,\n        ClientIp: this._ip,\n      }, endpoint, params, method)\n      return res\n    } catch (err) {\n      if (err instanceof NamecheapError) {\n        const e = cb(err)\n        throw e\n      }\n      throw err\n    }\n  }\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_namecheap.Options} Options Options for the NameCheap client.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _namecheap.Options Options for the NameCheap client.\n * @prop {string} user The username required to access the API.\n * @prop {string} key The password required used to access the API.\n * @prop {string} ip The IP address of the client accessing the application (End-user IP address).\n * @prop {boolean} [sandbox=false] Whether to use the sandbox version of the API. Default `false`.\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/users').GetPricing} _namecheap.GetPricing\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').GetList} _namecheap.GetList\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').GetInfo} _namecheap.GetInfo\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').Domain} _namecheap.Domain\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').DomainInfo} _namecheap.DomainInfo\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_namecheap.DomainCheck} DomainCheck\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').DomainCheck} _namecheap.DomainCheck\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_namecheap.Check} Check\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').Check} _namecheap.Check\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').Create} _namecheap.Create\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/domains').RegistrationResult} _namecheap.RegistrationResult\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/dns').HostParams} _namecheap.HostParams\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types/typedefs/dns').DNSSetOptions} _namecheap.DNSSetOptions\n */","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import { createWriteStream } from 'fs'\nimport erotic from 'erotic'\n\n/**\n * Write a file to the filesystem.\n * @param {string} path The path of the file to write.\n * @param {string|Buffer} data The data to write.\n */\nexport default async function write(path, data) {\n  if (!path) throw new Error('No path is given.')\n  const er = erotic(true)\n  const ws = createWriteStream(path)\n  await new Promise((r, j) => {\n    ws\n      .on('error', (e) => {\n        const err = er(e)\n        j(err)\n      })\n      .on('close', r)\n      .end(data)\n  })\n}","import { debuglog } from 'util'\nimport read from '@wrote/read'\nimport write from '@wrote/write'\n\nconst LOG = debuglog('bosom')\n\nconst writeJSON = async (path, data, config) => {\n  const {\n    replacer = null,\n    space = null,\n  } = config\n  const json = JSON.stringify(data, replacer, space)\n  await write(path, json)\n}\n\n/**\n * Read or write a JSON file.\n * @param {string} path Path to the file to read.\n * @param {Object} [data] Data to write to the file (if JSON file exists, fields in it will be overridden).\n * @param {!_bosom.Options} [config] how to write data.\n */\nconst bosom = async (path, data, config = {}) => {\n  if (data) {\n    const res = await writeJSON(path, data, config)\n    return res\n  }\n  LOG('Reading %s', path)\n  const r = await read(path)\n  const res = JSON.parse(r)\n  return res\n}\n\nexport default bosom\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Options} _bosom.Options\n */","import aqt from '@rqt/aqt'\n\n/**\n * Request an HTTP page and return the response body as a string.\n * @param {string} address Url such as http://example.com/api.\n * @param {!_rqt.AqtOptions} [options] Options for requests.\n */\nexport const rqt = async (address, options = {}) => {\n  const { body } = await aqt(address, options)\n  /** @type {string} */\n  const r = body\n  return r\n}\n\n/**\n * Request an HTTP page and return the response body as an object.\n * @param {string} address Url such as http://example.com/api.\n * @param {!_rqt.AqtOptions} [options] Options for requests.\n */\nexport const jqt = async (address, options = {}) => {\n  const { body } = await aqt(address, options)\n  /** @type {*} */\n  const r = body\n  return r\n}\n\n/**\n * Request a page and return the body as a buffer.\n * @param {string} address The URL such as http://example.com/api.\n * @param {!_rqt.AqtOptions} [options] Options for requests.\n */\nexport const bqt = async (address, options) => {\n  const c = {\n    ...options,\n    binary: true,\n  }\n  const  { body } = await aqt(address, c)\n  /** @type {!Buffer} */\n  const r = body\n  return r\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/aqt').AqtOptions} _rqt.AqtOptions\n */\n\n// /**\n//  * Request a page and return the body as a stream.\n//  * @param {string} address Url such as http://example.com/api\n//  * @param {Options} [config] Options for requests.\n//  * @param {*} [config.data] Optional data to send to the server with the request.\n//  * @param {'form'|'json'} [config.type=\"'json'\"] How to send data: `json` to serialise JSON data and `form` for url-encoded transmission with `json` mode by default. Default `'json'`.\n//  * @param {http.OutgoingHttpHeaders} [config.headers] Headers to use for the request.\n//  * @param {boolean} [config.compress=true] Add the `Accept-Encoding: gzip, deflate` header to indicate to the server that it can send a compressed response. Default `true`.\n//  * @param {string} [config.method] What HTTP method to use in making of the request. When no method is given and `data` is present, defaults to `POST`.\n//  * @param {number} [config.timeout] Timeout after which the request should cancel.\n//  */\n// export const srqt = async (address, config) => {\n//   throw new Error('not implemented')\n//   // config.binary = true\n//   // const  { body } = await arqt(address, config)\n//   // return body\n// }\n","import aqt from '@rqt/aqt'\n\n/**\n * An instance of a session class can maintain cookies.\n * @implements {_rqt.Session}\n */\nexport default class Session {\n  /**\n   * Create a new session that can be used to make requests in sequence, and remember cookies.\n   * @param {!_rqt.SessionOptions} options Options for a session.\n   */\n  constructor(options = {}) {\n    const {\n      host,\n      headers = {},\n    } = options\n\n    this.host = host\n    this.headers = headers\n    this.cookies = {}\n  }\n  /**\n   * Make a request and return the body.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Options for requests.\n   */\n  async rqt(location, options = {}) {\n    const { body } = await this._request(location, options)\n    /** @type {string} */\n    const r = body\n    return r\n  }\n  /**\n   * Make a request and return the body as buffer.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Options for requests.\n   */\n  async bqt(location, options = {}) {\n    const { body } = await this._request(location, {\n      ...options,\n      binary: true,\n    })\n    /** @type {!Buffer} */\n    const r = body\n    return r\n  }\n  /**\n   * Make a request and return the parsed JSON body as an object.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Options for requests.\n   */\n  async jqt(location, options = {}) {\n    const { body } = await this._request(location, options)\n    /** @type {!Object} */\n    const r = body\n    return r\n  }\n  getFullUrl(location) {\n    if (this.host) {\n      return `${this.host}${location}`\n    }\n    return location\n  }\n  /**\n   * Make a request and return the body, headers and status.\n   * @param {string} location The URL to which to make a request.\n   * @param {!_rqt.AqtOptions} options Configuration for requests.\n   */\n  async aqt(location, options = {}) {\n    const res = await this._request(location, options)\n    return res\n  }\n  async _request(location, options = {}) {\n    const loc = this.getFullUrl(location)\n    const opts = getAllOptions(this.headers, options, this.Cookie)\n    const res = await aqt(loc, opts)\n    const { headers } = res\n    this.cookies = updateCookies(this.cookies, headers)\n    return res\n  }\n  get Cookie() {\n    return getCookieHeader(this.cookies)\n  }\n}\n\nconst getAllOptions = (sessionHeaders, options, Cookie) => {\n  const {\n    headers = {},\n    ...opts\n  } = options\n  return {\n    ...opts,\n    headers: {\n      ...sessionHeaders,\n      ...headers,\n      Cookie,\n    },\n  }\n}\n\nconst getCookieHeader = (cookies) => {\n  const r = Object.keys(cookies).reduce((acc, key) => {\n    const val = cookies[key]\n    const s = `${key}=${val}`\n    return [...acc, s]\n  }, [])\n  return r.join('; ')\n}\n\n/**\n * @param {!Object} cookies\n * @param {!http.IncomingHttpHeaders} headers\n */\nconst updateCookies = (cookies, headers) => {\n  const newCookies = extractCookies(headers)\n  const r = {\n    ...cookies,\n    ...newCookies,\n  }\n  const res = Object.keys(r).reduce((acc, current) => {\n    const val = r[current]\n    if (!val) return acc\n    return {\n      ...acc,\n      [current]: val,\n    }\n  }, {})\n  return res\n}\n\nconst extractCookie = c => {\n  const res = /^(.+?)=(.*?);/.exec(c)\n  if (!res) throw new Error(`Could not extract a cookie from ${c}`)\n  const [, name, value] = res\n  return {\n    [name]: value,\n  }\n}\nconst extractCookies = ({ 'set-cookie': setCookie = [] } = {}) => {\n  return setCookie.reduce((acc, current) => {\n    const c = extractCookie(current)\n    return {\n      ...acc,\n      ...c,\n    }\n  }, {})\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').SessionOptions} _rqt.SessionOptions\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/aqt').AqtOptions} _rqt.AqtOptions\n */","import rqt from 'rqt'\n\n/**\n * Returns a public IP address of the host.\n * @param {!_rqt.IpOptions} options Options for the request.\n */\nexport default async function ip(options = {}) {\n  const {\n    host = 'https://api.ipify.org',\n  } = options\n  const res = await rqt(host)\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').IpOptions} _rqt.IpOptions\n */","export default assert\nexport const {\n  AssertionError,\n  deepEqual,\n  deepStrictEqual,\n  doesNotThrow,\n  equal,\n  fail,\n  ifError,\n  notDeepEqual,\n  notDeepStrictEqual,\n  notEqual,\n  notStrictEqual,\n  ok,\n  strictEqual,\n  throws,\n} = assert","export default readline\nexport const {\n  Interface,\n  clearLine,\n  clearScreenDown,\n  createInterface,\n  cursorTo,\n  emitKeypressEvents,\n  moveCursor,\n} = readline","function createTimeout(desc, timeout, cb) {\n  return setTimeout(() => {\n    const message = `${desc ? desc : 'Promise'} has timed out after ${timeout}ms`\n    const err = new Error(message)\n    err.stack = `Error: ${err.message}`\n    cb(err)\n  }, timeout)\n}\n\nfunction makeTimeoutPromise(desc, timeout) {\n  let to\n  const promise = new Promise((_, reject) => {\n    to = createTimeout(desc, timeout, reject)\n  })\n  return { timeout: to, promise }\n}\n\n/**\n * Create a promise which will be rejected after a timeout.\n * @param {!Promise} promise A promise to race with\n * @param {number} timeout Timeout in ms after which to reject\n * @param {string} [desc] Description of a promise to be printed in error\n * @returns {!Promise} A promise with a timeout\n */\nexport default async function createPromiseWithTimeout(promise, timeout, desc) {\n  if (!(promise instanceof Promise))\n    throw new Error('Promise expected')\n  if (!timeout)\n    throw new Error('Timeout must be a number')\n  if (timeout < 0)\n    throw new Error('Timeout cannot be negative')\n\n  const { promise: toPromise, timeout: to } = makeTimeoutPromise(desc, timeout)\n  try {\n    return await Promise.race([\n      promise,\n      toPromise,\n    ])\n  } finally {\n    clearTimeout(to)\n  }\n}","import { createInterface } from 'readline'\nimport promto from 'promto'\n\n/**\n * Ask user a question and wait for an answer.\n * @param {string} question Question to present to the user.\n * @param {{ password: (boolean| undefined), timeout: (number|undefined), input: (stream.Readable|NodeJS.ReadStream|undefined), output: (stream.Writable|NodeJS.WriteStream|undefined) }} options The options.\n */\nexport default function ask(question, options = {}) {\n  const {\n    timeout,\n    password = false,\n    output = process.stdout,\n    input = process.stdin,\n    ...rest\n  } = options\n  const rl = createInterface(/** @type {!readline.ReadLineOptions} */ ({\n    input,\n    output,\n    ...rest,\n  }))\n  if (password) {\n    /**\n     * Undocumented API.\n     * @type {!NodeJS.WriteStream}\n     * @suppress {checkTypes}\n     */\n    const o = rl['output']\n    /**\n     * Undocumented API.\n     * @suppress {checkTypes}\n     */\n    rl['_writeToOutput'] = (s) => {\n      if (['\\r\\n', '\\n', '\\r'].includes(s))\n        return o.write(s)\n\n      const v = s.split(question)\n      if (v.length == '2') {\n        o.write(question)\n        o.write('*'.repeat(v[1].length))\n      } else {\n        o.write('*')\n      }\n    }\n  }\n  const p = new Promise(rl.question.bind(rl, question))\n\n  const promise = timeout\n    ? promto(p, timeout, `reloquent: ${question}`)\n    : p\n  /**\n   * @suppress {checkTypes}\n   */\n  rl['promise'] = tryPromise(promise, rl)\n  return rl\n}\n\nconst tryPromise = async (promise, rl) => {\n  try {\n    const res = await promise\n    return res\n  } finally {\n    rl.close()\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('readline').ReadLineOptions} readline.ReadLineOptions\n */","import ask from './ask'\n\n/**\n * Color foreground with grey\n * @param {string} t\n */\nexport function c(t) {\n  return `\\x1b[90m${t}\\x1b[0m`\n}\n\n/**\n * Ask a set of questions.\n * @param {_reloquent.Questions} questions An object with questions as values\n * @param {number} [timeout] How long to wait before answer\n * @returns {!Promise<!Object<string, string>>} A promise where keys from the questions object are validated, assigned default values if required, and populated with answers. Validation function should either throw or return nothing, or throw an error.\n */\nexport default async function askQuestions(questions, timeout) {\n  if (typeof questions != 'object')\n    throw new Error('Please give an object with questions')\n\n  const keys = Object.keys(/** @type {!Object} */ (questions))\n  const res = await keys.reduce(async (acc, key) => {\n    const accRes = await acc\n\n    const value = questions[key]\n    /** @type {!_reloquent.Question} */\n    let question\n    switch (typeof value) {\n    case 'object':\n      question = /** @type {!_reloquent.Question} */ ({ ...value })\n      break\n    case 'string':\n      question = { text: value }\n      break\n    default:\n      throw new Error('A question must be a string or an object.')\n    }\n\n    question.text = `${question.text}${question.text.endsWith('?') ? '' : ':'} `\n\n    let defaultValue\n    let gotDefaultValue\n    if (question.defaultValue) {\n      defaultValue = question.defaultValue\n    }\n    if (question.getDefault) {\n      gotDefaultValue = await question.getDefault()\n    }\n\n    let dv = defaultValue || ''\n    if (defaultValue && gotDefaultValue && defaultValue != gotDefaultValue) {\n      dv = c(defaultValue)\n    } else if (defaultValue && defaultValue == gotDefaultValue) {\n      dv = ''\n    }\n    let gtd = gotDefaultValue || ''\n    const text = `${question.text}${dv ? `[${dv}] ` : ''}${gtd ? `[${gtd}] ` : ''}`\n    const { 'promise': promise } = ask(text, {\n      timeout,\n      password: question.password,\n    })\n\n    const a = await promise\n    let answer = a || gotDefaultValue || question.defaultValue\n\n    if (typeof question.validation == 'function') {\n      question.validation(answer)\n    }\n    if (typeof question.postProcess == 'function') {\n      answer = await question.postProcess(answer)\n    }\n    return {\n      ...accRes,\n      [key]: answer,\n    }\n  }, {})\n\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Questions} _reloquent.Questions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Question} _reloquent.Question\n */","import askQuestions from './lib/ask-questions'\n\n/**\n * Ask user questions via the CLI. Returns an object with keys as questions' texts and values as answers.\n * @param {_reloquent.Questions} questions A set of questions.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport default async function reloquent(questions, timeout) {\n  const res = await askQuestions(questions, timeout)\n  return res\n}\n\n/**\n * Ask user a question via the CLI. Returns the answer to the question.\n * @param {string|!_reloquent.Question} question A question to present to the user.\n * @param {number} [timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function askSingle(question, timeout) {\n  const { question: answer } = await askQuestions({ question }, timeout)\n  return answer\n}\n\n/**\n * Ask a yes/no question. Returns `true` when answer was `y` and `false` otherwise.\n * @param {string} question The question, such as \"Add default options\", or \"Continue to delete?\".\n * @param {_reloquent.ConfirmOptions} [options] Options for the confirmation question.\n * @param {boolean} [options.defaultYes=true] Whether the default value is _yes_. Default `true`.\n * @param {number} [options.timeout] How long to wait before rejecting the promise. Waits forever by default.\n */\nexport async function confirm(question, options = {}) {\n  const {\n    defaultYes = true,\n    timeout,\n  } = options\n  const hasQ = question.endsWith('?')\n  const text = `${hasQ ? question.replace(/\\?$/, '') : question} (y/n)${hasQ ? '?' : ''}`\n  const { question: answer } = await askQuestions({\n    question: {\n      text,\n      defaultValue: defaultYes ? 'y' : 'n',\n    },\n  }, timeout)\n  return answer == 'y'\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ConfirmOptions} _reloquent.ConfirmOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Question} _reloquent.Question\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Questions} _reloquent.Questions\n */\n","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import mismatch from 'mismatch'\nimport { askSingle } from 'reloquent'\nimport { c } from 'erte'\n\nexport const extractOptions = (body) => {\n  const res = mismatch(\n    /<option value=\"(\\d+-phone)\">(.+?(\\d\\d\\d))<\\/option>/g,\n    body,\n    ['value', 'title', 'last']\n  )\n  return res\n}\n\nexport const extractFormState = (body) => {\n  const res = mismatch(\n    /<input type=\"hidden\" name=\"(.+?)\" id=\"__\\w+\" value=\"(.*?)\" \\/>/g,\n    body,\n    ['name', 'value'],\n  )\n  const r = res.reduce((acc, { name, value }) => {\n    return {\n      ...acc,\n      [name]: value,\n    }\n  }, {})\n  return r\n}\n\nconst mapPhoneOptions = o => {\n  const r = /(.+?)(\\d\\d\\d)$/.exec(o)\n  if (!r) return o\n  const [, g, n] = r\n  const gr = c(g, 'grey')\n  const co = `${gr}${n}`\n  return co\n}\n\nconst getColorOptions = (options) => {\n  const n = options\n    .map(({ 'title': title }) => ` ${title}`)\n    .map(mapPhoneOptions)\n    .join('\\n')\n  return n\n}\n\nexport const askForNumber = async (options, phone) => {\n  const s = getColorOptions(options)\n  const text = `Which phone number to use for 2 factor auth\n${s}\nenter last 3 digits`\n\n  const answer = await askSingle({\n    text,\n    async getDefault() {\n      return phone || options[0]['last']\n    },\n    validation(a) {\n      const p = options.some(({ 'last': last }) => last == a)\n      if (!p) {\n        throw new Error('Unknown number entered.')\n      }\n    },\n  })\n\n  const { value } = options.find(({ 'last': last }) => last == answer)\n  return value\n}\n\n/**\n * @param {string} body\n */\nexport const extractXsrf = (body) => {\n  const re = /<input type=\"hidden\" id=\"x-ncpl-csrfvalue\" value=\"(.+?)\"/\n  const res = re.exec(body)\n  if (!res) throw new Error('Could not find the x-ncpl-csrfvalue token on the page.')\n  const [, token] = res\n  return token\n}\n\n/**\n * Single level deep equal.\n */\nexport const deepEqual = (o1, o2) => {\n  const r = Object.keys(o1).reduce((acc, key) => {\n    const val = o1[key]\n    const val2 = o2[key]\n    if (!(key in o2)) {\n      const k = `-  ${key}`\n      const s = c(`${k}: ${val}`, 'red')\n      return [...acc, s]\n    } else if (val !== val2) {\n      const k = `-  ${key}`\n      const k2 = `+  ${key}`\n      const s = c(`${k}: ${val}`, 'red')\n      const s2 = c(`${k2}: ${val2}`, 'green')\n      return [...acc, s, s2]\n    }\n    return acc\n  }, [])\n  const r2 = Object.keys(o2).reduce((acc, key) => {\n    const val = o1[key]\n    if (!(key in o1)) {\n      const k = `+  ${key}`\n      const s = c(`${k}: ${val}`, 'green')\n      return [...acc, s]\n    }\n    return acc\n  }, r)\n  if (r2.length) {\n    const m = `\n{\n${r2.join('\\n')}\n}`.trim()\n    throw new Error(m)\n  }\n}","import { debuglog } from 'util'\nimport { Session } from 'rqt'\nimport { ok } from 'assert'\nimport { askSingle } from 'reloquent'\nimport {\n  extractOptions, extractFormState, askForNumber,\n} from './'\n\nconst LOG = debuglog('@rqt/namecheap-web')\n\n/**\n * A class used for 2-factor authentication.\n */\nexport default class Authenticator {\n  constructor({\n    username,\n    password,\n    phone,\n    host,\n    userAgent,\n  } = {}) {\n    const session = new Session({\n      host,\n      headers: {\n        'User-Agent': userAgent,\n      },\n    })\n    this._username = username\n    this._password = password\n    this._session = session\n    this._phone = phone\n    /** @type {?string} */\n    this.SessionKey = null\n  }\n  async obtainSession() {\n    const u = '/cart/ajax/SessionHandler.ashx'\n    const { 'SessionKey': SessionKey } = await this.session.jqt(u)\n    if (!SessionKey)\n      throw new Error(`Could not acquire the session key from ${this.session.host}${u}.`)\n    LOG('Obtained a session key %s', SessionKey)\n    this.SessionKey = SessionKey\n  }\n  async signIn() {\n    const {\n      body,\n      statusCode,\n      headers: { location },\n    } = await this.session.aqt(Authenticator.LOGIN_URL, {\n      data: {\n        'hidden_LoginPassword': '',\n        'LoginUserName': this._username,\n        'LoginPassword': this._password,\n        'sessionEncryptValue': this.SessionKey,\n      },\n      type: 'form',\n    })\n    if (statusCode == 200) {\n      this.checkValidationError(body) // throws with validation message\n    } else if (statusCode == 301) {\n      return this.session.cookies\n    }\n    if (statusCode == 302 && location.includes(Authenticator.SECOND_AUTH_URL))\n      await this.secondAuth()\n    else throw new Error(`Unknown result (status code ${statusCode})`)\n    const { cookies } = this.session\n    return cookies\n  }\n  static get LOGIN_URL() {\n    return '/myaccount/login-signup/'\n  }\n  static get SECOND_AUTH_URL() {\n    return '/myaccount/twofa/secondauth.aspx'\n  }\n  /**\n   * @param {boolean} retry\n   */\n  async secondAuth(retry = false) {\n    const body = await this.session.rqt(Authenticator.SECOND_AUTH_URL)\n\n    ok(\n      /Select Phone Contact Number/.test(body),\n      'Could not find the \"Select Phone\" section.',\n    )\n\n    const options = extractOptions(body)\n    ok(options.length, 'Could not find any numbers.')\n\n    const value = await askForNumber(options, this._phone)\n\n    const fs = extractFormState(body)\n    const data = {\n      ...fs,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$ddlAuthorizeList': value,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnSendVerification': 'Proceed with Login',\n    }\n    const body2 = await this.session.rqt(Authenticator.SECOND_AUTH_URL, {\n      data,\n      type: 'form',\n    })\n\n    if (/You have reached the limit on the number.+/m.test(body2))\n      throw new Error(body2.match(/You have reached the limit on the number.+/m)[0])\n\n    const isError = /Error occured during Two-Factor authentication provider call./m.test(body2)\n    if (!retry && isError) {\n      console.log('Received an error message: Error occured during Two-Factor authentication provider call.')\n      console.log('Retrying to get the code, if you get 2 messages, dismiss the first one.')\n      return await this.secondAuth(true)\n    } else if (retry && isError) {\n      throw new Error('Error occured during Two-Factor authentication provider call.')\n    }\n    ok(\n      /We sent a message with the verification code/.test(body2),\n      'Could not find the code entry section.',\n    )\n\n    await this.submitCode(body2)\n  }\n  async submitCode(body) {\n    const [, b] = /Your 6-digit code begins with (\\d)./.exec(body) || []\n    if (!b) throw new Error('Could not send the code.')\n\n    const code = await askSingle({\n      text: `Security code (begins with ${b})`,\n    })\n    const fs = extractFormState(body)\n    const data = {\n      ...fs,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$txtAuthVerification': code,\n      'ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnVerify': 'Submit Security Code',\n    }\n\n    const {\n      body: body2,\n      headers: { location: location2 },\n    } = await this.session.aqt(Authenticator.SECOND_AUTH_URL, {\n      data,\n      type: 'form',\n    })\n    if (/Oops, you entered an invalid code.+/m.test(body2)) {\n      console.log('Incorrect code, try again.')\n      const res = await this.submitCode(body2)\n      return res\n    }\n    ok(/Object moved/.test(body2), 'Expected to have been redirected after sign-in.')\n    return location2\n  }\n  /**\n   * @param {string} body\n   */\n  checkValidationError(body) {\n    const validationErrorRe = /<strong class=\"title\">Validation Error<\\/strong>\\s+<div>(.+?)<\\/div>/\n    const [, err] = validationErrorRe.exec(body) || []\n    if (err) throw new Error(err.replace(/(<([^>]+)>)/ig, ''))\n  }\n  get session() {\n    return this._session\n  }\n}","import { Session } from 'rqt'\nimport { extractXsrf } from './'\n\n/** @param {_namecheap.AjaxResult} res */\nconst checkError = (res) => {\n  if (res.__isError) {\n    const err = new Error(res.Message)\n    Object.assign(err, res)\n    throw err\n  }\n  if (!res.Success) {\n    const t = res.Errors.map(({ Message }) => Message).join(', ')\n    const r = new Error(t)\n    r.__type = res.__type\n    throw r\n  }\n}\n\nexport default class App {\n  constructor({\n    cookies,\n    host,\n    userAgent,\n    password, // needed for confirmations\n  }) {\n    const session = new Session({\n      host,\n      headers: {\n        'User-Agent': userAgent,\n      },\n    })\n    session.cookies = cookies\n    this._session = session\n    this.password = password\n  }\n  get session() {\n    return this._session\n  }\n  /**\n   * @param {string} body\n   */\n  getToken(body) {\n    const token = extractXsrf(body)\n    return token\n  }\n  async test() {\n    const { statusCode } = await this.session.aqt('/', {\n      justHeaders: true,\n    })\n    const res = statusCode == 200\n    return res\n  }\n  /**\n   * @param {string} ipAddress\n   * @param {string} [name]\n   */\n  async whitelistIP(\n    ipAddress,\n    name = `@rqt ${new Date().toLocaleString()}`.replace(/:/g, '-'),\n  ) {\n    const token = await this.requestToken(App.WHITELISTED_UPS)\n    const apiUrl = App.getApiUrl('AddIpAddress')\n    const data = {\n      'accountPassword': this.password,\n      'ipAddress': ipAddress,\n      'name': name,\n    }\n    await this.request(apiUrl, token, data)\n  }\n  static get WHITELISTED_UPS() {\n    return '/settings/tools/apiaccess/whitelisted-ips'\n  }\n  /**\n   * @param {string} name\n   */\n  async removeWhitelistedIP(name) {\n    const token = await this.requestToken(App.WHITELISTED_UPS)\n    const apiUrl = App.getApiUrl('RemoveIpAddresses')\n    await this.request(apiUrl, token, {\n      'accountPassword': this.password,\n      'names': [name],\n    })\n  }\n  static getApiUrl(page) {\n    return `/api/v1/ncpl/apiaccess/ui/${page}`\n  }\n  /**\n   * @param {string} url\n   */\n  async requestToken(url) {\n    const body = await this.session.rqt(url)\n    const token = this.getToken(body)\n    return token\n  }\n  async getWhitelistedIPList() {\n    const token = await this.requestToken(App.WHITELISTED_UPS)\n    const apiUrl = App.getApiUrl('GetWhitelistedIpAddresses')\n    const { 'IpAddresses': IpAddresses } = await this.request(apiUrl, token)\n    const res = IpAddresses\n      .map(({ 'Name': name, 'IpAddress': ip, 'ModifyDate': date }) => ({\n        'Name': name,\n        'IpAddress': ip,\n        'ModifyDate': new Date(`${date}Z`),\n      }))\n    return res\n  }\n  /**\n   * @param {string} url\n   * @param {string} token\n   * @param {!Object} [data]\n   */\n  async request(url, token, data) {\n    const res = /** @type {_namecheap.AjaxResult} */ (await this.session.jqt(url, {\n      data,\n      headers: {\n        'x-ncpl-rcsrf': token,\n      },\n    }))\n    checkError(res)\n    const { Data } = res\n    return Data\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').AjaxResult} _namecheap.AjaxResult\n */","import { Session } from 'rqt'\n\n/**\n * @param {string} domain\n * @param {string} USER_AGENT\n */\nconst whois = async (domain, USER_AGENT) => {\n  const s = new Session({\n    host: 'https://www.namecheap.com/domains/whois',\n    headers: {\n      'User-Agent': USER_AGENT,\n    },\n  })\n  const res = await s.rqt(`/results.aspx?domain=${domain}`)\n  const re = /var url = \"\\/domains\\/whois\\/whois-ajax\\.aspx\\?(.+?)\"/\n  const reRes = re.exec(res)\n  if (!reRes) throw new Error('Could not find the AJAX request URL.')\n  const [, params] = reRes\n  const res2 = await s.rqt(`/whois-ajax.aspx?${params}`)\n  const re2 = /<pre id=\".+?_whoisResultText\" class=\"wrapped whois\">([\\s\\S]+)<\\/pre>/\n  const re2Res = re2.exec(res2)\n  if (!re2Res) throw new Error('Could not extract data.')\n  const [, w] = re2Res\n  return w\n}\n\nexport default whois\n","import { debuglog } from 'util'\nimport bosom from 'bosom'\nimport getIp from '@rqt/ip'\nimport Authenticator from './lib/Authenticator'\nimport App from './lib/App'\nimport { deepEqual } from './lib'\nimport whois from './whois'\nimport coupon from './coupon'\n\nconst LOG = debuglog('@rqt/namecheap-web')\n\n/**\n * @param {boolean} [S]\n */\nconst getHost = (S = false) => {\n  return `https://www.${S ? 'sandbox.' : ''}namecheap.com`\n}\n/**\n * @param {boolean} [S]\n */\nconst getApHost = (S = false) => {\n  return `https://ap.www.${S ? 'sandbox.' : ''}namecheap.com`\n}\n\nconst USER_AGENT = 'Mozilla/5.0 (Node.js; @rqt/namecheap-web) https://github.com/rqt/namecheap-web'\n\n/**\n * An API to namecheap.com via the web interface, with an ability to log in using 2-factor Auth and check Whois.\n * @implements {_namecheap.NamecheapWeb}\n */\nexport default class NamecheapWeb {\n  /**\n   * Create an instance of a new client.\n   * @param {!_namecheap.WebOptions} options Options for the web client.\n   * @param {boolean} [options.sandbox=false] Whether to use the `sandbox` version. Default `false`.\n   * @param {boolean} [options.readSession=false] Read and store the cookies for the session from the local file. Default `false`.\n   * @param {string} [options.sessionFile=\".namecheap-web.json\"] If reading session, indicates the file where to store cookies. Default `.namecheap-web.json`.\n   */\n  constructor(options = {}) {\n    const {\n      sandbox,\n      readSession,\n      sessionFile = '.namecheap-web.json',\n    } = options\n    this.settings = {\n      sandbox,\n      readSession,\n      sessionFile,\n    }\n    /** @type {App} */\n    this._app = null\n  }\n\n  /**\n   * Get the public IP address using https://api.ipify.org.\n   * @nocollapse\n   * @suppress {checkTypes}\n   */\n  static async 'LOOKUP_IP'() {\n    const res = await getIp()\n    return res\n  }\n  /**\n   * Return the whois information about the domain.\n   * @nocollapse\n   * @suppress {checkTypes}\n   * @param {string} domain\n   */\n  static async 'WHOIS'(domain) {\n    return whois(domain, USER_AGENT)\n  }\n  /**\n   *\n   * Return the coupon from the https://www.namecheap.com/promos/coupons/ page.\n   * @nocollapse\n   * @suppress {checkTypes}\n   */\n  static async 'COUPON'() {\n    return coupon(USER_AGENT)\n  }\n  /**\n   * Return the coupon from the https://www.sandbox.namecheap.com/promos/coupons/ page.\n   * @nocollapse\n   * @suppress {checkTypes}\n   */\n  static async 'SANDBOX_COUPON'() {\n    return coupon(USER_AGENT, true)\n  }\n\n  /**\n   * @param {string} username\n   * @param {string} password\n   * @param {string} [phone]\n   * @param {boolean} [force]\n   */\n  async auth(username, password, phone, force = false) {\n    let cookies\n    if (this.settings.readSession && !force) {\n      cookies = await getSession(this.settings.sessionFile)\n    }\n    if (!cookies) {\n      const host = getHost(this.settings.sandbox)\n      const authenticator = new Authenticator({\n        username,\n        password,\n        host,\n        phone,\n        userAgent: USER_AGENT,\n      })\n\n      await authenticator.obtainSession()\n      cookies = await authenticator.signIn()\n      await this._saveSession(cookies)\n    }\n\n    const apHost = getApHost(this.settings.sandbox)\n    this._app = new App({\n      cookies,\n      password,\n      host: apHost,\n      userAgent: USER_AGENT,\n    })\n    const works = await this._wrap(this._app.test())\n    if (!works && force) {\n      throw new Error('Could not authenticate.')\n    }\n    if (!works) {\n      await this.auth(username, password, phone, true)\n    }\n  }\n  async _saveSession(cookies) {\n    if (this.settings.readSession) {\n      await saveSession(cookies, this.settings.sessionFile)\n    }\n  }\n  /**\n   * Execute a method from the app and update cookies file if needed (to extend session).\n   * @private\n   */\n  async _wrap(p) {\n    const c = getAllowedCookies(this._app.session.cookies)\n    const res = await p\n    const c2 = getAllowedCookies(this._app.session.cookies)\n    try {\n      deepEqual(c, c2)\n    } catch ({ message }) {\n      LOG(message)\n      await this._saveSession(c2)\n    }\n    return res\n  }\n  /**\n   * Add an IP to white-listed IPs.\n   * @param {string} ip\n   * @param {string} [name]\n   */\n  async whitelistIP(ip, name) {\n    await this._wrap(this._app.whitelistIP(ip, name))\n  }\n  /**\n   * Get the list of all whitelisted IP addresses from https://ap.www.namecheap.com/settings/tools/apiaccess/whitelisted-ips.\n   */\n  async getWhitelistedIPList() {\n    const res = /** @type {!Array<!_namecheap.WhitelistedIP>} */ (await this._wrap(this._app.getWhitelistedIPList()))\n    return res\n  }\n  /**\n   * Remove the IP from the white-listed IPs by its name.\n   * @param {string} name\n   */\n  async removeWhitelistedIP(name) {\n    await this._wrap(this._app.removeWhitelistedIP(name))\n  }\n}\n\nconst getAllowedCookies = (cookies) => {\n  const keys = ['x-ncpl-auth', '.ncauth', 'SessionId', 'U']\n  return Object.keys(cookies).reduce((acc, k) => {\n    if (keys.includes(k)) return { ...acc, [k]: cookies[k] }\n    return acc\n  }, {})\n}\n\nconst getSession = async (path) => {\n  try {\n    const cookies = await bosom(path)\n    return cookies\n  } catch (err) {\n    return null\n  }\n}\nconst saveSession = async (cookies, path) => {\n  await bosom(path, cookies)\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').WebOptions} _namecheap.WebOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').WhitelistedIP} _namecheap.WhitelistedIP\n */","import rqt from 'rqt'\n\n/**\n * @param {string} USER_AGENT\n * @param {boolean=} sandbox\n */\nconst coupon = async (USER_AGENT, sandbox = false) => {\n  const h = sandbox ? 'sandbox.' : ''\n  const s = await rqt(`https://www.${h}namecheap.com/promos/coupons/`, {\n    headers: {\n      'User-Agent': USER_AGENT,\n    },\n  })\n  const res = /<small>Coupon Code<\\/small>\\s+.+couponCode\">(.+)<\\/span>/.exec(s)\n  if (!res) throw new Error('Could not find the coupon code.')\n  return res[1]\n}\n\nexport default coupon","/**\n * Generate a usage string.\n * @param {!_usually.Config} config The configuration object.\n * @param {!Object<string, string>} config.usage The map with possible arguments (flags, options) and their information.\n * @param {string} [config.description] What does the program do?\n * @param {string} [config.line] The summary of the program in one line.\n * @param {string} [config.example] The example of the program usage.\n * @example\n```\nimport usually from 'usually'\n\nconst res = usually({\n  usage: {\n    '-h': 'print help',\n    '-c': 'execute this command',\n  },\n  description: 'A test command-line application',\n  line: 'usually [-c command|command2] [-h]',\n  example: 'usually -c command2',\n})\n// A test command-line application\n//\n//  usually [-c command|command2] [-h]\n//\n//        -h      print help\n//        -c      execute this command\n//\n//  Example:\n//\n//    usually -c command2\n//\n```\n */\nexport default function usually(config = { usage: {} }) {\n  const {\n    usage = {},\n    description,\n    line,\n    example,\n  } = config\n  const commands = Object.keys(usage)\n  const descriptions = Object.values(usage)\n\n  const [commandLength] = commands.reduce(([longestName = 0, longestDescription = 0], name) => {\n    const command = usage[name]\n    const theLongest = command.split('\\n')\n      .reduce((acc, c) => {\n        if (c.length > acc) return c.length\n        return acc\n      }, 0)\n    if (theLongest > longestDescription) longestDescription = theLongest\n    if (name.length > longestName) longestName = name.length\n    return [longestName, longestDescription]\n  }, [])\n\n  const pad = (string, length) => {\n    const l = length - string.length\n    const ts = ' '.repeat(l)\n    const s = `${string}${ts}`\n    return s\n  }\n\n  const usa = commands.reduce((acc, command, i) => {\n    const value = descriptions[i]\n    const vals = value.split('\\n')\n    const c = pad(command, commandLength)\n    const [firstVal, ...otherVals] = vals\n    const firstLine = `${c}\\t${firstVal}`\n    const emptyPad = pad('', commandLength)\n    const otherLines = otherVals.map(val => {\n      const r = `${emptyPad}\\t${val}`\n      return r\n    })\n    const res = [...acc, firstLine, ...otherLines]\n    return res\n  }, [])\n\n  const USA = usa.map(a => `\\t${a}`)\n  const s = [\n    description,\n    `  ${line || ''}`,\n  ].filter(l => l ? l.trim() : l).join('\\n\\n')\n  const u = `${s ? `${s}\\n` : ''}\n${USA.join('\\n')}\n`\n\n\n  if (example) {\n    return `${u}\n  Example:\n\n    ${example}\n`\n  }\n\n  return u\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_usually.Config} Config The configuration object.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _usually.Config The configuration object.\n * @prop {!Object<string, string>} usage The map with possible arguments (flags, options) and their information.\n * @prop {string} [description] What does the program do?\n * @prop {string} [line] The summary of the program in one line.\n * @prop {string} [example] The example of the program usage.\n */\n","/**\n * @param {Array<string>} argv\n * @param {string} long\n * @param {string} [short]\n * @param {boolean} [bool]\n * @param {boolean} [number]\n */\nconst find = (argv, long, short, bool = false, number = false) => {\n  const re = short ? new RegExp(`^-(${short}|-${long})`)\n    : new RegExp(`^--${long}`)\n  const i = argv.findIndex(a => re.test(a))\n  if (i == -1) return { argv }\n\n  if (bool) {\n    return {\n      value: true,\n      argv: [\n        ...argv.slice(0, i),\n        ...argv.slice(i + 1),\n      ],\n    }\n  }\n\n  const j = i + 1\n  let value = argv[j]\n\n  if (!value || (typeof value == 'string' && value.startsWith('--'))) return { argv }\n\n  if (number) {\n    value = parseInt(value, 10)\n  }\n  return {\n    value,\n    argv: [\n      ...argv.slice(0, i),\n      ...argv.slice(j + 1),\n    ],\n  }\n}\n\n/**\n * Parse the config and extract arguments from the `process.argv` array.\n * @param {!_argufy.Config} config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n *\n * - __short__ Shorthand for this argument, usually one letter.\n * - __boolean__ Does not have to be followed by a value, true if given.\n * - __number__ Parse as a number.\n * - __command__ Whether this argument can be specified as the first argument without the dash, such as `example run`.\n * - __multiple__ Extract multiple commands as an  array when `command` is set to true.\n *\n * @example\n```\nconst config = {\n  title: 't',       // program -t Title\n  open: {           // program -o\n    short: 'o',\n    boolean: true,\n  },\n  delay: {          // program -d 100\n    short: 'd',\n    number: true,\n  },\n  file: {           // program File.txt\n    command: true,\n  },\n  file2: {           // program File.txt File2.txt\n    command: true,\n    multiple: true,\n  },\n}\n```\n * @param {!Array<string>} [args] Array with arguments to parse. `process.argv` is used by default. It is assumed that user arguments start from the 3rd position.\n * @returns {Object<string, string|Array<string>|boolean|number>} An object with all found values for the configuration request.\n */\nexport default function argufy(config = {}, args = process.argv) {\n  let [, , ...argv] = args\n  const titles = findTitles(argv)\n  argv = argv.slice(titles.length)\n  let commandFound = !titles.length\n  const res = Object.keys(config).reduce(({ _argv, ...acc }, key) => {\n    if (_argv.length == 0 && commandFound) return { _argv, ...acc }\n    const val = config[key]\n    let value\n    if (typeof val == 'string') {\n      ({ value, argv: _argv } = find(_argv, key, val))\n    } else {\n      try {\n        const { short, boolean, number, command, multiple } = val\n        if (command && multiple && titles.length) {\n          value = titles\n          commandFound = true\n        } else if (command && titles.length) {\n          value = titles[0]\n          commandFound = true\n        } else {\n          ({ value, argv: _argv } = find(_argv, key, short, boolean, number))\n        }\n      } catch (err) {\n        return { _argv, ...acc }\n      }\n    }\n    if (value === undefined) return { _argv, ...acc }\n    const r = { _argv, ...acc, [key]: value }\n    return r\n  }, {\n    _argv: argv,\n  })\n  return res\n}\n\n/** @param {!Array<string>} argv */\nconst findTitles = argv => {\n  const titles = []\n  for (let i = 0; i < argv.length; i++) {\n    const a = argv[i]\n    if (a.startsWith('-')) break\n    titles.push(a)\n  }\n  return titles\n}\n\n/**\n * Based on the argufy config, creates an object that can be passed to `usually`.\n * @param {!_argufy.Config} argsConfig The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n * @example\n```\n{ 'input': 'The input to the program',\n  '--output, -o': 'The output of the program', }\n```\n */\nexport const reduceUsage = (argsConfig) => {\n  const a = Object.keys(argsConfig).reduce((acc, key) => {\n    const val = argsConfig[key]\n    if (typeof val == 'string') {\n      const k = `-${val}`\n      acc[k] = ''\n      return acc\n    }\n    let k = val.command ? key : `--${key}`\n    if (val.short) k = `${k}, -${val.short}`\n    let d = val.description\n    if (val.default) d = `${d}\\nDefault: ${val.default}.`\n    acc[k] = d\n    return acc\n  }, {})\n  return a\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_argufy.Config} Config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object<string, string|!_argufy.Flag>} _argufy.Config The configuration for parsing, where each key is a flag name and values are either strings, or objects with possible properties:\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_argufy.Flag} Flag The flag passed to the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _argufy.Flag The flag passed to the program.\n * @prop {string} [short] Shorthand for this argument, usually one letter.\n * @prop {boolean} [boolean=false] Whether the flag is a boolean and does not require a value. Default `false`.\n * @prop {boolean} [number=false] Specifies whether the flag should be parsed as a number. Default `false`.\n * @prop {boolean} [command=false] If set to true, the value is read from the first argument passed to the CLI command (e.g., `$ cli command`). Default `false`.\n * @prop {boolean} [multiple=false] When using the `command` property, will parse the commands as an array. Default `false`.\n * @prop {string} [default] The default value for the argument. Does not actually set the value, only used in reducing the usage info (`argufy` bin on the other hand will set the default).\n * @prop {string} [description] The description to be used by `usually`.\n */\n","import argufy from 'argufy'\n\nexport const argsConfig = {\n  'domains': {\n    description: 'The domain name for operations, or multiple domain names\\nfor checking availability.',\n    command: true,\n    multiple: true,\n  },\n  'init': {\n    description: 'Initialise package configuration interactively, i.e.,\\nthe API key and ip address.',\n    boolean: true,\n    short: 'I',\n  },\n  'info': {\n    description: 'Show the information for the domain.',\n    boolean: true,\n    short: 'i',\n  },\n  'register': {\n    description: 'Register the domain.',\n    boolean: true,\n    short: 'r',\n  },\n  'github': {\n    description: 'Setup GitHub pages for the apex domain as per docs\\nhttps://git.io/fjyr7 Also removes the parking page\\nand URL redirect. All other hosts are kept itact.',\n    boolean: true,\n    short: 'g',\n  },\n  'whois': {\n    description: 'Display brief WHOIS data.',\n    boolean: true,\n    short: 'w',\n  },\n  'Whois': {\n    description: 'Display full WHOIS data.',\n    boolean: true,\n  },\n  'coupon': {\n    description: 'Find this month\\'s coupon.',\n    boolean: true,\n  },\n  'sandbox': {\n    description: 'Use the sandbox API.',\n    boolean: true,\n    short: 's',\n  },\n  'whitelistIP': {\n    description: 'Add current IP address to the list of white-listed ones.',\n    boolean: true,\n    short: 'W',\n  },\n  'version': {\n    description: 'Display the current version number.',\n    boolean: true,\n    short: 'v',\n  },\n  'help': {\n    description: 'Show help information.',\n    boolean: true,\n    short: 'h',\n  },\n}\nconst args = argufy(argsConfig)\n\n/**\n * The domain name for operations, or multiple domain names\n    for checking availability.\n */\nexport const _domains = /** @type {(!Array<string>|string)} */ (args['domains'])\n\n/**\n * Initialise package configuration interactively, i.e.,\n    the API key and ip address.\n */\nexport const _init = /** @type {boolean} */ (args['init'])\n\n/**\n * Show the information for the domain.\n */\nexport const _info = /** @type {boolean} */ (args['info'])\n\n/**\n * Register the domain.\n */\nexport const _register = /** @type {boolean} */ (args['register'])\n\n/**\n * Setup GitHub pages for the apex domain as per docs\n    https://git.io/fjyr7 Also removes the parking page\n    and URL redirect. All other hosts are kept itact.\n */\nexport const _github = /** @type {boolean} */ (args['github'])\n\n/**\n * Display brief WHOIS data.\n */\nexport const _whois = /** @type {boolean} */ (args['whois'])\n\n/**\n * Display full WHOIS data.\n */\nexport const _Whois = /** @type {boolean} */ (args['Whois'])\n\n/**\n * Find this month's coupon.\n */\nexport const _coupon = /** @type {boolean} */ (args['coupon'])\n\n/**\n * Use the sandbox API.\n */\nexport const _sandbox = /** @type {boolean} */ (args['sandbox'])\n\n/**\n * Add current IP address to the list of white-listed ones.\n */\nexport const _whitelistIP = /** @type {boolean} */ (args['whitelistIP'])\n\n/**\n * Display the current version number.\n */\nexport const _version = /** @type {boolean} */ (args['version'])\n\n/**\n * Show help information.\n */\nexport const _help = /** @type {boolean} */ (args['help'])\n\nexport const argsConfigCheck = {\n  'free': {\n    description: 'Display only free domains.',\n    boolean: true,\n    short: 'f',\n  },\n  'zones': {\n    description: 'Check in these zones only.',\n    short: 'z',\n  },\n}\nconst argsCheck = argufy(argsConfigCheck, [process.argv[0], process.argv[1], ...args._argv])\n\n/**\n * Display only free domains.\n */\nexport const _free = /** @type {boolean} */ (argsCheck['free'])\n\n/**\n * Check in these zones only.\n */\nexport const _zones = /** @type {string} */ (argsCheck['zones'])\n\nexport const argsConfigInfo = {\n  'sort': {\n    description: 'Sort by this field (name, expire, create).',\n    short: 'S',\n  },\n  'desc': {\n    description: 'Sort in descending order.',\n    boolean: true,\n    short: 'D',\n  },\n  'filter': {\n    description: 'Filter by this word.',\n    short: 'F',\n  },\n  'pageSize': {\n    description: 'The page size.',\n    short: 'P',\n  },\n  'type': {\n    description: 'Domain type (ALL, EXPIRING, EXPIRED).',\n    short: 'T',\n  },\n}\nconst argsInfo = argufy(argsConfigInfo, [process.argv[0], process.argv[1], ...argsCheck._argv])\n\n/**\n * Sort by this field (name, expire, create).\n */\nexport const _sort = /** @type {string} */ (argsInfo['sort'])\n\n/**\n * Sort in descending order.\n */\nexport const _desc = /** @type {boolean} */ (argsInfo['desc'])\n\n/**\n * Filter by this word.\n */\nexport const _filter = /** @type {string} */ (argsInfo['filter'])\n\n/**\n * The page size.\n */\nexport const _pageSize = /** @type {string} */ (argsInfo['pageSize'])\n\n/**\n * Domain type (ALL, EXPIRING, EXPIRED).\n */\nexport const _type = /** @type {string} */ (argsInfo['type'])\n\nexport const argsConfigRegister = {\n  'promo': {\n    description: 'Use this promo code on registration.',\n    short: 'p',\n  },\n  'years': {\n    description: 'The number of years that the domain should be registered for.',\n    short: 'y',\n  },\n}\nconst argsRegister = argufy(argsConfigRegister, [process.argv[0], process.argv[1], ...argsInfo._argv])\n\n/**\n * Use this promo code on registration.\n */\nexport const _promo = /** @type {string} */ (argsRegister['promo'])\n\n/**\n * The number of years that the domain should be registered for.\n */\nexport const _years = /** @type {string} */ (argsRegister['years'])\n\n/**\n * The additional arguments passed to the program.\n */\nexport const _argv = /** @type {!Array<string>} */ (argsRegister._argv)","import { c } from 'erte'\n\nexport const validateDomains = (arr) => arr.reduce((acc, current) => {\n  return acc && typeof current == 'string'\n}, true)\n\nexport const allZones = [\n  'com',\n  'net',\n  'org',\n  'biz',\n  'co',\n  'cc',\n  'io',\n  'bz',\n  'nu',\n  'app',\n  'page',\n]\n\nexport const isSingleWord = d => !/\\./.test(d)\n\nexport const makeList = (d, zones) => {\n  const z = zones.length ? allZones.filter(zone => {\n    return zones.includes(zone)\n  }) : allZones\n  const res = z.map(s => `${d}.${s}`)\n  return res\n}\n\nconst TICK = c('\\u2713', 'green')\nconst CROSS = c('\\u2717', 'red')\nconst DASH = c('-', 'grey')\n\nconst day = 24*60*60*1000\n\nexport const mapDomains = (domains) => {\n  return domains.map(domain => {\n    const { Created, Expires, IsOurDNS } = domain\n    const cr = Date.parse(Created)\n    const e = Date.parse(Expires)\n    const t = (new Date).getTime()\n    const Expiry = Math.round(Math.abs((e - t) / day))\n    const since = Math.round(Math.abs((t - cr) / day))\n    const d = t - new Date(cr).getTime()\n    const Years = Math.abs(new Date(d).getUTCFullYear() - 1970)\n    return {\n      ...domain,\n      'Since': since,\n      'Expiry': Expiry,\n      'Years': Years,\n      'DNS': IsOurDNS,\n    }\n  })\n}\n\nexport const getWhois = (value) => {\n  if (value == 'ENABLED') return { value: TICK, length: 1 }\n  if (value == 'NOTPRESENT') return { value: DASH, length: 1 }\n  return { value, length: value.length }\n}\n\nexport const getAppName = (sandbox) => {\n  const n = sandbox ? 'expensive-sandbox' : 'expensive'\n  return n\n}","import usually from 'usually'\nimport { reduceUsage } from 'argufy'\nimport { c } from 'erte'\nimport { argsConfig, argsConfigCheck, argsConfigRegister, argsConfigInfo } from './get-args'\nimport { allZones } from '../lib'\n\nconst l = allZones.join(', ')\n\nexport default () => {\n  const def = usually({\n    usage: reduceUsage(argsConfig),\n    description: c('expensive', 'yellow') + `\nA CLI application to access namecheap.com domain name registrar API.`,\n  })\n  const info = usually({\n    usage: {},\n    description: c('expensive domain.com --info', 'magenta') + `\nDisplay the information about the domain on the account.\nAlso displays DNS hosts if using Namecheap's DNS.`,\n  }).trim() + '\\n'\n  const list = usually({\n    description: c('expensive', 'red') + `\nPrint the list of domains belonging to the account.`,\n    usage: reduceUsage(argsConfigInfo),\n  })\n  const reg = usually({\n    description: c('expensive domain.com -r [-p PROMO]', 'green') + `\nRegister the domain name. Expensive will attempt to find the promo\ncode online, and compare its price to the normal price.`,\n    usage: reduceUsage(argsConfigRegister),\n  })\n  const check = usually({\n    description: c('expensive domain|domain.com [domain.org] [-f] [-z app,page]', 'blue') + `\nCheck domains for availability. When no TLD is given,\n${l} are checked.`,\n    usage: reduceUsage(argsConfigCheck),\n  })\n\n  const u = [def, info, list, reg, check].join('\\n')\n\n  return u\n}\n","const heading = (h) => {\n  const value = `\\x1b[1m${h}\\x1b[0m`\n  return { value, length: h.length }\n}\n\nconst getLength = (value) => {\n  return `${value}`.replace(/\\033\\[.*?m/g, '').length\n}\n\nconst makeBinaryHash = (arr) => {\n  const res = arr.reduce((acc, current) => {\n    return {\n      ...acc,\n      [current]: true,\n    }\n  }, {})\n  return res\n}\n\n/**\n * Display values in a table.\n * @param {!_tablature.Config} conf Options for the program.\n */\nexport default function tablature(conf) {\n  const {\n    keys = [],\n    data = [],\n    headings = {},\n    replacements = {},\n    centerValues = [],\n    centerHeadings = [],\n  } = conf\n  const [i] = data\n  if (!i) return ''\n\n  const cv = makeBinaryHash(centerValues)\n  const hv = makeBinaryHash(centerHeadings)\n\n  const k = Object.keys(i).reduce((acc, key) => {\n    const h = headings[key]\n    return {\n      ...acc,\n      [key]: h ? h.length : key.length, // initialise with titles lengths\n    }\n  }, {})\n\n  const widths = data.reduce((dac, d) => {\n    const res = Object.keys(d).reduce((acc, key) => {\n      const maxLength = dac[key]\n      const val = d[key]\n      const r = getReplacement(replacements, key)\n      const { length } = r(val)\n      return {\n        ...acc,\n        [key]: Math.max(length, maxLength),\n      }\n    }, {})\n    return res\n  }, k)\n\n  const kk = keys.reduce((acc, key) => {\n    const h = headings[key]\n    return {\n      ...acc,\n      [key]: h || key,\n    }\n  }, {})\n  const hr = keys.reduce((acc, key) => {\n    return {\n      ...acc,\n      [key]: heading,\n    }\n  }, {})\n  const hl = getLine(keys, kk, widths, hr, hv)\n  const rl = data.map((row) => {\n    const line = getLine(keys, row, widths, replacements, cv)\n    return line\n  })\n  return [\n    hl,\n    ...rl,\n  ].join('\\n')\n}\n\nconst pad = (val, length, replacement, cen) => {\n  if (val === undefined) return ' '.repeat(length)\n  let v = val\n  let l\n  if (replacement) {\n    const { value, length: len } = replacement(val)\n    v = value\n    l = len\n  } else {\n    l = `${val}`.length\n  }\n  const p = length - l\n  if (cen) {\n    const left = Math.floor(p / 2)\n    const right = p - left\n    const s = ' '.repeat(left) + v + ' '.repeat(right)\n    return s\n  }\n  const s = ' '.repeat(p)\n  return `${v}${s}`\n}\n\nconst getReplacement = (replacements, key) => {\n  const r = replacements[key]\n  if (!r) return value => ({\n    value,\n    length: getLength(value),\n  })\n  return r\n}\n\nconst getLine = (keys, values, widths, replacements = {}, center = {}) => {\n  let currentWidth = 0\n  const k = keys.map(key => {\n    const w = widths[key]\n    if (!w) throw new Error(`Unknown field ${key}`)\n    const v = values[key]\n    const r = getReplacement(replacements, key)\n    const cen = center[key]\n    const [rh, ...rows] = `${v}`.split('\\n')\n    const h = pad(rh, w, r, cen)\n    let rs = ''\n    if (rows.length) {\n      rs = '\\n' + rows.map(row => {\n        const wb = ' '.repeat(currentWidth)\n        const rv = pad(row, w, r, cen)\n        return `${wb}${rv}`\n      }).join('\\n')\n    }\n    const res = `${h}${rs}`\n    currentWidth += w + 2\n    return res\n  })\n  const line = k.join('  ')\n  return line\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _tablature.Config\n */","import tablature from 'tablature'\nimport { mapDomains, getWhois as WhoisGuard } from '../'\n\nexport default function printList(domains = []) {\n  if (!domains.length) {\n    console.log('No domains')\n    return\n  }\n  // adds the [Since, Expiry, Years, DNS] properties\n  const data = mapDomains(domains)\n  const s = tablature({\n    keys: ['Name', 'Expiry', 'Years', 'WhoisGuard', 'DNS'],\n    data,\n    headings: {\n      WhoisGuard: 'Whois',\n    },\n    replacements: {\n      WhoisGuard,\n      'DNS'(val) {\n        if (val) return { value: 'yes', length: 3 }\n        return { value: '', length: 0 }\n      },\n      'Years'(value) {\n        if (value) return { value, length: `${value}`.length }\n        return { value: '', length: 0 }\n      },\n    },\n    centerValues: ['WhoisGuard'],\n  })\n  console.log(s)\n}\n\n","import { confirm } from 'reloquent'\nimport printList from '../../lib/print/list'\n\n/** @param {_namecheap.NameCheap} nc */\nexport default async function list(nc, {\n  sort,\n  desc,\n  page,\n  filter,\n  type,\n  pageSize,\n} = {}) {\n  const { domains, ...pagination } = await nc.domains.getList({\n    page,\n    sort,\n    desc,\n    filter,\n    type,\n    pageSize,\n  })\n  printList(domains)\n  const nextPage = getNextPage(pagination)\n  if (nextPage) {\n    const t = getNavigation(pagination)\n    const answer = await confirm(`Page ${t}. Display more`)\n    if (answer) {\n      await list(nc, {\n        page: nextPage,\n        sort,\n        desc,\n        filter,\n        type,\n        pageSize,\n      })\n    }\n  }\n}\n\nconst getNextPage = ({ CurrentPage, TotalItems, PageSize }) => {\n  if (CurrentPage * PageSize < TotalItems) {\n    return CurrentPage + 1\n  }\n}\n\nconst getNavigation = ({ CurrentPage, TotalItems, PageSize }) => {\n  return `${CurrentPage}/${Math.ceil(TotalItems/PageSize)}`\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap')} _namecheap.NameCheap\n */\n","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","import { c } from 'erte'\nimport tablature from 'tablature'\nimport bosom from 'bosom'\nimport { homedir } from 'os'\nimport { resolve } from 'path'\nimport { existsSync } from 'fs'\nimport { makeList, isSingleWord } from '../../lib'\n\nconst path = resolve(homedir(), '.expensive.log')\n\n/**\n * @param {!_namecheap.NameCheap} nc\n */\nexport default async function check(nc, {\n  domains: d,\n  free,\n  zones = '',\n}) {\n  const domains = d\n    .reduce((acc, domain) => {\n      const singleWord = isSingleWord(domain)\n      if (singleWord) {\n        const z = zones ? zones.split(',') : []\n        const list = makeList(domain, z)\n        return [...acc, ...list]\n      }\n      return [...acc, domain]\n    }, [])\n\n  console.log('Checking domain%s %s', domains.length > 1 ? 's' : '', domains.join(', '))\n\n  const res = await nc.domains.check({\n    domains,\n  })\n  /** @type {!Array<!_namecheap.DomainCheck>} */\n  const ordered = domains.map((domain) => {\n    const found = res.find(({ Domain }) => Domain == domain)\n    if (found.PremiumRegistrationPrice) {\n      /** @suppress {checkTypes} */\n      found.PremiumRegistrationPrice = parseFloat(found.PremiumRegistrationPrice)\n    }\n    return found\n  })\n  const data = free ? ordered.filter(({ Available }) => Available) : ordered\n\n  const hasPremium = data.some(({ IsPremiumName }) => IsPremiumName)\n  const hasPremiumRegPrice = data.some(({ PremiumRegistrationPrice }) =>\n    PremiumRegistrationPrice\n  )\n  const t = tablature({\n    keys: ['Domain', 'Available',\n      ...(hasPremium ? ['IsPremiumName'] : []),\n      ...(hasPremiumRegPrice ? ['PremiumRegistrationPrice'] : []),\n    ],\n    data: data.map((domain) => {\n      return {\n        ...domain,\n        Available: domain.Available ? c('yes', 'green') : c('no', 'red'),\n        IsPremiumName: domain.IsPremiumName ? c('\\u2713', 'green') : '',\n        PremiumRegistrationPrice: domain.PremiumRegistrationPrice ? parseFloat(domain.PremiumRegistrationPrice).toFixed(2) : '',\n      }\n    }),\n    headings: {\n      IsPremiumName: 'Premium',\n      PremiumRegistrationPrice: 'Price',\n    },\n    centerValues: ['Available', 'IsPremiumName'],\n  })\n  console.log(t)\n  await log(d.join(','), data)\n}\n\n/**\n * @param {string} domain\n * @param {!Array<_namecheap.DomainCheck>} data\n */\nconst log = async (domain, data) => {\n  const exists = existsSync(path)\n  if (!exists) {\n    await bosom(path, [])\n  }\n  const d = await bosom(path)\n  const newData = [\n    ...d,\n    {\n      [domain]: data.filter(({ Available }) => Available).map(({ Domain }) => Domain),\n    },\n  ]\n  await bosom(path, newData, { space: 2 })\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap')} _namecheap.NameCheap\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/domains').DomainCheck} _namecheap.DomainCheck\n */\n","#!/usr/bin/env node\nimport { debuglog, inspect } from 'util'\nimport NameCheap from '@rqt/namecheap'\nimport NameCheapWeb from '@rqt/namecheap-web'\nimport getUsage from './get-usage'\nimport List from './commands/list'\nimport Check from './commands/check'\nimport Register from './commands/reg'\nimport GitHub from './commands/github'\nimport getConfig from '../lib/get-config'\nimport whitelistIP from '../lib/whitelist-ip'\nimport Errors from './errors'\nimport { _help, _version, _domains, _whitelistIP, _sandbox as __sandbox, _init,\n  _info, _register, _promo, _coupon,\n  _whois, _Whois, _free, _zones, _github, _years,\n  _sort, _desc, _filter, _type, _pageSize } from './get-args'\nimport whois from './commands/whois'\nimport initConfig from './commands/init'\nimport Info from './commands/info'\nimport coupon from './commands/coupon'\n\nconst version = require('../../package.json')['version']\n\nconst _sandbox = __sandbox || !!process.env.SANDBOX\n\nconst LOG = debuglog('expensive')\nconst DEBUG = /expensive/.test(process.env.NODE_DEBUG)\n\nif (_version) {\n  console.log(version)\n  process.exit()\n} else if (_help) {\n  const u = getUsage()\n  console.log(u)\n  process.exit()\n}\n\n/**\n * @param {!_expensive.Settings} settings\n * @param {boolean} [sandbox]\n */\nconst run = async (settings, sandbox = false) => {\n  try {\n    if (_whitelistIP) return await whitelistIP(settings, sandbox)\n\n    const ip = settings.ClientIp || await NameCheapWeb['LOOKUP_IP']()\n    const nc = new NameCheap({\n      user: settings.ApiUser,\n      key: settings.ApiKey,\n      ip,\n      sandbox,\n    })\n\n    if (!_domains) return await List(nc, {\n      sort: _sort,\n      desc: _desc,\n      filter: _filter,\n      type: _type,\n      pageSize: _pageSize,\n    })\n\n    const [domain] = _domains\n    if (_github) return await GitHub(nc, domain)\n    if (_info) return await Info(nc, domain)\n    if (_register) return await Register(nc, {\n      domain,\n      promo: _promo,\n      sandbox,\n      years: _years,\n    })\n\n    await Check(nc, {\n      domains: _domains,\n      zones: _zones,\n      free: _free,\n    })\n  } catch (error) {\n    await handler(error, settings, sandbox)\n  }\n}\n\nconst handler = async ({ stack, message, props }, Settings, sandbox) => {\n  if (props) {\n    LOG(inspect(props, { colors: true }))\n    LOG(Errors[props.Number])\n  }\n  if (props && props.Number == 1011150) {\n    try {\n      const [, ip] = /Invalid request IP: (.+)/.exec(message) || []\n      await whitelistIP(Settings, sandbox, ip)\n    } catch ({ message: msg, stack: st }) {\n      console.log('Could not white-list IP.')\n      DEBUG ? LOG(st) : console.error(msg)\n      process.exit(1)\n    }\n    return run(Settings, sandbox)\n  }\n\n  DEBUG ? LOG(stack) : console.error(message)\n  process.exit(1)\n}\n\n(async () => {\n  try {\n    if (_coupon) return await coupon(_sandbox)\n    if (_whois || _Whois) return await whois(_domains, _Whois)\n    if (_init) return await initConfig(_sandbox)\n  } catch (err) {\n    const { stack, message } = err\n    DEBUG ? LOG(stack) : console.error(message)\n    return\n  }\n  const settings = await getConfig(_sandbox)\n  await run(settings, _sandbox)\n})()\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Settings} _expensive.Settings\n */","/**\n * Pad Strings.\n * @param {number} width The width to which to pad.\n * @param {string} string The string to pad.\n */\nconst pad = (width, string) => {\n  const d = Math.max(width - string.length, 0)\n  const p = ' '.repeat(d)\n  const s = `${string}${p}`\n  return s\n}\n\n/**\n * Pads the string so that each line is of equal width.\n * @param {string} string The string to pad.\n * @param {!_paddys.Config} [options] Options for the program.\n * @param {number} [options.width] The width to which to pad lines.\n * @example\n```\nconst res = paddys(`test\nt`)\n// test\n// t___\n```\n */\nconst paddys = (string, options = {}) => {\n  const {\n    width,\n  } = options\n  const s = string.split('\\n')\n  const w = width || s.reduce((acc, { length: l }) => l > acc ? l : acc, 0)\n  return s.map(pad.bind(null, w)).join('\\n')\n}\n\nexport default paddys\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_paddys.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _paddys.Config Options for the program.\n * @prop {number} [width] The width to which to pad lines.\n */\n","import paddys from 'paddys'\n/**\n * Add a frame around strings.\n * @param {string} string The string to frame.\n * @param {!_frameOfMind.Config} [options] Options for the program.\n * @param {number} [options.padding=1] The left and right padding. Default `1`.\n */\nexport default function frameOfMind(string, options = {}) {\n  const { padding = 1 } = options\n  const l = string.split('\\n')\n  const w = l.reduce((acc, { length }) => length > acc ? length : acc, 0)\n  const ww = w + padding * 2\n  const bt = `\u250c${'\u2500'.repeat(ww)}\u2510`\n  const bb = `\u2514${'\u2500'.repeat(ww)}\u2518`\n  const pp = ' '.repeat(padding)\n  const p = paddys(string)\n    .split('\\n')\n    .map(line => `\u2502${pp}${line}${pp}\u2502`)\n    .join('\\n')\n  return `${bt}\\n${p}\\n${bb}`\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_frameOfMind.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _frameOfMind.Config Options for the program.\n * @prop {number} [padding=1] The left and right padding. Default `1`.\n */\n","/**\n * Will print the loading text and refresh the CLI line to show the ellipsis while the promise is loading.\n * @param {string} text The text to display in the CLI.\n * @param {!Promise|function(...*): !Promise} promise The promise or an async function that returns the promise.\n * @param {!_indicatrix.Options} options The optional options for the indicator, such as the refresh interval.\n * @param {number} [options.interval=250] The interval with which to update the screen. Default `250`.\n * @param {!(NodeJS.WriteStream|stream.Writable)} [options.writable=\"process.stdout\"] The writable stream used for printing data with the `.write` method. Default `process.stdout`.\n */\nexport default async function indicatrix(text, promise, options = {}) {\n  const { interval = 250, writable = process.stdout } = options\n  const p = typeof promise == 'function' ? promise() : promise\n  const write = writable.write.bind(writable)\n\n  let i = 1\n  const getText = () => `${text}${'.'.repeat(i)}`\n  const clear = () => write(`\\r${' '.repeat(text.length + 3)}\\r`)\n  let s = getText()\n  write(s)\n  const int = setInterval(() => {\n    i = (i + 1) % 4\n    s = getText()\n    clear()\n    write(s)\n  }, interval)\n  try {\n    const res = await p\n    return res\n  } finally {\n    clearInterval(int)\n    clear()\n  }\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_indicatrix.Options} Options The optional options for the indicator, such as the refresh interval.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _indicatrix.Options The optional options for the indicator, such as the refresh interval.\n * @prop {number} [interval=250] The interval with which to update the screen. Default `250`.\n * @prop {!(NodeJS.WriteStream|stream.Writable)} [writable=\"process.stdout\"] The writable stream used for printing data with the `.write` method. Default `process.stdout`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Writable} stream.Writable\n */\n","import { c, b } from 'erte'\nimport NameCheapWeb from '@rqt/namecheap-web'\nimport { confirm } from 'reloquent'\nimport t from 'tablature'\nimport { debuglog, inspect } from 'util'\nimport frame from 'frame-of-mind'\nimport loading from 'indicatrix'\n\nconst LOG = debuglog('expensive')\nconst LOG_OBJ = (obj) => {\n  const i = inspect(obj, { colors: true })\n  LOG(i)\n}\n\n/**\n * Find a default address ID.\n * @param {!Array<_namecheap.Address>} addresses A list of addresses.\n * @returns {?number} A default address ID.\n */\nexport const findDefault = (addresses) => {\n  const found = addresses.find(({ IsDefault }) => IsDefault)\n  if (!found) return null\n  return found.AddressId\n}\n\nconst getCoupon = async (sandbox) => {\n  const coupon = await (sandbox ? NameCheapWeb['SANDBOX_COUPON']() : NameCheapWeb['COUPON']())\n  return coupon\n}\n\nconst getZone = (domain) => {\n  const z  = domain.split('.')\n  const zone = z[z.length - 1]\n  return zone\n}\n\n/**\n * @param {_namecheap.Pricing} pricing\n */\nconst findProduct = (pricing, zone, years) => {\n  return pricing.domains\n    .register[zone].find(({ Duration }) => Duration == years)\n}\n\n/**\n * @param {_namecheap.NameCheap} nc\n */\nconst getPrice = async (nc, zone, years, promoCode) => {\n  const pp = await nc.users.getPricing({\n    type: 'DOMAIN',\n    promoCode,\n    action: 'REGISTER',\n    product: zone,\n  })\n  let CouponlessPrice\n  if (promoCode) {\n    const cp = await nc.users.getPricing({\n      type: 'DOMAIN',\n      action: 'REGISTER',\n      product: zone,\n    });\n    ({ YourPrice: CouponlessPrice } = findProduct(cp, zone, years))\n  }\n  const price = findProduct(pp, zone, years)\n  // LOG_OBJ(price)\n  return {\n    PromoCode: promoCode,\n    AdditionalCost: price.YourAdditonalCost,\n    Price: price.YourPrice,\n    PriceType: price.YourPriceType,\n    AdditionalCostType: price.YourAdditonalCostType,\n    Currency: price.Currency,\n    CouponlessPrice: CouponlessPrice,\n  }\n}\n\nconst getPriceWithCurrency = (currency, price) => {\n  return `${price} ${currency}`\n}\n\nconst findAndApplyPromo = async (promo, sandbox, zone) => {\n  if (promo) {\n    console.log('Using promo %s', promo)\n    return promo\n  }\n  if (['com', 'net', 'org', 'info', 'biz'].includes(zone)) {\n    try {\n      const coupon = await loading(\n        'Checking coupon online',\n        getCoupon(sandbox),\n      )\n      const co = await confirm(`\\rApply coupon ${coupon}?`)\n      if (co) return coupon\n    } catch (e) {\n      console.log('Could not retrieve promo')\n    }\n  }\n}\n\nconst confirmPremiumPrice = async ({ IsPremiumName, PremiumRegistrationPrice, EapFee }) => {\n  let res = true\n  if (IsPremiumName) {\n    res = await confirm(`Continue with the premium registration price of ${PremiumRegistrationPrice}?`, {\n      defaultYes: false,\n    })\n  }\n  if (parseFloat(EapFee)) {\n    res = res && await confirm(`Continue with the early access fee of ${EapFee}?`, {\n      defaultYes: false,\n    })\n  }\n  if (!res) throw new Error('No confirmation.')\n}\n\nconst skipPrice = (Price) => {\n  return Price.map((p) => {\n    return {\n      ...p,\n      value: `SKIP-${p.value}`,\n    }\n  })\n}\n\nconst getFixed = n => Number(n).toFixed(2)\n\nconst getTable = async (info, { nc, years, promo, zone }) => {\n  const { IcannFee, PremiumRenewalPrice, PremiumTransferPrice, PremiumRegistrationPrice, IsPremiumName, EapFee } = info\n  const Your = await getPrice(nc, zone, years, promo)\n\n  const Premium = [\n    { name: 'Premium Registration Price', value: PremiumRegistrationPrice,\n      cost: PremiumRegistrationPrice,\n    },\n    ...skipPrice([\n      { name: 'Premium Renewal Price', value: PremiumRenewalPrice },\n      { name: 'Premium Transfer Price', value: PremiumTransferPrice },\n    ]),\n  ]\n  const hasEap = parseFloat(EapFee) != 0\n  const Eap = [{ name: 'Eap Fee', value: EapFee, cost: EapFee }]\n  const CoolStoryBro = [\n    ...(IsPremiumName ? Premium : []),\n    ...(hasEap ? Eap : []),\n  ]\n  const Price = [\n    { name: 'Price', value: Your.Price, cost: Your.Price },\n    ...skipPrice(Your.PromoCode ? [{ name: 'Without Promo', value: Your.CouponlessPrice }] : []),\n    ...(IcannFee ? [{ name: 'Icann Fee', value: IcannFee }] : []),\n    ...(Your.AdditionalCost ? [{ name: 'Additional Cost', value: `${Your.AdditionalCost}`, cost: Your.AdditionalCost }] : []),\n  ]\n  const hasCoolStory = CoolStoryBro.length\n  const Data = hasCoolStory ? [...CoolStoryBro, ...skipPrice(Price)] : Price\n\n  const total = (hasCoolStory ? CoolStoryBro : Price).reduce((acc, { cost = 0 }) => {\n    const f = parseFloat(cost)\n    return acc + f\n  }, 0)\n  const totalPrice = getPriceWithCurrency(Your.Currency, getFixed(total))\n  const Total = [\n    { name: '-----', value: '-'.repeat(totalPrice.length) },\n    { name: 'Total', value: totalPrice },\n  ]\n  const table = t({\n    keys: ['name', 'value'],\n    data: [...Data, ...Total],\n    headings: ['Price', 'Value'],\n    replacements: {\n      value(value) {\n        const [, val] = `${value}`.split('SKIP-')\n        if (val) {\n          return {\n            value: c(val, 'grey'),\n            length: val.length,\n          }\n        }\n        return { value, length: value.length }\n      },\n    },\n  }).replace(/.+\\n/, '')\n  return { Your, table }\n}\n\nconst warnExtraPromo = (Your) => {\n  if (Your.PromoCode && parseFloat(Your.Price) > parseFloat(Your.CouponlessPrice)) {\n    console.log('[!] Warning: you will pay more with coupon %s than without it.', Your.PromoCode)\n  }\n}\n\n/**\n * @param {!_namecheap.NameCheap} nc\n * @param {Object} options\n * @param {string} [options.domain] The domain to register.\n */\nexport default async function register(nc, {\n  domain,\n  promo,\n  sandbox,\n  years = 1,\n}) {\n  const INFO = (await nc.domains.check(domain))[0]\n  const { Available, EapFee, PremiumRegistrationPrice, Domain, IsPremiumName,\n  } = INFO\n  // LOG_OBJ(INFO)\n\n  if (!Available) throw new Error(`Domain ${Domain} is not available.`)\n  const zone = getZone(domain)\n\n  const PROMO = await findAndApplyPromo(promo, sandbox, zone)\n\n  const { Your, table } = await loading(`Getting ${years}-year price`, getTable(INFO, {\n    nc,\n    promo: PROMO,\n    years,\n    zone,\n  }))\n  console.log('\\n%s', table)\n  warnExtraPromo(Your)\n  console.log('')\n\n  if (IsPremiumName) {\n    await confirmPremiumPrice({\n      IsPremiumName,\n      PremiumRegistrationPrice,\n      EapFee,\n    })\n  }\n\n  const address = /** @type {!_namecheap.AddressDetail} */ (await loading('Finding default address', async () => {\n    const addresses = await nc.address.getList()\n    const id = findDefault(addresses)\n    if (!id) throw new Error('Could not find the default address.')\n    const a = await nc.address.getInfo(id)\n    return a\n  }))\n\n  console.log(\n    '\\rRegistering %s using:',\n    b(domain, 'green'),\n  )\n  printAddress(address)\n  // default no to prevent accidental enter when waiting for address promise\n  const ok = await confirm('OK?', { defaultYes: false })\n  if (!ok) return\n  let ChargedAmount\n  try {\n    ({ ChargedAmount } = await loading('Registering the domain', async () => {\n      return nc.domains.create(/** @type {!_namecheap.Create} */ ({\n        address,\n        domain,\n        years,\n        promo: PROMO,\n        ...(IsPremiumName ? { premium: {\n          IsPremiumDomain: true,\n          PremiumPrice: parseFloat(PremiumRegistrationPrice),\n          EapFee: parseFloat(EapFee),\n        } } : {}),\n      }))\n    }))\n  } catch (err) {\n    const { props = {}, message } = err\n    const { Number: N } = props\n    // console.log(require('util').inspect({ Number: N, message }, { colors: true }))\n\n    if (N == 2515610) {\n      console.warn('[!] Bug: cannot register a premium with Eap.')\n      console.warn(' -  Response when requesting w/out EapFee:')\n      console.log('    %s', message)\n    } else if (/No free connections to registry./.test(message)) {\n      console.log('    %s', message)\n      console.log('Please try again.')\n    } else if (N == 3028166) {\n      console.warn('[!] Possible Bug (e.g., after sending without Eap)')\n      console.log('    %s', message)\n    }\n\n    throw err\n  }\n\n  console.log(\n    'Successfully registered %s! Charged amount: $%s.',\n    c(domain, 'green'),\n    getFixed(ChargedAmount),\n  )\n}\n\n/**\n * @param {!_namecheap.AddressDetail} address\n */\nconst printAddress = ({\n  FirstName, LastName, Address1, Address2, City, Zip, Country, EmailAddress,\n}) => {\n  const s = `${FirstName} ${LastName}, ${EmailAddress}\n ${Address1}${Address2 ? `\\n ${Address2}` : ''}\n ${City}\n ${Zip}, ${Country}`\n  const f = frame(s)\n  console.log(f)\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap')} _namecheap.NameCheap\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/users').Pricing} _namecheap.Pricing\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/address').Address} _namecheap.Address\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/address').AddressDetail} _namecheap.AddressDetail\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/domains').Create} _namecheap.Create\n */","import loading from 'indicatrix'\nimport { confirm } from 'reloquent'\nimport { c } from 'erte'\n\n/**\n * @param {!_namecheap.NameCheap} client\n * @param {string} domain\n */\nexport default async function (client, domain) {\n  let { hosts, IsUsingOurDNS } = await client.dns.getHosts(domain)\n  if (!IsUsingOurDNS)\n    throw new Error(`Namecheap DNS is not being used for ${domain}`)\n\n  hosts.reduce(async (ac, { Type, Name, Address }) => {\n    await ac\n    if (Type == 'A' && Name == '@') {\n      const a = await confirm(\n        `An A record at @ (${Address}) already exists. Continue?`)\n      if (!a) process.exit()\n    }\n  }, {})\n\n  hosts = hosts.filter(({ Type, Name, Address }) => {\n    if (Name == 'www' && Type == 'CNAME' && Address == 'parkingpage.namecheap.com.') return false\n    if (Name == '@' && Type == 'URL') return false\n    return true\n  })\n  /** @type {!Array<!_namecheap.HostParams>} */\n  const newhosts = hosts.map((h) => {\n    const { TTL, Type: RecordType, Address, Name: HostName, MXPref } = h\n    return { TTL, RecordType, Address, HostName, MXPref }\n  })\n  newhosts.push({\n    Address: '185.199.108.153',\n    RecordType: 'A',\n    HostName: '@',\n  },{\n    Address: '185.199.109.153',\n    RecordType: 'A',\n    HostName: '@',\n  },  {\n    Address: '185.199.110.153',\n    RecordType: 'A',\n    HostName: '@',\n  }, {\n    Address: '185.199.111.153',\n    RecordType: 'A',\n    HostName: '@',\n  })\n\n  const r = await loading(`Setting ${c(`${newhosts.length}`, 'yellow')} host records`, async () => {\n    const res = await client.dns.setHosts(domain, newhosts)\n    return res\n  })\n  if (!r.IsSuccess)\n    throw new Error('Operation wasn\\'t successful.')\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap')} _namecheap.NameCheap\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/dns').HostParams} _namecheap.HostParams\n */\n","import ask from 'reloquent'\nimport { stat } from 'fs'\nimport bosom from 'bosom'\n\nexport const exists = async (path) => {\n  const res = await new Promise((r, j) => {\n    stat(path, (err) => {\n      if (err && err.code == 'ENOENT') {\n        r(false)\n      } else if (err) {\n        j(err)\n      } else {\n        r(true)\n      }\n    })\n  })\n  return res\n}\n\n/**\n * @param {_reloquent.Questions} questions\n * @param {string} path\n * @param {number} [timeout]\n */\nexport async function askQuestionsAndWrite(questions, path, timeout) {\n  const answers = await ask(questions, timeout)\n  await bosom(path, answers, { space: 2 })\n  return answers\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('reloquent/types').Questions} _reloquent.Questions\n */\n","import { resolve } from 'path'\nimport { homedir as home } from 'os'\nimport bosom from 'bosom'\nimport { exists, askQuestionsAndWrite } from './lib'\n\n/**\n * Read package configuration from the home directory, or ask questions with\n * readline interface to create a new configuration in `~/.${packageName}rc`\n * @param {string} packageName The name of the package.\n * @param {!_reloquent.Questions} questions An object with questions to be passed to reloquent.\n * @param {!_africa.Config} [config] Configuration object.\n */\nexport default async function africa(packageName, questions = {}, config = {}) {\n  if (typeof packageName != 'string')\n    throw new Error('Package name is required.')\n\n  const {\n    homedir = home(),\n    rcNameFunction = p => `.${p}rc`,\n    force = false,\n    local = false,\n    questionsTimeout,\n  } = config\n\n  const rc = rcNameFunction(packageName)\n  const path = resolve(homedir, rc)\n\n  const homeEx = await exists(path)\n\n  if (local) {\n    const localPath = resolve(rc)\n    const localEx = await exists(localPath)\n    const c = await handleLocal(homeEx, localEx, path, localPath, questions, questionsTimeout, force)\n    return c\n  }\n\n  const c = await handleHome(homeEx, path, questions, questionsTimeout, force)\n  return c\n}\n\nconst handleHome = async (homeEx, path, questions, questionsTimeout, force) => {\n  if (!homeEx) {\n    const conf = await askQuestionsAndWrite(questions, path, questionsTimeout)\n    return conf\n  }\n  const p = await getParsed(path, questions, force, questionsTimeout)\n  return p\n}\n\nconst getParsed = async (path, questions, force, questionsTimeout) => {\n  const parsed = await bosom(path)\n  if (force) {\n    const c = await forceQuestions(questions, path, parsed, questionsTimeout)\n    return c\n  }\n  return parsed\n}\n\nconst handleLocal = async (homeEx, localEx, path, localPath, questions, questionsTimeout, force) => {\n  if (!localEx) {\n    const h = homeEx ? await bosom(path) : {}\n    const conf = await forceQuestions(questions, localPath, h, questionsTimeout)\n    return conf\n  }\n  const p = await getParsed(localPath, questions, force, questionsTimeout)\n  return p\n}\n\nconst forceQuestions = async (questions, path, config, questionsTimeout) => {\n  const q = extendQuestions(questions, config)\n  const conf = await askQuestionsAndWrite(q, path, questionsTimeout)\n  return conf\n}\n\n/**\n *\n * @param {_reloquent.Questions} questions A set of questions to extend with default value from the existing config.\n * @param {!Object} current Current configuration object.\n * @returns {_reloquent.Questions} Questions with updated defaultValue where answers were present in the passed config object.\n */\nconst extendQuestions = (questions, current) => {\n  const q = Object.keys(questions).reduce((acc, key) => {\n    const question = questions[key]\n    const defaultValue = current[key]\n    const value = {\n      ...question,\n      ...(defaultValue ? { defaultValue } : {}),\n    }\n\n    return {\n      ...acc,\n      [key]: value,\n    }\n  }, {})\n  return q\n}\n\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('reloquent/types').Questions} _reloquent.Questions\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _africa.Config\n */","import NamecheapWeb from '@rqt/namecheap-web'\n\nexport default {\n  ApiUser: {\n    text: 'Username',\n    validation: a => {\n      if (!a) throw new Error('Please enter the namecheap username.')\n    },\n  },\n  ApiKey: {\n    text: 'Api key https://ap.www.namecheap.com/settings/tools/apiaccess/',\n    validation: a => {\n      if (!a) throw new Error('Please provide the namecheap api key.')\n    },\n  },\n  ClientIp: {\n    text: 'Client ip',\n    // validation: a => { if (!a) throw new Error('Please give the Client Ip and whitelist it.') },\n    getDefault: NamecheapWeb['LOOKUP_IP'],\n  },\n  phone: {\n    text: 'Last 3 digit of phone to use for 2 factor auth',\n  },\n}\n\n// export const privateQuestions = {\n//   aws_id: {\n//     text: 'AWS access key id',\n//     validation: a => { if (!a) console.warn('without aws key the route 53 updates won\\'t work' ) },\n//   },\n//   aws_key: {\n//     text: 'AWS secret access key',\n//     validation: a => { if (!a) console.warn('without aws key the route 53 updates won\\'t work' ) },\n//   },\n// }\n","import africa from 'africa'\nimport { debuglog } from 'util'\nimport questions from '../questions'\nimport { getAppName } from './'\n\nconst LOG = debuglog('expensive')\n\n/**\n * An authentication function that will read the `~/.expensiverc` or `~/.expensive-standboxrc` file.\n * @param {boolean} sandbox Whether to use the sandbox rc.\n */\nconst getConfig = async (sandbox) => {\n  const p = getAppName(sandbox)\n  LOG('Reading %s rc', p)\n  const {\n    ApiUser,\n    ApiKey,\n    ClientIp,\n    phone,\n  } = /** @type {_expensive.Settings} */ (await africa(p, questions))\n  if (!ApiUser) throw new Error('Api User is missing')\n  if (!ApiKey) throw new Error('Api Key is missing')\n  return { ApiUser, ApiKey, ClientIp, phone }\n}\n\nexport default getConfig\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Settings} _expensive.Settings\n */","import bosom from 'bosom'\nimport { homedir } from 'os'\nimport { join } from 'path'\nimport { debuglog } from 'util'\nimport { askSingle } from 'reloquent'\nimport NameCheapWeb from '@rqt/namecheap-web'\nimport { getAppName } from './'\n\nconst LOG = debuglog('expensive')\n\n/**\n * A handler to make sure that an IP address is allowed.\n * @param {!_expensive.Settings} settings\n * @param {boolean} [sandbox]\n * @param {string} [ip]\n */\nconst whitelistIP = async (settings, sandbox, ip) => {\n  const IP = ip || await NameCheapWeb['LOOKUP_IP']()\n  const password = await askSingle({\n    text: `Enter the password to white-list ${IP}`,\n    validation(val) {\n      if (!val) throw new Error('Please enter the password.')\n    },\n    password: true,\n  })\n  const nc = new NameCheapWeb({ sandbox })\n  await nc.auth(settings.ApiUser, password, settings.phone)\n  await nc.whitelistIP(IP)\n\n  // Update the configuration to reflect the IP.\n  // Todo: modify `africa` to be able to update the configuration.\n  const n = getAppName(sandbox)\n  const rcPath = join(homedir(), `.${n}rc`)\n  LOG('Writing to %s', rcPath)\n  await bosom(rcPath, {\n    ...settings,\n    ClientIp: IP,\n  })\n}\n\nexport default whitelistIP\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Settings} _expensive.Settings\n */","export default {\n  \"1\": \"Requesting white-listing of the IP address.\",\n  \"1011150\": \"Parameter RequestIP is invalid\",\n  \"2030166\": \"Domain is invalid\",\n  \"2011170\": \"PromotionCode is invalid\"\n}\n","import NamecheapWeb from '@rqt/namecheap-web'\n\nconst getDays = (date) => {\n  const d = new Date().getTime() - date.getTime()\n  return Math.round(d / (1000*60*60*24))\n}\n\nconst getItem = (whois, item, key, type, print) => {\n  try {\n    const isDate = type == 'date'\n    const isArray = type == 'array'\n    const re = new RegExp(`^${item}: (.+)`, 'mg')\n    const allRes = []\n    let res\n    while ((res = re.exec(whois)) !== null) {\n      const [, val] = /** @type {!RegExpResult} */ (res)\n      const v = isDate ? new Date(val) : val\n      allRes.push(v)\n    }\n    const val = isArray ? allRes.join('\\n ') : allRes[0]\n    const s = print(item, isDate ? val.toLocaleString() : val, isDate ? getDays(val) : null)\n    return { [key]: s }\n  } catch (err) {\n    return {}\n  }\n}\n\nconst getData = (whois) => {\n  return [\n    ['Domain Name', 'name', 'string', (i, v) => `${i}: ${v}`],\n    ['Registrar URL', 'url', 'string', (i, v) => `${i}: ${v}`],\n    ['Updated Date', 'updated', 'date', (i, v, d) => `${i}: ${v} (${d} ${days(d)} ago)`],\n    ['Creation Date', 'created', 'date', (i, v, d) => `${i}: ${v} (${d} ${days(d)} ago)`],\n    ['Registry Expiry Date', 'expire', 'date', (i, v, d) => `${i}: ${v} (in ${-d} ${days(-d)})`],\n    ['Name Server', 'ns', 'array', (i, v) => `${i}: ${v}`],\n  ].reduce((acc, [i, k, t, p]) => {\n    const item = getItem(whois, i, k, t, p)\n    return { ...acc, ...item }\n  }, {})\n}\n\nconst days = (n) => {\n  if (n == 1) return 'day'\n  return 'days'\n}\n\nexport default async (domain, full) => {\n  const res = await NamecheapWeb['WHOIS'](domain)\n  if (full) return console.log(res)\n  const data = getData(res)\n  Object.values(data).forEach(v => console.log(v))\n}","import africa from 'africa'\nimport { getAppName } from '../../lib'\nimport questions from '../../questions'\n\nconst initConfig = async (sandbox) => {\n  const n = getAppName(sandbox)\n  await africa(n, questions, { force: true })\n}\n\nexport default initConfig","import t from 'tablature'\nimport printInfo from '../../lib/print/info'\n\n/**\n * @param {!_namecheap.NameCheap} client\n * @param {string} domain\n */\nexport default async function info(client, domain) {\n  const [i, hosts] = await Promise.all([\n    client.domains.getInfo(domain),\n    client.dns.getHosts(domain),\n  ])\n  printInfo(i)\n  if (hosts.IsUsingOurDNS) {\n    console.log()\n    console.log(t({\n      headings: ['Name', 'Type', 'Address'],\n      data: hosts.hosts,\n      keys: ['Name', 'Type', 'Address'],\n    }))\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap')} _namecheap.NameCheap\n */\n","import { c } from 'erte'\nimport t from 'tablature'\n\n/** @param {!_namecheap.DomainInfo} info */\nconst printInfo = (info) => {\n  const { DomainDetails, Whoisguard, DnsDetails } = info\n  const data = [\n    { name: 'Created:', value: DomainDetails.CreatedDate },\n    { name: 'Expires on:', value: DomainDetails.ExpiredDate },\n    { name: 'Whois enabled:', value: Whoisguard.Enabled },\n    ...(Whoisguard.EmailDetails ? [{\n      name: 'Whois email:', value: Whoisguard.EmailDetails.ForwardedTo,\n    }] : []),\n    { name: 'DNS:', value: info.DnsDetails.ProviderType == 'FREE' ? c(DnsDetails.ProviderType, 'green') : DnsDetails.ProviderType,\n    },\n    { name: 'Nameservers:', value: DnsDetails.Nameserver.join(', ') },\n    { name: 'Created:', value: DomainDetails.CreatedDate },\n  ]\n  const res = t({ data, keys: ['name', 'value'] })\n  const [, ...rest] = res.split('\\n')\n  const r = rest.join('\\n')\n  console.log(r)\n}\n\nexport default printInfo\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@rqt/namecheap/types/typedefs/domains').DomainInfo} _namecheap.DomainInfo\n */","import NameCheapWeb from '@rqt/namecheap-web'\n\nexport default async function coupon(sandbox) {\n  const res = await (sandbox ? NameCheapWeb['SANDBOX_COUPON']() : NameCheapWeb['COUPON']())\n  console.log(res)\n}"],
"names":["debuglog","inspect","util","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","j","re","RegExp","source","replace","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","request","https","http","parse","url","Writable","stream","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","res","createGunzip","zlib","isMessageGzip","contentEncoding","headers","makeRequest","requestOptions","config","justHeaders","req","body","rawLength","byteLength","then","statusMessage","statusCode","destroy","isGzip","data","error","err","abort","parsedBody","getFormData","form","keys","reduce","urlEncodedDataPairs","acc","key","v","p","encodeURIComponent","exec","end","contentType","startsWith","JSON","response","ua","version","name","require","LOG","aqt","address","type","outgoingHeaders","compress","method","timeout","hostname","protocol","port","path","stringify","_d","querystring","mismatch","string","o","capturedGroup","i","start","attributeRe","nameRe","valRe","attributesRe","extractTags","tag","matches","simple","end1","end2","attributes","content","attrs","props","extractProps","simpleAttribute","val","parseInt","filterEmpty","obj","k","validateDomains","arr","current","query","ApiUser","ApiKey","ClientIp","host","Command","Options","authData","UA","qs","xml","getError","CommandResponse","Errors","errors","c","NamecheapError","getSort","sort","desc","toLowerCase","s","toUpperCase","getList","page","pageSize","reqOpts","GET_LIST","domains","domain","Paging","TotalItems","CurrentPage","PageSize","parseWhois","Whoisguard","ID","ExpiredDate","EmailDetails","parsePremiumDNS","dns","UseAutoRenew","SubscriptionId","CreatedDate","ExpirationDate","IsActive","Date","DomainGetInfoResult","DomainDetails","NumYears","WhoisProps","whois","PremiumDnsSubscription","premiumDns","DnsDetails","DnsProps","Nameserver","Modificationrights","ModificationrightsProps","rights","Type","getInfo","COMMAND","check","Array","isArray","DomainCheckResult","results","create","years","promo","registrantAddress","techAddress","adminAddress","billingAddress","nameservers","premium","RegistrantAddress","getAddressObject","TechAddress","AdminAddress","AuxAddress","Organization","Zip","sld","tld","hosts1","getHosts","hosts2","hosts3","hosts","setHosts","params","entries","forEach","value","AddressGetListResult","List","addresses","id","GetAddressInfoResult","add","getPricing","category","promoCode","action","product","productType","cat","getCategory","typeContent","getProduct","categoryContent","prices","price","n","l","NameCheap","user","sandbox","ip","_user","_key","_host","_ip","q","_query","bind","users","rest","endpoint","createReadStream","createWriteStream","existsSync","stat","fs","read","write","ws","writeJSON","replacer","space","json","bosom","rqt","_request","location","Cookie","getFullUrl","loc","cookies","updateCookies","Session","getCookieHeader","newCookies","extractCookies","setCookie","ok","assert","createInterface","readline","createTimeout","setTimeout","makeTimeoutPromise","to","reject","createPromiseWithTimeout","toPromise","race","clearTimeout","ask","question","password","output","process","stdout","input","stdin","rl","repeat","promto","tryPromise","close","askQuestions","questions","accRes","text","endsWith","gotDefaultValue","defaultValue","getDefault","dv","gtd","answer","a","validation","postProcess","reloquent","askSingle","confirm","defaultYes","hasQ","colors","backgroundColors","color","cc","b","extractFormState","mapPhoneOptions","g","co","gr","getColorOptions","title","askForNumber","phone","some","last","find","deepEqual","o1","o2","val2","s2","k2","r2","obtainSession","SessionKey","session","jqt","u","secondAuth","retry","Authenticator","SECOND_AUTH_URL","_phone","body2","console","log","submitCode","signIn","LOGIN_URL","_username","_password","validationErrorRe","code","location2","username","userAgent","_session","checkError","__isError","Message","Success","t","__type","getApiUrl","requestToken","App","WHITELISTED_UPS","token","whitelistIP","ipAddress","toLocaleString","App$$module$node_modules$$rqt$namecheap_web$src$lib$App.getApiUrl","apiUrl","removeWhitelistedIP","getWhitelistedIPList","IpAddresses","date","Data","USER_AGENT","reRes","res2","re2Res","re2","w","coupon","h","getHost","S","getApHost","_saveSession","settings","readSession","saveSession","sessionFile","_wrap","getAllowedCookies","_app","c2","NamecheapWeb","getIp","force","getSession","authenticator","apHost","works","auth","usually","usage","description","line","example","commands","descriptions","values","commandLength","longestName","longestDescription","theLongest","command","pad","ts","USA","usa","vals","firstVal","otherVals","firstLine","emptyPad","otherLines","argv","long","short","bool","number","findIndex","argufy","titles","findTitles","commandFound","_argv","boolean","multiple","reduceUsage","argsConfig","default","_domains","_init","_info","_register","_github","_whois","_Whois","_coupon","_sandbox","_whitelistIP","_version","_help","argsConfigCheck","argsCheck","_free","_zones","argsConfigInfo","argsInfo","_sort","_desc","_filter","_pageSize","_type","argsConfigRegister","argsRegister","_promo","_years","allZones","makeList","zones","z","zone","TICK","DASH","mapDomains","Created","Expires","IsOurDNS","cr","getTime","Math","round","since","abs","day","Expiry","Years","getUTCFullYear","getWhois","getAppName","heading","makeBinaryHash","tablature","conf","headings","replacements","centerValues","centerHeadings","cv","hv","widths","dac","maxLength","getReplacement","max","kk","hr","hl","getLine","row","replacement","cen","len","left","floor","right","center","currentWidth","rh","rows","wb","rv","printList","WhoisGuard","list","nc","pagination","nextPage","getNextPage","getNavigation","ceil","resolve","free","singleWord","ordered","found","Domain","PremiumRegistrationPrice","parseFloat","Available","hasPremium","IsPremiumName","hasPremiumRegPrice","toFixed","exists","newData","width","paddys","frameOfMind","padding","ww","bt","bb","pp","indicatrix","interval","writable","int","setInterval","clearInterval","findDefault","IsDefault","AddressId","getCoupon","NameCheapWeb","getZone","findProduct","pricing","register","Duration","getPrice","cp","CouponlessPrice","PromoCode","AdditionalCost","YourAdditonalCost","Price","YourPrice","PriceType","YourPriceType","AdditionalCostType","YourAdditonalCostType","Currency","findAndApplyPromo","loading","confirmPremiumPrice","EapFee","skipPrice","getTable","info","IcannFee","PremiumRenewalPrice","PremiumTransferPrice","Your","Premium","cost","hasEap","Eap","CoolStoryBro","hasCoolStory","total","f","totalPrice","Number","Total","table","INFO","PROMO","printAddress","ChargedAmount","IsPremiumDomain","PremiumPrice","N","warn","FirstName","LastName","Address1","Address2","City","Country","EmailAddress","frame","client","IsUsingOurDNS","ac","Name","Address","exit","newhosts","TTL","RecordType","HostName","MXPref","IsSuccess","askQuestionsAndWrite","answers","africa","packageName","home","rcNameFunction","local","questionsTimeout","rc","homeEx","localPath","localEx","handleLocal","handleHome","getParsed","parsed","forceQuestions","extendQuestions","$jscompDefaultExport","getConfig","IP","rcPath","getData","isDate","allRes","initConfig","all","Enabled","ForwardedTo","ProviderType","__sandbox","env","SANDBOX","DEBUG","NODE_DEBUG","def","reg","run","GitHub","Info","Register","Check","handler","Settings","msg","st"]
}
