{"version":3,"sources":["../../src/bin/get-usage.js"],"names":["l","startupyDomains","join","u","domain","commands","Object","keys","descriptions","values","commandLength","reduce","longestName","longestDescription","name","command","theLongest","split","acc","c","length","pad","string","t","Array","from","ts","map","_","s","usa","i","value","vals","firstVal","otherVals","firstLine","emptyPad","otherLines","val","r","res","USA","a","usage","trim"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,IAAIC,qBAAgBC,IAAhB,CAAqB,IAArB,CAAV;;AAEA,MAAMC,IAAI;AACRC,UAAS,mDAAkDJ,CAAE,GADrD;AAER,gBAAc,qBAFN,CAGR;;AAHQ,CAAV;AAKA,MAAMK,WAAWC,OAAOC,IAAP,CAAYJ,CAAZ,CAAjB;AACA,MAAMK,eAAeF,OAAOG,MAAP,CAAcN,CAAd,CAArB;;eAEe,MAAM;AACnB,QAAM,CAACO,aAAD,IAAkBL,SAASM,MAAT,CAAgB,CAAC,CAACC,cAAc,CAAf,EAAkBC,qBAAqB,CAAvC,CAAD,EAA4CC,IAA5C,KAAqD;AAC3F;AACA,UAAMC,UAAUZ,EAAEW,IAAF,CAAhB;AACA,UAAME,aAAaD,QAAQE,KAAR,CAAc,IAAd,EAChBN,MADgB,CACT,CAACO,GAAD,EAAMC,CAAN,KAAY;AAClB,UAAIA,EAAEC,MAAF,GAAWF,GAAf,EAAoB,OAAOC,EAAEC,MAAT;AACpB,aAAOF,GAAP;AACD,KAJgB,EAId,CAJc,CAAnB;AAKA,QAAIF,aAAaH,kBAAjB,EAAqCA,qBAAqBG,UAArB;AACrC,QAAIF,KAAKM,MAAL,GAAcR,WAAlB,EAA+BA,cAAcE,KAAKM,MAAnB;AAC/B,WAAO,CAACR,WAAD,EAAcC,kBAAd,CAAP;AACD,GAXuB,EAWrB,EAXqB,CAAxB;;AAaA,QAAMQ,MAAM,CAACC,MAAD,EAASF,MAAT,KAAoB;AAC9B,UAAMpB,IAAIoB,SAASE,OAAOF,MAA1B;AACA,UAAMG,IAAIC,MAAMC,IAAN,CAAW;AAAEL,cAAQpB;AAAV,KAAX,CAAV;AACA,UAAM0B,KAAKH,EAAEI,GAAF,CAAMC,KAAK,GAAX,EAAgB1B,IAAhB,CAAqB,EAArB,CAAX,CAH8B,CAGM;;AACpC,UAAM2B,IAAK,GAAEP,MAAO,GAAEI,EAAG,EAAzB;AACA,WAAOG,CAAP;AACD,GAND;;AAQA,QAAMC,MAAMzB,SAASM,MAAT,CAAgB,CAACO,GAAD,EAAMH,OAAN,EAAegB,CAAf,KAAqB;AAC/C,UAAMC,QAAQxB,aAAauB,CAAb,CAAd;AACA,UAAME,OAAOD,MAAMf,KAAN,CAAY,IAAZ,CAAb;AACA,UAAME,IAAIE,IAAIN,OAAJ,EAAaL,aAAb,CAAV;AACA,UAAM,CAACwB,QAAD,EAAW,GAAGC,SAAd,IAA2BF,IAAjC;AACA,UAAMG,YAAa,GAAEjB,CAAE,KAAIe,QAAS,EAApC;AACA,UAAMG,WAAWhB,IAAI,EAAJ,EAAQX,aAAR,CAAjB;AACA,UAAM4B,aAAaH,UAAUR,GAAV,CAAcY,OAAO;AACtC,YAAMC,IAAK,GAAEH,QAAS,KAAIE,GAAI,EAA9B;AACA,aAAOC,CAAP;AACD,KAHkB,CAAnB;AAIA,UAAMC,MAAM,CAAC,GAAGvB,GAAJ,EAASkB,SAAT,EAAoB,GAAGE,UAAvB,CAAZ;AACA,WAAOG,GAAP;AACD,GAbW,EAaT,EAbS,CAAZ;AAeA,QAAMC,MAAMZ,IAAIH,GAAJ,CAAQgB,KAAM,KAAIA,CAAE,EAApB,CAAZ;AACA,QAAMC,QAAS;;EAEfF,IAAIxC,IAAJ,CAAS,IAAT,CAAe;CAFD,CAGd2C,IAHc,EAAd;AAKA,SAAOD,KAAP;AACD,C","sourcesContent":["import { startupyDomains } from '../lib'\n\nconst l = startupyDomains.join(', ')\n\nconst u = {\n  domain: `check a domain name in various startupy zones\\n(${l})`,\n  'domain.com': 'check a domain name',\n  // 'domain1.com domain2.com': 'check multiple domain names',\n}\nconst commands = Object.keys(u)\nconst descriptions = Object.values(u)\n\nexport default () => {\n  const [commandLength] = commands.reduce(([longestName = 0, longestDescription = 0], name) => {\n    /** @type {string} */\n    const command = u[name]\n    const theLongest = command.split('\\n')\n      .reduce((acc, c) => {\n        if (c.length > acc) return c.length\n        return acc\n      }, 0)\n    if (theLongest > longestDescription) longestDescription = theLongest\n    if (name.length > longestName) longestName = name.length\n    return [longestName, longestDescription]\n  }, [])\n\n  const pad = (string, length) => {\n    const l = length - string.length\n    const t = Array.from({ length: l })\n    const ts = t.map(_ => ' ').join('') // eslint-disable-line no-unused-vars\n    const s = `${string}${ts}`\n    return s\n  }\n\n  const usa = commands.reduce((acc, command, i) => {\n    const value = descriptions[i]\n    const vals = value.split('\\n')\n    const c = pad(command, commandLength)\n    const [firstVal, ...otherVals] = vals\n    const firstLine = `${c}\\t${firstVal}`\n    const emptyPad = pad('', commandLength)\n    const otherLines = otherVals.map(val => {\n      const r = `${emptyPad}\\t${val}`\n      return r\n    })\n    const res = [...acc, firstLine, ...otherLines]\n    return res\n  }, [])\n\n  const USA = usa.map(a => `\\t${a}`)\n  const usage = `Usage:\n  expensive\n${USA.join('\\n')}\n`.trim()\n\n  return usage\n}\n"],"file":"get-usage.js"}