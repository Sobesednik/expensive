{"version":3,"sources":["../../src/bin/check.js"],"names":["path","check","nc","domains","d","free","zones","reduce","acc","domain","singleWord","z","split","list","console","log","length","join","res","data","map","found","find","Domain","filter","Available","hasPremium","some","IsPremiumName","hasPremiumRegPrice","PremiumRegistrationPrice","t","keys","replacements","v","value","empty","newValue","replace","match","p1","p2","headings","centerValues","exists","newData","space"],"mappings":"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","sourcesContent":["import { c } from 'erte'\nimport { makeList, isSingleWord } from '../lib'\nimport Namecheap from '../Namecheap' // eslint-disable-line\nimport tablature from 'tablature'\nimport bosom from 'bosom'\nimport { homedir } from 'os'\nimport { resolve } from 'path'\nimport { existsSync } from 'fs'\n\nconst path = resolve(homedir(), '.expensive.log')\n\n/** @param {Namecheap} nc */\nexport default async function check(nc, {\n  domains: d,\n  free,\n  zones = '',\n}) {\n  const domains = d\n    .reduce((acc, domain) => {\n      const singleWord = isSingleWord(domain)\n      if (singleWord) {\n        const z = zones ? zones.split(',') : []\n        const list = makeList(domain, z)\n        return [...acc, ...list]\n      }\n      return [...acc, domain]\n    }, [])\n\n  console.log('Checking domain%s %s', domains.length > 1 ? 's' : '', domains.join(', '))\n\n  const res = await nc.domains.check({\n    domains,\n  })\n  const data = domains\n    .map((domain) => {\n      const found = res.find(({ Domain }) => Domain == domain)\n      return found\n    })\n    .filter(({ Available }) => {\n      if (!free) return true\n      return Available\n    })\n  const hasPremium = data.some(({ IsPremiumName }) => IsPremiumName)\n  const hasPremiumRegPrice = data.some(({ PremiumRegistrationPrice }) => PremiumRegistrationPrice != '0.0000')\n  const t = tablature({\n    keys: ['Domain', 'Available',\n      ...(hasPremium ? ['IsPremiumName'] : []),\n      ...(hasPremiumRegPrice ? ['PremiumRegistrationPrice'] : []),\n    ],\n    data,\n    replacements: {\n      Available(v) {\n        if (v) {\n          return {\n            value: c('yes', 'green'),\n            length: 3,\n          }\n        }\n        return {\n          value: c('no', 'red'),\n          length: 2,\n        }\n      },\n      IsPremiumName(v) {\n        if (!v) return empty\n        return { value: c('\\u2713', 'green'), length: 1 }\n      },\n      PremiumRegistrationPrice(value) {\n        if (value == '0.0000') return empty\n        if (value) {\n          const newValue = value.replace(/(\\d+)\\.(\\d\\d)\\d\\d$/, (match, p1, p2) => `${p1}.${p2}`)\n          return {\n            value: newValue,\n            length: newValue.length,\n          }\n        }\n        return empty\n      },\n    },\n    headings: {\n      IsPremiumName: 'Premium',\n      PremiumRegistrationPrice: 'Price',\n    },\n    centerValues: ['Available', 'IsPremiumName'],\n  })\n  console.log(t)\n  await log(d.join(','), data)\n}\n\nconst log = async (domain, data) => {\n  const exists = existsSync(path)\n  if (!exists) {\n    await bosom(path, [])\n  }\n  const d = await bosom(path)\n  const newData = [\n    ...d,\n    {\n      [domain]: data.filter(({ Available }) => Available).map(({ Domain }) => Domain),\n    },\n  ]\n  await bosom(path, newData, { space: 2 })\n}\n\nconst empty = {\n  value: '',\n  length: 0,\n}\n"],"file":"check.js"}