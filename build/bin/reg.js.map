{"version":3,"sources":["../../src/bin/reg.js"],"names":["findDefault","addresses","AddressId","find","IsDefault","register","nc","domain","users","address","getList","id","getInfo"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAAqC;;AAErC;;;;;AAKO,MAAMA,cAAeC,SAAD,IAAe;AACxC,QAAM;AAAEC;AAAF,MAAgBD,UAAUE,IAAV,CAAe,CAAC;AAAEC;AAAF,GAAD,KAAmBA,SAAlC,KAAgD,EAAtE;AACA,SAAOF,SAAP;AACD,CAHM;AAKP;;;;;AACe,eAAeG,QAAf,CAAwBC,EAAxB,EAA4B;AACzCC;AADyC,CAA5B,EAEZ;AACD,QAAMN,YAAY,MAAMK,GAAGE,KAAH,CAASC,OAAT,CAAiBC,OAAjB,EAAxB;AACA,QAAMC,KAAKX,YAAYC,SAAZ,CAAX;AACA,QAAMQ,UAAU,MAAMH,GAAGE,KAAH,CAASC,OAAT,CAAiBG,OAAjB,CAAyB;AAAED;AAAF,GAAzB,CAAtB;AACA,WAJC,CAKD;AACD","sourcesContent":["import { askSingle } from 'reloquent'\nimport printList from '../lib/print/list'\nimport { getAddressList, getAddressInfo } from '..'\nimport Namecheap from '../Namecheap' // eslint-disable-line\n\n/**\n * Find a default address ID.\n * @param {Address[]} addresses A list of addresses.\n * @returns {number} A default address ID.\n */\nexport const findDefault = (addresses) => {\n  const { AddressId } = addresses.find(({ IsDefault }) => IsDefault) || {}\n  return AddressId\n}\n\n/** @param {Namecheap} nc */\nexport default async function register(nc, {\n  domain,\n}) {\n  const addresses = await nc.users.address.getList()\n  const id = findDefault(addresses)\n  const address = await nc.users.address.getInfo({ id })\n  debugger\n  // const address = await getAddressInfo(Auth, { id: defaultId })\n}\n"],"file":"reg.js"}