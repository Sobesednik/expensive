{"version":3,"sources":["../../src/bin/index.js"],"names":["LOG","DEBUG","test","process","env","NODE_DEBUG","d0","d1","argv","domain","isSingleWord","d","startupyDomains","makeList","map","s","findTaken","free","total","res","filter","t","f","indexOf","u","console","log","exit","single","domains","undefined","a","global","length","join","d2","taken","stack","message","error"],"mappings":"AAAA;;AACA;;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,oBAAS,WAAT,CAAZ;AACA,MAAMC,QAAQ,YAAYC,IAAZ,CAAiBC,QAAQC,GAAR,CAAYC,UAA7B,CAAd;AAEA,MAAM,IAAKC,EAAL,EAASC,EAAT,IAAeJ,QAAQK,IAA7B;AAEA,MAAMC,SAASF,KAAKA,EAAL,GAAUD,EAAzB;;AAEA,MAAMI,eAAeC,KAAK,CAAC,KAAKT,IAAL,CAAUS,CAAV,CAA3B;;AAEA,MAAMC,kBAAkB,CACtB,KADsB,EAEtB,KAFsB,EAGtB,KAHsB,EAItB,KAJsB,EAKtB,MALsB,CAAxB;;AAQA,MAAMC,WAAWF,KAAKC,gBAAgBE,GAAhB,CAAoBC,KAAM,GAAEJ,CAAE,GAAEI,CAAE,EAAlC,CAAtB,C,CAEE;AACA;AACA;AACA;AACA;;;AAEF,MAAMC,YAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,QAAMC,MAAMD,MAAME,MAAN,CAAcC,CAAD,IAAO;AAC9B,UAAMC,IAAIL,KAAKM,OAAL,CAAaF,CAAb,IAAkB,CAA5B;AACA,WAAOC,CAAP;AACD,GAHW,CAAZ;AAIA,SAAOH,GAAP;AACD,CAND;;AAQC,CAAC,YAAY;AACZ,MAAI,CAACV,MAAL,EAAa;AACX,UAAMe,IAAI,wBAAV;AACAC,YAAQC,GAAR,CAAYF,CAAZ;AACAC,YAAQC,GAAR;AACAvB,YAAQwB,IAAR,CAAa,CAAb;AACD;;AACD,QAAMC,SAASlB,aAAaD,MAAb,CAAf;AACA,QAAMoB,UAAUD,SAASf,SAASJ,MAAT,CAAT,GAA4B,EAA5C;AACA,QAAME,IAAIiB,SAASE,SAAT,GAAqBrB,MAA/B,CATY,CAUZ;AACA;;AACA,MAAI;AACF,UAAMsB,IAAI,MAAM,YAAK;AACnBC,cAAQ;AADW,KAAL,CAAhB;;AAGA,QAAIJ,MAAJ,EAAY;AACVH,cAAQC,GAAR,CAAY,yBAAZ,EAAuCG,QAAQI,MAA/C,EAAuDJ,QAAQK,IAAR,CAAa,IAAb,CAAvD;AACD,KAFD,MAEO,IAAIzB,MAAJ,EAAY;AACjBgB,cAAQC,GAAR,CAAY,oBAAZ,EAAkCjB,MAAlC;AACD;;AACD,UAAMU,MAAM,MAAM,oBAAa,EAC7B,GAAGY,CAD0B;AAE7BtB,cAAQE,CAFqB;AAG7BkB;AAH6B,KAAb,CAAlB;AAKA,UAAMtB,KAAKY,IAAIc,MAAf;;AACA,QAAI1B,EAAJ,EAAQ;AACN,YAAM4B,KAAKN,QAAQI,MAAnB;AACAR,cAAQC,GAAR,CAAY,oBAAZ,EAAkCnB,EAAlC,EAAsC4B,EAAtC,EAA0ChB,IAAIe,IAAJ,CAAS,IAAT,CAA1C;AACA,YAAME,QAAQpB,UAAUG,GAAV,EAAeU,OAAf,CAAd;AACAJ,cAAQC,GAAR,CAAY,qBAAZ,EAAmCS,KAAG5B,EAAtC,EAA0C4B,EAA1C,EAA8CC,MAAMF,IAAN,CAAW,IAAX,CAA9C;AACD,KALD,MAKO,IAAIN,MAAJ,EAAY;AACjBH,cAAQC,GAAR,CAAY,kCAAZ;AACD,KAFM,MAEA,IAAIjB,MAAJ,EAAY;AACjBgB,cAAQC,GAAR,CAAY,4BAAZ,EAA0CjB,MAA1C;AACD;AACF,GAzBD,CAyBE,OAAO;AAAE4B,SAAF;AAASC;AAAT,GAAP,EAA2B;AAC3BrC,YAAQD,IAAIqC,KAAJ,CAAR,GAAqBZ,QAAQc,KAAR,CAAcD,OAAd,CAArB;AACAnC,YAAQwB,IAAR,CAAa,CAAb;AACD;AACF,CAzCA","sourcesContent":["#!/usr/bin/env node\n/* eslint-disable no-console */\nimport { debuglog } from 'util'\nimport { checkDomains, auth } from '..'\nimport getUsage from './get-usage'\n\nconst LOG = debuglog('expensive')\nconst DEBUG = /expensive/.test(process.env.NODE_DEBUG)\n\nconst [, , d0, d1] = process.argv\n\nconst domain = d1 ? d1 : d0\n\nconst isSingleWord = d => !/\\./.test(d)\n\nconst startupyDomains = [\n  '.co',\n  '.cc',\n  '.io',\n  '.bz',\n  '.app',\n]\n\nconst makeList = d => startupyDomains.map(s => `${d}${s}`)\n\n  // const usa = us.reduce((acc, length, i) => {\n  //   const command = commands[i]\n  //   const s = pad(command, i)\n  //   return [...acc, s]\n  // }, [])\n\nconst findTaken = (free, total) => {\n  const res = total.filter((t) => {\n    const f = free.indexOf(t) < 0\n    return f\n  })\n  return res\n}\n\n;(async () => {\n  if (!domain) {\n    const u = getUsage()\n    console.log(u)\n    console.log()\n    process.exit(1)\n  }\n  const single = isSingleWord(domain)\n  const domains = single ? makeList(domain) : []\n  const d = single ? undefined : domain\n  // const sd = single ? startupyDomains.map(d => `${domain}${d}`).join(', ') : { length: 1 }\n  // const { l } = sd\n  try {\n    const a = await auth({\n      global: true,\n    })\n    if (single) {\n      console.log('Checking %s domains: %s', domains.length, domains.join(', '))\n    } else if (domain) {\n      console.log('Checking domain %s', domain)\n    }\n    const res = await checkDomains({\n      ...a,\n      domain: d,\n      domains,\n    })\n    const d1 = res.length\n    if (d1) {\n      const d2 = domains.length\n      console.log('%d/%d are free: %s', d1, d2, res.join(', '))\n      const taken = findTaken(res, domains)\n      console.log('%d/%d are taken: %s', d2-d1, d2, taken.join(', '))\n    } else if (single) {\n      console.log('None of the zones are available.')\n    } else if (domain) {\n      console.log('Domain %s is not available', domain)\n    }\n  } catch ({ stack, message }) {\n    DEBUG ? LOG(stack) : console.error(message)\n    process.exit(1)\n  }\n})()\n"],"file":"index.js"}