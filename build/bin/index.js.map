{"version":3,"sources":["../../src/bin/index.js"],"names":["LOG","DEBUG","test","process","env","NODE_DEBUG","d0","d1","argv","domain","u","commands","Object","keys","values","nameLength","commandLength","reduce","longestName","longestCommand","name","command","length","pad","string","l","t","Array","from","ts","map","_","join","s","usa","acc","i","value","c","v","usage","a","trim","isSingleWord","d","startupyDomains","makeList","console","log","exit","single","domains","undefined","global","res","stack","message","error"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { checkDomains, auth } from '..'\nimport { debuglog } from 'util'\n\nconst LOG = debuglog('expensive')\nconst DEBUG = /expensive/.test(process.env.NODE_DEBUG)\n\nconst [,,d0, d1] = process.argv\n\nconst domain = d1 ? d1 : d0\n\nconst u = {\n  domain: 'check a domain name in various startupy zones (.io, .cc, .co, .bz)',\n  'domain.com': 'check a domain name',\n  'domain1.com domain2.com': 'check multiple domain names',\n}\nconst commands = Object.keys(u)\nconst values = Object.values(u)\nconst [nameLength, commandLength] = commands.reduce(([longestName = 0, longestCommand = 0], name) => {\n  /** @type {string} */\n  const command = u[name]\n  if (command.length > longestCommand) longestCommand = command.length\n  if (name.length > longestName) longestName = name.length\n  return [longestName, longestCommand]\n}, [])\n\nconst pad = (string, length) => {\n  const l = length - string.length\n  const t = Array.from({ length: l })\n  const ts = t.map(_ => ' ').join('') // eslint-disable-line no-unused-vars\n  const s = `${string}${ts}`\n  return s\n}\n\nconst usa = commands.reduce((acc, command, i) => {\n  const value = values[i]\n  const c = pad(command, nameLength)\n  const v = pad(value, commandLength)\n  const s =  `${c}\\t${v}`\n  return [...acc, s]\n}, [])\n\nconst usage = `Usage:\n  expensive\n${usa.map(a => `\\t${a}`).join('\\n')}\n`.trim()\n\nconst isSingleWord = d => !/\\./.test(d)\n\nconst startupyDomains = [\n  '.co',\n  '.cc',\n  '.io',\n  '.bz',\n  '.app',\n]\n\nconst makeList = d => startupyDomains.map(s => `${d}${s}`)\n\n\n// const usa = us.reduce((acc, length, i) => {\n//   const command = commands[i]\n//   const s = pad(command, i)\n//   return [...acc, s]\n// }, [])\n\n;(async () => {\n  if (!domain) {\n    console.log(usage)\n    console.log()\n    process.exit(1)\n  }\n\n  const single = isSingleWord(domain)\n  const domains = single ? makeList(domain) : []\n\n  const d = single ? undefined : domain\n\n  try {\n    const a = await auth({\n      global: true,\n    })\n    const res = await checkDomains({\n      ...a,\n      domain: d,\n      domains,\n    })\n    console.log('The following are free: %s', res.join(', '))\n  } catch ({ stack, message }) {\n    DEBUG ? LOG(stack) : console.error(message)\n    process.exit(1)\n  }\n})()\n\n"],"file":"index.js"}