{"version":3,"sources":["../../src/bin/index.js"],"names":["LOG","DEBUG","test","process","env","NODE_DEBUG","_d0","_d1","argv","domain","isSingleWord","d","startupyDomains","makeList","map","s","findTaken","free","total","res","filter","t","f","indexOf","u","console","log","exit","single","domains","undefined","a","global","length","join","green","red","forEach","dd","push","stack","message","error"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n/* eslint-disable no-console */\nimport { checkDomains, auth } from '..'\nimport { c } from 'erte'\nimport getUsage from './get-usage'\n\nimport { debuglog } from 'util'\nconst LOG = debuglog('expensive')\nconst DEBUG = /expensive/.test(process.env.NODE_DEBUG)\n\nconst [, , _d0, _d1] = process.argv\nconst domain = _d1 ? _d1 : _d0\n\nconst isSingleWord = d => !/\\./.test(d)\n\nconst startupyDomains = [\n  '.co',\n  '.cc',\n  '.io',\n  '.bz',\n  '.app',\n]\n\nconst makeList = d => startupyDomains.map(s => `${d}${s}`)\n\n  // const usa = us.reduce((acc, length, i) => {\n  //   const command = commands[i]\n  //   const s = pad(command, i)\n  //   return [...acc, s]\n  // }, [])\n\nconst findTaken = (free, total) => {\n  const res = total.filter((t) => {\n    const f = free.indexOf(t) < 0\n    return f\n  })\n  return res\n}\n\n;(async () => {\n  if (!domain) {\n    const u = getUsage()\n    console.log(u)\n    console.log()\n    process.exit(1)\n  }\n  const single = isSingleWord(domain)\n  const domains = single ? makeList(domain) : []\n  const d = single ? undefined : domain\n  // const sd = single ? startupyDomains.map(d => `${domain}${d}`).join(', ') : { length: 1 }\n  // const { l } = sd\n  try {\n    const a = await auth({\n      global: true,\n    })\n    if (single) {\n      console.log('Checking %s domains: %s', domains.length, domains.join(', '))\n    } else if (domain) {\n      console.log('Checking domain %s', domain)\n    }\n    const res = await checkDomains({\n      ...a,\n      domain: d,\n      domains,\n    })\n    if (single) {\n      let green = 0\n      let red = 0\n      domains.forEach(dd => {\n        const s = []\n        let t\n        if (res.indexOf(dd) >= 0) {\n          t = c(dd, 'green')\n          green++\n        } else {\n          t = c(dd, 'red')\n          red++\n        }\n        s.push(t)\n        console.log('%s', s.join(' '))\n      })\n      console.log('%s% are free', (green / (green + red)) * 100)\n    } else {\n      if (res.length) {\n        console.log('%s is free', c(domain, 'green'))\n      } else {\n        console.log('%s is taken', c(domain, 'red'))\n      }\n    }\n    // if (d1 && !single) {\n    //   domains.forEach(dd => {\n    //     const s = []\n    //     let t\n    //     if (res.indexOf(dd)) {\n    //       t = c(dd, 'green')\n    //     } else {\n    //       t = c(dd, 'red')\n    //     }\n    //     s.push(t)\n    //     console.log('%s', s.join(' '))\n    //   })\n    //   console.log('%s% are free', (res.length / Math.max(domains.length, res.length)) * 100)\n    // } else if (single) {\n    //   console.log('None of the zones are available.')\n    // } else if (domain) {\n    //   if (d1) {\n    //   } else {\n    //   }\n  } catch ({ stack, message }) {\n    DEBUG ? LOG(stack) : console.error(message)\n    process.exit(1)\n  }\n})()\n"],"file":"index.js"}