{"version":3,"sources":["../../../src/lib/authenticate/lib.js"],"names":["checkLimit","Runtime","isLimitReached","evaluate","Error","checkAuth","doesNotMatch","expression","json","e","result","exceptionDetails","exception","description","JSON","parse","value","getValue","selector","res","setValue","click","focus","isBlocked","url","pathname","host","pb","match","re","endsWith","blockedExtensions","s","join","RegExp","numberRe","mapPhoneOptions","o","r","exec","g","n","gr","co"],"mappings":"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","sourcesContent":["import { parse } from 'url'\nimport { c } from 'erte'\n\n// import promto from 'promto'\n\nexport const checkLimit = async (Runtime) => {\n  const isLimitReached = await evaluate(Runtime, `\n    (() => {\n      try {\n        var el = document.querySelector('.alert.error')\n        var re = new RegExp('You have reached')\n        return re.test(el.innerHTML)\n      } catch (err) {\n        return false\n      }\n    })()\n  `)\n  if (isLimitReached) throw new Error('You have reached the limit on the number of times you can request two-factor verification code through text message (SMS). You can request a code again only after 60 minutes.')\n}\n\nexport const checkAuth = async (Runtime) => {\n  const doesNotMatch = await evaluate(Runtime, `\n    (() => {\n      try {\n        var el = document.querySelector('.loginForm .alert.error')\n        var re = new RegExp('The password does not match')\n        return re.test(el.innerHTML)\n      } catch (err) {\n        return false\n      }\n    })()\n  `)\n  if (doesNotMatch) throw new Error('The password does not match the user account or the account does not exist.')\n}\n\nexport const evaluate = async (Runtime, expression, json) => {\n  let e = expression\n  if (json) {\n    e = `\n    (() => {\n      var a = ${expression}\n      var j = JSON.stringify(a)\n      return j\n    })()`\n  }\n  const { result, exceptionDetails } = await Runtime.evaluate({\n    expression: e,\n  })\n  if (exceptionDetails) {\n    throw new Error(exceptionDetails.exception.description)\n  }\n  return json ? JSON.parse(result.value) : result.value\n}\n\n\nexport const getValue = async (Runtime, selector) => {\n  const expression = `document.querySelector('${selector}').value`\n  const res = await evaluate(Runtime, expression)\n  return res\n}\nexport const setValue = async (Runtime, selector, value) => {\n  const expression = `document.querySelector('${selector}').value = \"${value}\"`\n  await evaluate(Runtime, expression)\n}\nexport const click = async (Runtime, selector) => {\n  const expression = `document.querySelector('${selector}').click()`\n  const res = await evaluate(Runtime, expression)\n  return res\n}\nexport const focus = async (Runtime, selector) => {\n  const expression = `document.querySelector('${selector}').focus()`\n  const res = await evaluate(Runtime, expression)\n  return res\n}\n\n\nexport const isBlocked = (url) => {\n  const { pathname, host } = parse(url)\n  const pb = pathname.match(re)\n  if (pb) return true\n  return !host.endsWith('namecheap.com')\n  // const hb = host.match(reb)\n  // return !!hb\n}\n\nconst blockedExtensions = [\n  'css',\n  'png',\n  'svg',\n  'woff',\n  'ttf',\n  'assets/css',\n  'cart',\n  // 'GetCartTotalAndItemCount',\n  // 'Domains/.+',\n  // 'ExpiringSoon/.+',\n  // 'SiteServices/.+',\n]\nconst s = blockedExtensions.join('|')\nconst re = new RegExp(`(${s})$`)\n\nexport const numberRe = /(.+?)(\\d\\d\\d)$/\n\nexport const mapPhoneOptions = o => {\n  const r = numberRe.exec(o)\n  if (!r) return o\n  const [, g, n] = r\n  const gr = c(g, 'grey')\n  const co = `${gr}${n}`\n  return co\n}\n\n\n// const awaitSelector = (selector, interval = 100, timeout = 2000) => `\n//   new Promise((resolve, reject) => {\n//     var ms = ${interval}\n//     var i = 0\n//     var t = setInterval(() => {\n//       i += ms\n//       if (i > ${timeout}) {\n//         clearTimeout(t)\n//         return reject(new Error('Timeout of ${timeout}ms reached'))\n//       }\n//       var el = document.querySelector('${selector}')\n//       if (el) {\n//         clearTimeout(t)\n//         resolve(el)\n//       }\n//     }, ms)\n//   })\n// `\n\n// const awaitElement = async (Runtime, selector) => {\n//   const { exceptionDetails } = await Runtime.evaluate({\n//     expression: awaitSelector(selector),\n//     awaitPromise: true,\n//   })\n//   if (exceptionDetails) {\n//     throw new Error(exceptionDetails.exception.description)\n//   }\n// }\n\n\n// const blockedHosts = [\n//   'google-analytics.com',\n//   'collector.githubapp.com',\n//   'facebook.com',\n//   'pxf.io',\n//   'twitter.com',\n//   'bing.com',\n//   'ads-twitter.com',\n//   'answerdash.com',\n//   'googleadservices.com',\n//   'doubleclick.net',\n//   'facebook.net',\n//   'impactradius-event.com',\n//   'dnn506yrbagrg.cloudfront.net',\n//   'googletagmanager.com',\n// ]\n// const whiteListedHosts\n\n// const t = blockedHosts.map(h => {\n//   return h.replace(/\\./g, '\\\\.')\n// }).join('|')\n// const reb = new RegExp(`(${t})$`)\n// LOG(reb)\n"],"file":"lib.js"}