{"version":3,"sources":["../../../src/lib/authenticate/index.js"],"names":["LOG","S","process","env","SANDBOX","getHost","getApHost","getWhitelistUrl","host","u","USER_AGENT","authenticate","user","password","ip","phone","returnUrl","appHost","url","encodeURIComponent","session","Session","headers","SessionKey","request","body","data","hidden_LoginPassword","LoginUserName","LoginPassword","sessionEncryptValue","type","returnHeaders","validationErrorRe","err","exec","Error","replace","location","startsWith","loc","secondAuth","body2","token","extractXsrf","name","Date","toLocaleString","res","accountPassword","ipAddress","Success","Errors","map","Message","join","re","fs","test","options","length","value","ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$ddlAuthorizeList","ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnSendVerification","match","submitCode","b","code","text","ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$txtAuthVerification","ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnVerify","console","log"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AALA;AAOA,MAAMA,MAAM,oBAAS,WAAT,CAAZ;AAEA,MAAMC,IAAI,CAAC,CAACC,QAAQC,GAAR,CAAYC,OAAxB;AACAJ,IAAI,aAAJ,EAAmBC,CAAnB;;AAEA,MAAMI,UAAU,MAAM;AACpB,SAAQ,eAAcJ,IAAI,UAAJ,GAAiB,EAAG,eAA1C;AACD,CAFD;;AAGA,MAAMK,YAAY,MAAM;AACtB,SAAQ,kBAAiBL,IAAI,UAAJ,GAAiB,EAAG,eAA7C;AACD,CAFD;;AAIA,MAAMM,kBAAkB,MAAM;AAC5B,QAAMC,OAAOF,WAAb;AACA,QAAMG,IAAK,GAAED,IAAK,2CAAlB;AACA,SAAOC,CAAP;AACD,CAJD;;AAMA,MAAMC,aAAa,2HAAnB;;AAEA,MAAMC,eAAe,OAAO;AAC1BC,MAD0B;AAE1BC,UAF0B;AAG1BC,IAH0B;AAI1BC;AAJ0B,CAAP,KAKf;AACJ,QAAMC,YAAYT,iBAAlB;AACA,QAAMC,OAAOH,SAAb;AACA,QAAMY,UAAUX,WAAhB;AACA,QAAMY,MAAO,GAAEV,IAAK,0CAAyCW,mBAAmBH,SAAnB,CAA8B,EAA3F;AAEA,QAAMI,UAAU,IAAIC,YAAJ,CAAY;AAC1BC,aAAS;AACP,oBAAcZ;AADP;AADiB,GAAZ,CAAhB;AAKA,QAAM;AAAEa;AAAF,MAAiB,MAAMH,QAAQI,OAAR,CAAiB,GAAEhB,IAAK,gCAAxB,CAA7B;AAEA,QAAM;AAAEiB,QAAF;AAAQH;AAAR,MAAoB,MAAMF,QAAQI,OAAR,CAAgBN,GAAhB,EAAqB;AACnDQ,UAAM;AACJC,4BAAsB,EADlB;AAEJC,qBAAehB,IAFX;AAGJiB,qBAAehB,QAHX;AAIJiB,2BAAqBP;AAJjB,KAD6C;AAOnDQ,UAAM,MAP6C;AAQnDC,mBAAe;AARoC,GAArB,CAAhC;AAWA,QAAMC,oBAAoB,sEAA1B;AACA,QAAM,GAAGC,GAAH,IAAUD,kBAAkBE,IAAlB,CAAuBV,IAAvB,KAAgC,EAAhD;AACA,MAAIS,GAAJ,EAAS,MAAM,IAAIE,KAAJ,CAAUF,IAAIG,OAAJ,CAAY,eAAZ,EAA6B,EAA7B,CAAV,CAAN;;AAET,MAAIf,QAAQgB,QAAR,CAAiBC,UAAjB,CAA4B,kCAA5B,CAAJ,EAAqE;AACnE,UAAMC,MAAM,MAAMC,WAAY,GAAEjC,IAAK,GAAEc,QAAQgB,QAAS,EAAtC,EAAyClB,OAAzC,EAAkDL,KAAlD,CAAlB;AACA,uBAAMyB,GAAN,EAAWxB,SAAX,EAAuB,uCAAsCA,SAAU,EAAvE;AACD;;AACD,QAAM0B,QAAQ,MAAMtB,QAAQI,OAAR,CAAgBR,SAAhB,CAApB;AACA,QAAM2B,QAAQC,YAAYF,KAAZ,CAAd;AAEA,QAAMG,OAAQ,aAAY,IAAIC,IAAJ,GAAWC,cAAX,EAA4B,EAAzC,CAA2CV,OAA3C,CAAmD,IAAnD,EAAyD,GAAzD,CAAb;AACA,QAAMW,MAAM,MAAM5B,QAAQI,OAAR,CAAiB,GAAEP,OAAQ,wCAA3B,EAAoE;AACpFS,UAAM;AACJmB,UADI;AAEJI,uBAAiBpC,QAFb;AAGJqC,iBAAWpC;AAHP,KAD8E;AAMpFQ,aAAS;AACP,sBAAgBqB;AADT;AAN2E,GAApE,CAAlB;AAUA,MAAI,CAACK,IAAIG,OAAT,EAAkB,MAAM,IAAIf,KAAJ,CAAUY,IAAII,MAAJ,CAAWC,GAAX,CAAe,CAAC;AAAEC;AAAF,GAAD,KAAiBA,OAAhC,EAAyCC,IAAzC,CAA8C,IAA9C,CAAV,CAAN;AACnB,CApDD;;AAsDA,MAAMX,cAAenB,IAAD,IAAU;AAC5B,QAAM+B,KAAK,0DAAX;AACA,QAAMR,MAAMQ,GAAGrB,IAAH,CAAQV,IAAR,CAAZ;AACA,MAAI,CAACuB,GAAL,EAAU,MAAM,IAAIZ,KAAJ,CAAU,wDAAV,CAAN;AACV,QAAM,GAAGO,KAAH,IAAYK,GAAlB;AACA,SAAOL,KAAP;AACD,CAND;;AAQA,MAAMF,aAAa,OAAOH,QAAP,EAAiBlB,OAAjB,EAA0BL,KAA1B,KAAoC;AACrD,MAAI0C,EAAJ;AACA,MAAI/B,IAAJ;AAEA,QAAMD,OAAO,MAAML,QAAQI,OAAR,CAAgBc,QAAhB,CAAnB;AAEA,kBAAG,8BAA8BoB,IAA9B,CAAmCjC,IAAnC,CAAH,EAA6C,0CAA7C;AAEA,QAAMkC,UAAU,yBAAelC,IAAf,CAAhB;AACA,kBAAGkC,QAAQC,MAAX,EAAmB,6BAAnB;AAEA,QAAMC,QAAQ,MAAM,uBAAaF,OAAb,EAAsB5C,KAAtB,CAApB;AAEA0C,OAAK,2BAAiBhC,IAAjB,CAAL;AACAC,SAAO,EACL,GAAG+B,EADE;AAELK,8HAA0HD,KAFrH;AAGLE,iIAA6H;AAHxH,GAAP;AAKA,QAAMrB,QAAQ,MAAMtB,QAAQI,OAAR,CAAgBc,QAAhB,EAA0B;AAC5CZ,QAD4C;AAE5CK,UAAM;AAFsC,GAA1B,CAApB;;AAKA,MAAI,8CAA8C2B,IAA9C,CAAmDhB,KAAnD,CAAJ,EAA+D;AAC7D,UAAM,IAAIN,KAAJ,CAAUM,MAAMsB,KAAN,CAAY,6CAAZ,EAA2D,CAA3D,CAAV,CAAN;AACD;;AACD,kBAAG,+CAA+CN,IAA/C,CAAoDhB,KAApD,CAAH,EAA+D,wCAA/D;AAEA,QAAMF,MAAM,MAAMyB,WAAWvB,KAAX,EAAkBtB,OAAlB,EAA2BkB,QAA3B,CAAlB;AACA,SAAOE,GAAP;AACD,CA/BD;;AAiCA,MAAMyB,aAAa,OAAOxC,IAAP,EAAaL,OAAb,EAAsBkB,QAAtB,KAAmC;AACpD,QAAM,GAAG4B,CAAH,IAAQ,sCAAsC/B,IAAtC,CAA2CV,IAA3C,KAAoD,EAAlE;AACA,MAAI,CAACyC,CAAL,EAAQ,MAAM,IAAI9B,KAAJ,CAAU,0BAAV,CAAN;AAER,QAAM+B,OAAO,MAAM,0BAAU;AAC3BC,UAAO,8BAA6BF,CAAE;AADX,GAAV,CAAnB;AAGA,QAAMT,KAAK,2BAAiBhC,IAAjB,CAAX;AACA,QAAMC,OAAO,EACX,GAAG+B,EADQ;AAEXY,iIAA6HF,IAFlH;AAGXG,uHAAmH;AAHxG,GAAb;AAMA,QAAM;AAAE7C,UAAMiB,KAAR;AAAepB;AAAf,MAA2B,MAAMF,QAAQI,OAAR,CAAgBc,QAAhB,EAA0B;AAC/DZ,QAD+D;AAE/DK,UAAM,MAFyD;AAG/DC,mBAAe;AAHgD,GAA1B,CAAvC;;AAKA,MAAI,uCAAuC0B,IAAvC,CAA4ChB,KAA5C,CAAJ,EAAwD;AACtD6B,YAAQC,GAAR,CAAY,iBAAZ;AACA,UAAMxB,MAAM,MAAMiB,WAAWvB,KAAX,EAAkBtB,OAAlB,EAA2BkB,QAA3B,CAAlB;AACA,WAAOU,GAAP;AACD;;AACD,kBAAG,eAAeU,IAAf,CAAoBhB,KAApB,CAAH,EAA+B,0CAA/B;AACA,SAAOpB,QAAQgB,QAAf;AACD,CA1BD;;eA4Be3B,Y","sourcesContent":["/* eslint-disable no-console */\nimport { debuglog } from 'util'\nimport { equal, ok } from 'assert'\nimport { askSingle } from 'reloquent'\nimport { Session } from 'rqt'\nimport { extractFormState, extractOptions, askForNumber } from './lib'\n\nconst LOG = debuglog('expensive')\n\nconst S = !!process.env.SANDBOX\nLOG('sandbox: %s', S)\n\nconst getHost = () => {\n  return `https://www.${S ? 'sandbox.' : ''}namecheap.com`\n}\nconst getApHost = () => {\n  return `https://ap.www.${S ? 'sandbox.' : ''}namecheap.com`\n}\n\nconst getWhitelistUrl = () => {\n  const host = getApHost()\n  const u = `${host}/settings/tools/apiaccess/whitelisted-ips`\n  return u\n}\n\nconst USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36'\n\nconst authenticate = async ({\n  user,\n  password,\n  ip,\n  phone,\n}) => {\n  const returnUrl = getWhitelistUrl()\n  const host = getHost()\n  const appHost = getApHost()\n  const url = `${host}/myaccount/login-signup.aspx?ReturnUrl=${encodeURIComponent(returnUrl)}`\n\n  const session = new Session({\n    headers: {\n      'User-Agent': USER_AGENT,\n    },\n  })\n  const { SessionKey } = await session.request(`${host}/cart/ajax/SessionHandler.ashx`)\n\n  const { body, headers } = await session.request(url, {\n    data: {\n      hidden_LoginPassword: '',\n      LoginUserName: user,\n      LoginPassword: password,\n      sessionEncryptValue: SessionKey,\n    },\n    type: 'form',\n    returnHeaders: true,\n  })\n\n  const validationErrorRe = /<strong class=\"title\">Validation Error<\\/strong>\\s+<div>(.+?)<\\/div>/\n  const [, err] = validationErrorRe.exec(body) || []\n  if (err) throw new Error(err.replace(/(<([^>]+)>)/ig, ''))\n\n  if (headers.location.startsWith('/myaccount/twofa/secondauth.aspx')) {\n    const loc = await secondAuth(`${host}${headers.location}`, session, phone)\n    equal(loc, returnUrl, `Expected to have been redirected to ${returnUrl}`)\n  }\n  const body2 = await session.request(returnUrl)\n  const token = extractXsrf(body2)\n\n  const name = `expensive ${new Date().toLocaleString()}`.replace(/:/g, '-')\n  const res = await session.request(`${appHost}/api/v1/ncpl/apiaccess/ui/AddIpAddress`, {\n    data: {\n      name,\n      accountPassword: password,\n      ipAddress: ip,\n    },\n    headers: {\n      'x-ncpl-rcsrf': token,\n    },\n  })\n  if (!res.Success) throw new Error(res.Errors.map(({ Message }) => Message).join(', '))\n}\n\nconst extractXsrf = (body) => {\n  const re = /<input type=\"hidden\" id=\"x-ncpl-csrfvalue\" value=\"(.+?)\"/\n  const res = re.exec(body)\n  if (!res) throw new Error('Could not find the x-ncpl-csrfvalue token on the page.')\n  const [, token] = res\n  return token\n}\n\nconst secondAuth = async (location, session, phone) => {\n  let fs\n  let data\n\n  const body = await session.request(location)\n\n  ok(/Select Phone Contact Number/.test(body), 'Could not find the Select Phone section.')\n\n  const options = extractOptions(body)\n  ok(options.length, 'Could not find any numbers.')\n\n  const value = await askForNumber(options, phone)\n\n  fs = extractFormState(body)\n  data = {\n    ...fs,\n    ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$ddlAuthorizeList: value,\n    ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnSendVerification: 'Proceed with Login',\n  }\n  const body2 = await session.request(location, {\n    data,\n    type: 'form',\n  })\n\n  if (/You have reached the limit on the number.+/m.test(body2)) {\n    throw new Error(body2.match(/You have reached the limit on the number.+/m)[0])\n  }\n  ok(/We sent a message with the verification code/.test(body2), 'Could not find the code entry section.')\n\n  const loc = await submitCode(body2, session, location)\n  return loc\n}\n\nconst submitCode = async (body, session, location) => {\n  const [, b] = /Your 6-digit code begins with (\\d)./.exec(body) || []\n  if (!b) throw new Error('Could not send the code.')\n\n  const code = await askSingle({\n    text: `Security code (begins with ${b})`,\n  })\n  const fs = extractFormState(body)\n  const data = {\n    ...fs,\n    ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$txtAuthVerification: code,\n    ctl00$ctl00$ctl00$ctl00$base_content$web_base_content$home_content$page_content_left$CntrlAuthorization$btnVerify: 'Submit Security Code',\n  }\n\n  const { body: body2, headers } = await session.request(location, {\n    data,\n    type: 'form',\n    returnHeaders: true,\n  })\n  if (/Oops, you entered an invalid code.+/m.test(body2)) {\n    console.log('Incorrect code.')\n    const res = await submitCode(body2, session, location)\n    return res\n  }\n  ok(/Object moved/.test(body2), 'Expected to be redirected after sign-in.')\n  return headers.location\n}\n\nexport default authenticate\n"],"file":"index.js"}