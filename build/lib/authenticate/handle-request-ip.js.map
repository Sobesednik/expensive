{"version":3,"sources":["../../../src/lib/authenticate/handle-request-ip.js"],"names":["handleRequestIP","message","phone","user","head","_ip","exec","Error","ip","password","chrome","Promise","all","text","chromeFlags","res"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,kBAAkB,OAAOC,OAAP,EAAgB;AAAEC,OAAF;AAASC,MAAT;AAAeC;AAAf,CAAhB,KAA0C;AAChE,QAAMC,MAAM,2BAA2BC,IAA3B,CAAgCL,OAAhC,CAAZ;;AACA,MAAI,CAACI,GAAL,EAAU,MAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACV,QAAM,GAAGC,EAAH,IAASH,GAAf;AACA,QAAM,CAACI,QAAD,EAAWC,MAAX,IAAqB,MAAMC,QAAQC,GAAR,CAAY,CAC3C,0BAAU;AACRC,UAAO,gCAA+BL,EAAG;AADjC,GAAV,CAD2C,EAI3C,4BAAO;AACLM,iBAAa,CACX,IAAIV,OAAO,EAAP,GAAY,CAAC;AAAY;AAAb,KAAhB,CADW;AADR,GAAP,CAJ2C,CAAZ,CAAjC;AAaA,QAAMW,MAAM,MAAM,eAAa;AAC7BZ,QAD6B;AAE7BM,YAF6B;AAG7BD,MAH6B;AAI7BN,SAJ6B;AAK7BQ;AAL6B,GAAb,CAAlB;AAOA,SAAOK,GAAP;AACD,CAzBD;;eA2Bef,e","sourcesContent":["import authenticate from '.'\nimport { launch } from 'chrome-launcher'\nimport { askSingle } from 'reloquent'\n\nconst handleRequestIP = async (message, { phone, user, head }) => {\n  const _ip = /Invalid request IP: (.+)/.exec(message)\n  if (!_ip) throw new Error('Could not extract IP from the error message')\n  const [, ip] = _ip\n  const [password, chrome] = await Promise.all([\n    askSingle({\n      text: `Enter password to white-list ${ip}`,\n    }),\n    launch({\n      chromeFlags: [\n        ...(head ? [] : ['--headless'/*, '--window-size=1000,2000'*/]),\n        // userDataDir,\n        // '--headless', '--disable-gpu',\n      ],\n    }),\n  ])\n\n  const res = await authenticate({\n    user,\n    password,\n    ip,\n    phone,\n    chrome,\n  })\n  return res\n}\n\nexport default handleRequestIP\n"],"file":"handle-request-ip.js"}