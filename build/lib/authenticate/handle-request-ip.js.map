{"version":3,"sources":["../../../src/lib/authenticate/handle-request-ip.js"],"names":["handleRequestIP","message","phone","user","_ip","exec","Error","ip","password","text","m","stack","console","log"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,kBAAkB,OAAOC,OAAP,EAAgB;AAAEC,OAAF;AAASC;AAAT,CAAhB,KAAoC;AAC1D,QAAMC,MAAM,2BAA2BC,IAA3B,CAAgCJ,OAAhC,CAAZ;;AACA,MAAI,CAACG,GAAL,EAAU,MAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACV,QAAM,GAAGC,EAAH,IAASH,GAAf;AACA,QAAMI,WAAW,MAAM,0BAAU;AAC/BC,UAAO,gCAA+BF,EAAG;AADV,GAAV,CAAvB;;AAIA,MAAI;AACF,UAAM,eAAa;AACjBJ,UADiB;AAEjBK,cAFiB;AAGjBD,QAHiB;AAIjBL;AAJiB,KAAb,CAAN;AAMA,WAAO,IAAP;AACD,GARD,CAQE,OAAO;AAAED,aAASS,CAAX;AAAcC;AAAd,GAAP,EAA8B;AAC9BC,YAAQC,GAAR,CAAYF,KAAZ;AACA,WAAOD,CAAP;AACD;AACF,CApBD;;eAsBeV,e","sourcesContent":["import { askSingle } from 'reloquent'\nimport authenticate from '.'\n\nconst handleRequestIP = async (message, { phone, user }) => {\n  const _ip = /Invalid request IP: (.+)/.exec(message)\n  if (!_ip) throw new Error('Could not extract IP from the error message')\n  const [, ip] = _ip\n  const password = await askSingle({\n    text: `Enter password to white-list ${ip}`,\n  })\n\n  try {\n    await authenticate({\n      user,\n      password,\n      ip,\n      phone,\n    })\n    return true\n  } catch ({ message: m, stack }) {\n    console.log(stack)\n    return m\n  }\n}\n\nexport default handleRequestIP\n"],"file":"handle-request-ip.js"}