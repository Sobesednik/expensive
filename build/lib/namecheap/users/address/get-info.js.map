{"version":3,"sources":["../../../../../src/lib/namecheap/users/address/get-info.js"],"names":["LOG","COMMAND","getList","Auth","id","res","AddressId","content","GetAddressInfoResult","address","getInfo","keys","add","reduce","acc","key","parseInt","er"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,oBAAS,WAAT,CAAZ;AAEA,MAAMC,UAAU,iCAAhB;;AAEe,eAAeC,OAAf,CAAuBC,OAAO,EAA9B,EAAkC;AAC/CC;AAD+C,CAAlC,EAEZ;AACD,QAAMC,MAAM,MAAM,oBAAM,EACtB,GAAGF;AADmB,GAAN,EAEfF,OAFe,EAEN;AACVK,eAAWF;AADD,GAFM,CAAlB;AAKA,QAAM,CAAC;AAAEG,aAASC;AAAX,GAAD,IAAsC,kBAAW,sBAAX,EAAmCH,GAAnC,CAA5C;AACA,QAAMI,UAAUC,QAAQF,oBAAR,CAAhB;AACA,SAAOC,OAAP;AACD;;AAED,MAAME,OAAO,CACX,WADW,EACE,UADF,EACc,aADd,EAC6B,YAD7B,EAEX,WAFW,EAEE,UAFF,EAEc,UAFd,EAE0B,cAF1B,EAE0C,UAF1C,EAEsD,UAFtD,EAGX,MAHW,EAGH,eAHG,EAGc,qBAHd,EAGqC,KAHrC,EAG4C,SAH5C,EAGuD,OAHvD,EAIX,UAJW,EAIC,cAJD,CAAb;;AAOA,MAAMD,UAAWE,GAAD,IAAS;AACvB,QAAMP,MAAMM,KACTE,MADS,CACF,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpB,QAAI;AACF,UAAI,CAAC;AAAER;AAAF,OAAD,IAAgB,kBAAWQ,GAAX,EAAgBH,GAAhB,CAApB;;AACA,UAAIG,OAAO,YAAX,EAAyB;AACvBR,kBAAUA,WAAW,MAArB;AACD,OAFD,MAEO,IAAIQ,OAAO,WAAX,EAAwB;AAC7BR,kBAAUS,SAAST,OAAT,EAAkB,EAAlB,CAAV;AACD;;AACD,aAAO,EACL,GAAGO,GADE;AAEL,SAACC,GAAD,GAAOR;AAFF,OAAP;AAID,KAXD,CAWE,OAAOU,EAAP,EAAW;AACXjB,UAAK,yBAAwBe,GAAI,EAAjC;AACA,aAAOD,GAAP;AACD;AACF,GAjBS,EAiBP,EAjBO,CAAZ;AAkBA,SAAOT,GAAP;AACD,CApBD","sourcesContent":["import { debuglog } from 'util'\nimport query from '../../../../lib/query'\nimport { extractTag } from '../../..'\n\nconst LOG = debuglog('expensive')\n\nconst COMMAND = 'namecheap.users.address.getInfo'\n\nexport default async function getList(Auth = {}, {\n  id,\n}) {\n  const res = await query({\n    ...Auth,\n  }, COMMAND, {\n    AddressId: id,\n  })\n  const [{ content: GetAddressInfoResult }] = extractTag('GetAddressInfoResult', res)\n  const address = getInfo(GetAddressInfoResult)\n  return address\n}\n\nconst keys = [\n  'AddressId', 'UserName', 'AddressName', 'Default_YN',\n  'FirstName', 'LastName', 'JobTitle', 'Organization', 'Address1', 'Address2',\n  'City', 'StateProvince', 'StateProvinceChoice', 'Zip', 'Country', 'Phone',\n  'PhoneExt', 'EmailAddress',\n]\n\nconst getInfo = (add) => {\n  const res = keys\n    .reduce((acc, key) => {\n      try {\n        let [{ content }] = extractTag(key, add)\n        if (key == 'Default_YN') {\n          content = content == 'true'\n        } else if (key == 'AddressId') {\n          content = parseInt(content, 10)\n        }\n        return {\n          ...acc,\n          [key]: content,\n        }\n      } catch (er) {\n        LOG(`Could not extract tag ${key}`)\n        return acc\n      }\n    }, {})\n  return res\n}\n"],"file":"get-info.js"}