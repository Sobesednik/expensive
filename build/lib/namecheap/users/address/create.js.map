{"version":3,"sources":["../../../../../src/lib/namecheap/users/address/create.js"],"names":["COMMAND","getList","Auth","conf","id","res","AddressId","content","GetAddressInfoResult","address","getInfo","keys","add","reduce","acc","key","er","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,UAAU,iCAAhB;;AAEA,MAAMC,UAAU,OAAOC,OAAO,EAAd,EAAkBC,IAAlB,KAA2B;AACzC,QAAM;AACJC;AADI,MAEFD,IAFJ;AAGA,QAAME,MAAM,MAAM,oBAAM,EACtB,GAAGH;AADmB,GAAN,EAEfF,OAFe,EAEN;AACVM,eAAWF;AADD,GAFM,CAAlB;AAKA,QAAM,CAAC;AAAEG,aAASC;AAAX,GAAD,IAAsC,kBAAW,sBAAX,EAAmCH,GAAnC,CAA5C;AACA,QAAMI,UAAUC,QAAQF,oBAAR,CAAhB;AACA,SAAOC,OAAP;AACD,CAZD;AAcA;;;;;;;;;;;;;;;;;;;;;AAoBA,MAAME,OAAO,CACX,WADW,EACE,UADF,EACc,UADd,EAC0B,cAD1B,EAC0C,UAD1C,EACsD,UADtD,EAEX,MAFW,EAEH,eAFG,EAEc,qBAFd,EAEqC,KAFrC,EAE4C,SAF5C,EAEuD,OAFvD,EAGX,UAHW,EAGC,cAHD,CAAb;;AAMA,MAAMD,UAAWE,GAAD,IAAS;AACvB,QAAMP,MAAMM,KAAKE,MAAL,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAI;AACF,YAAM,CAAC;AAAER;AAAF,OAAD,IAAgB,kBAAWQ,GAAX,EAAgBH,GAAhB,CAAtB;AACA,aAAO,EACL,GAAGE,GADE;AAEL,SAACC,GAAD,GAAOR;AAFF,OAAP;AAID,KAND,CAME,OAAOS,EAAP,EAAW;AACX,YAAM,IAAIC,KAAJ,CAAW,yBAAwBF,GAAI,EAAvC,CAAN;AACD;AACF,GAVW,EAUT,EAVS,CAAZ;AAWA,SAAOV,GAAP;AACD,CAbD;;eAeeJ,O","sourcesContent":["import query from '../../../../lib/query'\nimport { extractTag } from '../../..'\n\nconst COMMAND = 'namecheap.users.address.getInfo'\n\nconst getList = async (Auth = {}, conf) => {\n  const {\n    id,\n  } = conf\n  const res = await query({\n    ...Auth,\n  }, COMMAND, {\n    AddressId: id,\n  })\n  const [{ content: GetAddressInfoResult }] = extractTag('GetAddressInfoResult', res)\n  const address = getInfo(GetAddressInfoResult)\n  return address\n}\n\n/**\n * @typedef {Object} Config\n * @property {number} id ID of an address.\n * @typedef {Object} Address\n * @property {string} FirstName\n * @property {string} LastName\n * @property {string} JobTitle\n * @property {string} Organization\n * @property {string} Address1\n * @property {string} Address2\n * @property {string} City\n * @property {string} StateProvince\n * @property {string} StateProvinceChoice\n * @property {string} Zip\n * @property {string} Country\n * @property {string} Phone\n * @property {string} PhoneExt\n * @property {string} EmailAddress\n */\n\nconst keys = [\n  'FirstName', 'LastName', 'JobTitle', 'Organization', 'Address1', 'Address2',\n  'City', 'StateProvince', 'StateProvinceChoice', 'Zip', 'Country', 'Phone',\n  'PhoneExt', 'EmailAddress',\n]\n\nconst getInfo = (add) => {\n  const res = keys.reduce((acc, key) => {\n    try {\n      const [{ content }] = extractTag(key, add)\n      return {\n        ...acc,\n        [key]: content,\n      }\n    } catch (er) {\n      throw new Error(`Could not extract tag ${key}`)\n    }\n  }, {})\n  return res\n}\n\nexport default getList\n"],"file":"create.js"}