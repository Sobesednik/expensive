{"version":3,"sources":["../../../../src/lib/namecheap/domains/get-info.js"],"names":["GET_INFO","execRes","re","s","res","exec","args","propsRe","extractProps","t","r","key","value","push","reduce","acc","extractTag","tag","string","RegExp","length","p","c","props","item","content","trim","getInfo","domain","Auth","DomainName","DomainDetails","Created","Expired","Whoisguard","WhoisProps","EmailDetails","DnsDetails","DnsProps","Nameservers","map","WhoisEnabled","Enabled"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,WAAW,2BAAjB;;AAEA,MAAMC,UAAU,CAACC,EAAD,EAAKC,CAAL,KAAW;AACzB,QAAMC,MAAMF,GAAGG,IAAH,CAAQF,CAAR,CAAZ;AACA,MAAI,CAACC,GAAL,EAAU,OAAOA,GAAP;AACV,QAAM,GAAG,GAAGE,IAAN,IAAcF,GAApB;AACA,SAAOE,IAAP;AACD,CALD;;AAOA,MAAMC,UAAU,gBAAhB;;AACA,MAAMC,eAAgBL,CAAD,IAAO;AAC1B,MAAIM,CAAJ;AACA,QAAMC,IAAI,EAAV;;AACA,SAAM,CAACD,IAAIF,QAAQF,IAAR,CAAaF,CAAb,CAAL,MAA0B,IAAhC,EAAsC;AACpC,UAAM,GAAGQ,GAAH,EAAQC,KAAR,IAAiBH,CAAvB;AACAC,MAAEG,IAAF,CAAO;AACLF,SADK;AAELC;AAFK,KAAP;AAID;;AACD,SAAOF,EAAEI,MAAF,CAAS,CAACC,GAAD,EAAM;AAAEJ,OAAF;AAAOC;AAAP,GAAN,MAA0B,EACxC,GAAGG,GADqC;AAExC,KAACJ,GAAD,GAAOC;AAFiC,GAA1B,CAAT,EAGH,EAHG,CAAP;AAID,CAdD;;AAgBA,MAAMI,aAAa,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAClC,QAAMhB,KAAK,IAAIiB,MAAJ,CAAY,IAAGF,GAAI,4BAA2BA,GAAI,KAAlD,EAAwD,GAAxD,CAAX;AACA,QAAMP,IAAI,EAAV;AAEA,MAAID,CAAJ;;AACA,SAAO,CAACA,IAAIR,QAAQC,EAAR,EAAYgB,MAAZ,CAAL,MAA8B,IAArC,EAA2C;AACzC,QAAI,CAACT,EAAEW,MAAP,EAAe;AACf,UAAM,CAACC,CAAD,EAAIC,IAAI,EAAR,IAAcb,CAApB;AACA,UAAMc,QAAQf,aAAaa,CAAb,CAAd;AACA,UAAMG,OAAO;AACXD,WADW;AAEXE,eAASH,EAAEI,IAAF;AAFE,KAAb;AAIAhB,MAAEG,IAAF,CAAOW,IAAP;AACD;;AACD,SAAOd,CAAP;AACD,CAhBD;AAkBA;;;;;AAGA,MAAMiB,UAAU,OAAOC,MAAP,EAAeC,OAAO,EAAtB,KAA6B;AAC3C,QAAMzB,MAAM,MAAM,oBAAM,EACtB,GAAGyB;AADmB,GAAN,EAEf7B,QAFe,EAEL;AAAE8B,gBAAYF;AAAd,GAFK,CAAlB;AAIA,QAAM,CAAC;AAAEH,aAASM;AAAX,GAAD,IAA+Bf,WAAW,eAAX,EAA4BZ,GAA5B,CAArC;AACA,QAAM,CAAC;AAAEqB,aAASO;AAAX,GAAD,IAAyBhB,WAAW,aAAX,EAA0Be,aAA1B,CAA/B;AACA,QAAM,CAAC;AAAEN,aAASQ;AAAX,GAAD,IAAyBjB,WAAW,aAAX,EAA0Be,aAA1B,CAA/B;AACA,QAAM,CAAC;AAAEN,aAASS,UAAX;AAAuBX,WAAOY;AAA9B,GAAD,IAA+CnB,WAAW,YAAX,EAAyBZ,GAAzB,CAArD;AACA,QAAM,CAAC;AAAEmB,WAAOa;AAAT,MAA0B,EAA3B,IAAiCpB,WAAW,cAAX,EAA2BkB,UAA3B,CAAvC;AACA,QAAM,CAAC;AAAET,aAASY,UAAX;AAAuBd,WAAOe;AAA9B,GAAD,IAA6CtB,WAAW,YAAX,EAAyBZ,GAAzB,CAAnD;AACA,QAAMmC,cAAcvB,WAAW,YAAX,EAAyBqB,UAAzB,EAAqCG,GAArC,CAAyC,CAAC;AAAEf;AAAF,GAAD,KAAiBA,OAA1D,CAApB;AACA,SAAO;AACLO,WADK;AAELC,WAFK;AAGLQ,kBAAcN,WAAWO,OAHpB;AAILH,eAJK;AAKLH,gBALK;AAMLE;AANK,GAAP;AAQD,CApBD;;eAsBeX,O","sourcesContent":["import query from '../../../lib/query'\n\nconst GET_INFO = 'namecheap.domains.getinfo'\n\nconst execRes = (re, s) => {\n  const res = re.exec(s)\n  if (!res) return res\n  const [, ...args] = res\n  return args\n}\n\nconst propsRe = /(\\w+)=\"(.*?)\"/g\nconst extractProps = (s) => {\n  let t\n  const r = []\n  while((t = propsRe.exec(s)) !== null) {\n    const [, key, value] = t\n    r.push({\n      key,\n      value,\n    })\n  }\n  return r.reduce((acc, { key, value }) => ({\n    ...acc,\n    [key]: value,\n  }), {})\n}\n\nconst extractTag = (tag, string) => {\n  const re = new RegExp(`<${tag}(.*?)/?>(?:([\\\\s\\\\S]+?)</${tag}>)?`, 'g')\n  const r = []\n\n  let t\n  while ((t = execRes(re, string)) !== null) {\n    if (!t.length) continue\n    const [p, c = ''] = t\n    const props = extractProps(p)\n    const item = {\n      props,\n      content: c.trim(),\n    }\n    r.push(item)\n  }\n  return r\n}\n\n/**\n * @param {string} domain a domain name to view info for.\n */\nconst getInfo = async (domain, Auth = {}) => {\n  const res = await query({\n    ...Auth,\n  }, GET_INFO, { DomainName: domain })\n\n  const [{ content: DomainDetails }] = extractTag('DomainDetails', res)\n  const [{ content: Created }] = extractTag('CreatedDate', DomainDetails)\n  const [{ content: Expired }] = extractTag('ExpiredDate', DomainDetails)\n  const [{ content: Whoisguard, props: WhoisProps }] = extractTag('Whoisguard', res)\n  const [{ props: EmailDetails } = {}] = extractTag('EmailDetails', Whoisguard)\n  const [{ content: DnsDetails, props: DnsProps }] = extractTag('DnsDetails', res)\n  const Nameservers = extractTag('Nameserver', DnsDetails).map(({ content }) => content)\n  return {\n    Created,\n    Expired,\n    WhoisEnabled: WhoisProps.Enabled,\n    Nameservers,\n    EmailDetails,\n    DnsProps,\n  }\n}\n\nexport default getInfo\n"],"file":"get-info.js"}