{"version":3,"sources":["../../../../src/lib/namecheap/domains/create.js"],"names":["COMMAND","create","Auth","conf","domain","years","promo","address","nameservers","whois","RegistrantAddress","getAddressObject","TechAddress","AdminAddress","AuxAddress","res","DomainName","Years","PromotionCode","Nameservers","join","AddFreeWhoisguard","WGEnabled","props","keys","key","reduce","acc","current","val","Organization","Zip"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,UAAU,0BAAhB;;AAEe,eAAeC,MAAf,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAC/C,QAAM;AACJC,UADI;AAEJC,YAAQ,CAFJ;AAGJC,SAHI;AAIJC,WAJI;AAKJC,kBAAc,EALV;AAMJC,YAAQ;AANJ,MAOFN,IAPJ;AAQA,QAAMO,oBAAoBC,iBAAiBJ,OAAjB,EAA0B,YAA1B,CAA1B;AACA,QAAMK,cAAcD,iBAAiBJ,OAAjB,EAA0B,MAA1B,CAApB;AACA,QAAMM,eAAeF,iBAAiBJ,OAAjB,EAA0B,OAA1B,CAArB;AACA,QAAMO,aAAaH,iBAAiBJ,OAAjB,EAA0B,YAA1B,CAAnB;AAEA,QAAMQ,MAAM,MAAM,oBAAMb,IAAN,EAAYF,OAAZ,EAAqB;AACrCgB,gBAAYZ,MADyB;AAErCa,WAAOZ,KAF8B;AAGrCa,mBAAeZ,KAHsB;AAIrC,OAAGI,iBAJkC;AAKrC,OAAGE,WALkC;AAMrC,OAAGC,YANkC;AAOrC,OAAGC,UAPkC;AAQrCK,iBAAaX,YAAYY,IAAZ,CAAiB,GAAjB,CARwB;AASrCC,uBAAmBZ,QAAQ,KAAR,GAAgB,IATE;AAUrCa,eAAWb,QAAQ,KAAR,GAAgB;AAVU,GAArB,CAAlB;AAYA,QAAM,CAAC;AAAEc;AAAF,GAAD,IAAc,kBAAW,oBAAX,EAAiCR,GAAjC,CAApB;AACA,SAAOQ,KAAP;AACD;;AAED,MAAMC,OAAO,CAAC,UAAD,EAAa,WAAb,EAA0B,UAA1B,EAAsC,UAAtC,EAAkD,UAAlD,EACX,MADW,EACH,eADG,EACc,qBADd,EACqC,SADrC,EAEX,OAFW,EAEF,UAFE,EAEU,KAFV,EAEiB,cAFjB,CAAb;AAIA;;;;AAGO,MAAMb,mBAAmB,CAACJ,OAAD,EAAUkB,GAAV,KAAkB;AAChD,QAAMV,MAAMS,KACTE,MADS,CACF,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACxB,UAAMC,MAAOD,WAAW,eAAX,IAA8B,CAACrB,QAAQqB,OAAR,CAAhC,GAAoD,IAApD,GAA2DrB,QAAQqB,OAAR,CAAvE;AACA,WAAO,EACL,GAAGD,GADE;AAEL,OAAE,GAAEF,GAAI,GAAEG,OAAQ,EAAlB,GAAsBC;AAFjB,KAAP;AAID,GAPS,EAOP;AACD,KAAE,GAAEJ,GAAI,kBAAR,GAA4BlB,QAAQuB,YADnC;AAED,KAAE,GAAEL,GAAI,YAAR,GAAsBlB,QAAQwB;AAF7B,GAPO,CAAZ;AAWA,SAAOhB,GAAP;AACD,CAbM","sourcesContent":["import query from '../../../lib/query'\nimport { extractTag } from '../..'\n\nconst COMMAND = 'namecheap.domains.create'\n\nexport default async function create(Auth, conf) {\n  const {\n    domain,\n    years = 1,\n    promo,\n    address,\n    nameservers = [],\n    whois = true,\n  } = conf\n  const RegistrantAddress = getAddressObject(address, 'Registrant')\n  const TechAddress = getAddressObject(address, 'Tech')\n  const AdminAddress = getAddressObject(address, 'Admin')\n  const AuxAddress = getAddressObject(address, 'AuxBilling')\n\n  const res = await query(Auth, COMMAND, {\n    DomainName: domain,\n    Years: years,\n    PromotionCode: promo,\n    ...RegistrantAddress,\n    ...TechAddress,\n    ...AdminAddress,\n    ...AuxAddress,\n    Nameservers: nameservers.join(','),\n    AddFreeWhoisguard: whois ? 'yes' : 'no',\n    WGEnabled: whois ? 'yes' : 'no',\n  })\n  const [{ props }] = extractTag('DomainCreateResult', res)\n  return props\n}\n\nconst keys = ['JobTitle', 'FirstName', 'LastName', 'Address1', 'Address2',\n  'City', 'StateProvince', 'StateProvinceChoice', 'Country',\n  'Phone', 'PhoneExt', 'Fax', 'EmailAddress']\n\n/**\n * @param {AddressDetail} address\n */\nexport const getAddressObject = (address, key) => {\n  const res = keys\n    .reduce((acc, current) => {\n      const val = (current == 'StateProvince' && !address[current]) ? 'NA' : address[current]\n      return {\n        ...acc,\n        [`${key}${current}`]: val,\n      }\n    }, {\n      [`${key}OrganizationName`]: address.Organization,\n      [`${key}PostalCode`]: address.Zip,\n    })\n  return res\n}\n"],"file":"create.js"}