{"version":3,"sources":["../../../../src/lib/namecheap/domains/check.js"],"names":["COMMAND","check","Auth","conf","domains","domain","Array","isArray","Error","val","d","res","DomainList","join","DomainCheckResult","results","map","props"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,yBAAhB;;AAEe,eAAeC,KAAf,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AAC9C,QAAM;AACJC,cAAU,EADN;AAEJC;AAFI,MAGFF,IAHJ;AAIA,MAAI,CAACG,MAAMC,OAAN,CAAcH,OAAd,CAAL,EAA6B,MAAM,IAAII,KAAJ,CAAU,wBAAV,CAAN;AAC7B,QAAMC,MAAM,0BAAgBL,OAAhB,CAAZ;AACA,MAAI,CAACK,GAAL,EAAU,MAAM,IAAID,KAAJ,CAAU,6BAAV,CAAN;AACV,MAAIH,UAAU,OAAOA,MAAP,IAAiB,QAA/B,EAAyC,MAAM,IAAIG,KAAJ,CAAU,yBAAV,CAAN;AACzC,QAAME,IAAI,CAAC,GAAGN,OAAJ,EAAa,IAAIC,SAAS,CAACA,MAAD,CAAT,GAAoB,EAAxB,CAAb,CAAV;AAEA,QAAMM,MAAM,MAAM,oBAAMT,IAAN,EAAYF,OAAZ,EAAqB;AAAEY,gBAAYF,EAAEG,IAAF,CAAO,GAAP;AAAd,GAArB,CAAlB;AACA,QAAMC,oBAAoB,kBAAW,mBAAX,EAAgCH,GAAhC,CAA1B;AACA,QAAMI,UAAUD,kBAAkBE,GAAlB,CAAsB,CAAC;AAAEC;AAAF,GAAD,KAAeA,KAArC,CAAhB;AACA,SAAOF,OAAP;AACD","sourcesContent":["import { validateDomains } from '../../../lib'\nimport query from '../../../lib/query'\nimport { extractTag } from '../..'\n\nconst COMMAND = 'namecheap.domains.check'\n\nexport default async function check(Auth, conf) {\n  const {\n    domains = [],\n    domain,\n  } = conf\n  if (!Array.isArray(domains)) throw new Error('domains must be a list')\n  const val = validateDomains(domains)\n  if (!val) throw new Error('all domains must be strings')\n  if (domain && typeof domain != 'string') throw new Error('domain must be a string')\n  const d = [...domains, ...(domain ? [domain] : [])]\n\n  const res = await query(Auth, COMMAND, { DomainList: d.join(',') })\n  const DomainCheckResult = extractTag('DomainCheckResult', res)\n  const results = DomainCheckResult.map(({ props }) => props)\n  return results\n}\n"],"file":"check.js"}