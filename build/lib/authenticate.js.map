{"version":3,"sources":["../../src/lib/authenticate.js"],"names":["LOG","blockedExtensions","s","join","re","RegExp","isBlocked","url","pathname","host","pb","match","endsWith","numberRe","authenticate","user","password","ip","phone","chrome","startingUrl","chromeFlags","port","client","res","Network","Page","DOM","Runtime","Input","requestIntercepted","interceptionId","request","blocked","console","log","continueInterceptedRequest","errorReason","undefined","enable","setRequestInterception","patterns","urlPattern","setCacheDisabled","cacheDisabled","navigate","loadEventFired","login","checkAuth","selectPhone","enterCode","addIpAddress","err","message","close","kill","checkLimit","isLimitReached","evaluate","Error","doesNotMatch","name","Date","toLocaleString","replace","click","Promise","r","setTimeout","focus","i","length","dispatchKeyEvent","type","text","expression","json","e","result","exceptionDetails","exception","description","JSON","parse","value","submitSelector","selectSelector","options","option","find","map","v","keys","slice","o","exec","g","n","gr","co","answer","getDefault","validation","a","p","some","getValue","selector","setValue","val","info","b","code"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { debuglog } from 'util'\nimport { equal } from 'assert'\nimport { launch } from 'chrome-launcher'\nimport CDP from 'chrome-remote-interface'\nimport Chrome from 'chrome-remote-interface/lib/chrome' // eslint-disable-line no-unused-vars\nimport { parse } from 'url'\nimport { askSingle } from 'reloquent'\nimport { c } from 'erte'\n// import promto from 'promto'\n\nconst LOG = debuglog('expensive')\n\nconst blockedExtensions = [\n  'css',\n  'png',\n  'svg',\n  'woff',\n  'ttf',\n  'GetCartTotalAndItemCount',\n  'Domains/.+',\n  'ExpiringSoon/.+',\n  // 'SiteServices/.+',\n]\nconst s = blockedExtensions.join('|')\nconst re = new RegExp(`(${s})$`)\n\n// const blockedHosts = [\n//   'google-analytics.com',\n//   'collector.githubapp.com',\n//   'facebook.com',\n//   'pxf.io',\n//   'twitter.com',\n//   'bing.com',\n//   'ads-twitter.com',\n//   'answerdash.com',\n//   'googleadservices.com',\n//   'doubleclick.net',\n//   'facebook.net',\n//   'impactradius-event.com',\n//   'dnn506yrbagrg.cloudfront.net',\n//   'googletagmanager.com',\n// ]\n// const whiteListedHosts\n\n// const t = blockedHosts.map(h => {\n//   return h.replace(/\\./g, '\\\\.')\n// }).join('|')\n// const reb = new RegExp(`(${t})$`)\n// LOG(reb)\n\nconst isBlocked = (url) => {\n  const { pathname, host } = parse(url)\n  const pb = pathname.match(re)\n  if (pb) return true\n  return !host.endsWith('namecheap.com')\n  // const hb = host.match(reb)\n  // return !!hb\n}\n\nconst numberRe = /(.+?)(\\d\\d\\d)$/\n\nconst authenticate = async ({\n  user,\n  password,\n  ip, // ip to set\n  phone,\n}) => {\n  const chrome = await launch({\n    // userDataDir,\n    startingUrl: 'about:blank',\n    chromeFlags: [\n      // '--headless', '--disable-gpu', '--window-size=1000,2000'\n    ],\n  })\n  const { port } = chrome\n  LOG('Chrome debugging port running on %s', port)\n\n  /** @type {Chrome} */\n  let client\n  let res\n  try {\n    client = await CDP({\n      port,\n    })\n    const { Network, Page, DOM, Runtime, Input } = client\n\n    Network.requestIntercepted(({ interceptionId, request }) => {\n      const blocked = isBlocked(request.url)\n      if (!blocked) {\n        console.log(request.url)\n      }\n      Network.continueInterceptedRequest({\n        interceptionId,\n        errorReason: blocked ? 'Aborted' : undefined,\n      })\n    })\n    // enable events then start!\n    await Network.enable()\n    await Page.enable()\n    await DOM.enable()\n    await Runtime.enable()\n\n    await Network.setRequestInterception({ patterns: [{ urlPattern: '*' }] })\n    await Network.setCacheDisabled({ cacheDisabled: true })\n\n    await Page.navigate({ url: 'https://www.namecheap.com/myaccount/login.aspx' })\n    await Page.loadEventFired()\n\n    await login(Runtime, { user, password })\n    await Page.loadEventFired()\n\n    await checkAuth(Runtime)\n\n    await selectPhone(Runtime, phone)\n    await Page.loadEventFired()\n\n    await enterCode(Runtime)\n    await Page.loadEventFired()\n\n    await Page.navigate({ url: 'https://ap.www.namecheap.com/settings/tools/apiaccess/whitelisted-ips' })\n    await Page.loadEventFired()\n\n    await addIpAddress(Runtime, Input, { ip, password })\n    res = true\n  } catch (err) {\n    LOG(err)\n    res = err.message\n  } finally {\n    if (client) {\n      await client.close()\n    }\n  }\n\n  await chrome.kill()\n  console.log('Chrome killed')\n  return res\n}\n\nconst checkLimit = async (Runtime) => {\n  const isLimitReached = await evaluate(Runtime, `\n    (() => {\n      try {\n        var el = document.querySelector('.alert.error')\n        var re = new RegExp('You have reached')\n        return re.test(el.innerHTML)\n      } catch (err) {\n        return false\n      }\n    })()\n  `)\n  if (isLimitReached) throw new Error('You have reached the limit on the number of times you can request two-factor verification code through text message (SMS). You can request a code again only after 60 minutes.')\n}\n\nconst checkAuth = async (Runtime) => {\n  const doesNotMatch = await evaluate(Runtime, `\n    (() => {\n      try {\n        var el = document.querySelector('.loginForm .alert.error')\n        var re = new RegExp('The password does not match')\n        return re.test(el.innerHTML)\n      } catch (err) {\n        return false\n      }\n    })()\n  `)\n  if (doesNotMatch) throw new Error('The password does not match the user account or the account does not exist.')\n}\n\nconst addIpAddress = async (Runtime, Input, { ip, password }) => {\n  const name = `Expensive on ${new Date().toLocaleString()}`.replace(/:/g, '-')\n  await click(Runtime, 'button')\n  await new Promise(r => setTimeout(r, 1000)) // wait for\n  await focus(Runtime, '#ip-name')\n  for (let i = 0; i < name.length; i++) {\n    await Input.dispatchKeyEvent({ type: 'char', text: name[i] })\n  }\n  await focus(Runtime, '#ip-address')\n  for (let i = 0; i < ip.length; i++) {\n    await Input.dispatchKeyEvent({ type: 'char', text: ip[i] })\n  }\n  await evaluate(Runtime, 'document.querySelectorAll(\\'input[type=\"password\"]\\')[1].focus()')\n  for (let i = 0; i < password.length; i++) {\n    await Input.dispatchKeyEvent({ type: 'char', text: password[i] })\n  }\n  await evaluate(Runtime, 'document.querySelectorAll(\\'button.gb-btn--primary\\')[1].click()')\n}\n\nconst login = async (Runtime, { user, password }) => {\n  await Runtime.evaluate({\n    expression: `document.querySelector(\"input.nc_username\").value = \"${user}\"`,\n  })\n  await Runtime.evaluate({\n    expression: `document.querySelector(\"input.nc_password\").value = \"${password}\"`,\n  })\n  await Runtime.evaluate({\n    expression: 'document.querySelector(\"input.nc_login_submit\").click()',\n  })\n}\n\nconst evaluate = async (Runtime, expression, json) => {\n  let e = expression\n  if (json) {\n    e = `\n    (() => {\n      var a = ${expression}\n      var j = JSON.stringify(a)\n      return j\n    })()`\n  }\n  const { result, exceptionDetails } = await Runtime.evaluate({\n    expression: e,\n  })\n  if (exceptionDetails) {\n    throw new Error(exceptionDetails.exception.description)\n  }\n  return json ? JSON.parse(result.value) : result.value\n}\n\nconst selectPhone = async (Runtime, phone) => {\n  const submitSelector = 'input[type=\"submit\"]'\n  const selectSelector = 'select.verification-method'\n  /** @type {{v: string, i: string}[]} */\n  const options = await evaluate(Runtime, `\n  Array.from(document.querySelectorAll('${selectSelector} > option'))\n    .map(p => ({v: p.value, i: p.innerHTML }))`, true)\n\n  if (phone) {\n    const option = options.find(({ i }) => i.endsWith(phone))\n    if (!option) throw new Error(`A phone number ending with ${phone} cannot be found. Added numbers: ${options.map(({ i }) => i).join(', ')}`)\n    await evaluate(Runtime, `document.querySelector('${selectSelector}').value = \"${option.v}\"`)\n    await evaluate(Runtime, `document.querySelector('${submitSelector}').click()`)\n    return\n  }\n\n  const keys = options.map(({ i }) => i.slice(i.length - 3))\n\n  if (options.length) {\n    const text = `Which phone number to use for 2 factor auth\n${\n  options\n    .map(({ i }) => ` ${i}`)\n    .map(o => {\n      const r = numberRe.exec(o)\n      if (!r) return o\n      const [, g, n] = r\n      const gr = c(g, 'grey')\n      const co = `${gr}${n}`\n      return co\n    })\n    .join('\\n')\n}\nenter last 3 digits`\n\n    const answer = await askSingle({\n      text,\n      async getDefault() {\n        return phone || keys[0]\n      },\n      validation(a) {\n        const p = options.some(({ i }) => i.endsWith(a))\n        if (!p) {\n          throw new Error('unknown number entered')\n        }\n      },\n    })\n\n    console.log(answer)\n    const { v } = options.find(({ i }) => i.endsWith(answer))\n    await Runtime.evaluate({\n      expression: `document.querySelector('select.verification-method').value = \"${v}\"`,\n    })\n  }\n  await Runtime.evaluate({\n    expression: `document.querySelector('input[type=\"submit\"]').click()`, // eslint-disable-line\n  })\n}\n\n// const awaitSelector = (selector, interval = 100, timeout = 2000) => `\n//   new Promise((resolve, reject) => {\n//     var ms = ${interval}\n//     var i = 0\n//     var t = setInterval(() => {\n//       i += ms\n//       if (i > ${timeout}) {\n//         clearTimeout(t)\n//         return reject(new Error('Timeout of ${timeout}ms reached'))\n//       }\n//       var el = document.querySelector('${selector}')\n//       if (el) {\n//         clearTimeout(t)\n//         resolve(el)\n//       }\n//     }, ms)\n//   })\n// `\n\n// const awaitElement = async (Runtime, selector) => {\n//   const { exceptionDetails } = await Runtime.evaluate({\n//     expression: awaitSelector(selector),\n//     awaitPromise: true,\n//   })\n//   if (exceptionDetails) {\n//     throw new Error(exceptionDetails.exception.description)\n//   }\n// }\n\nconst getValue = async (Runtime, selector) => {\n  const expression = `document.querySelector('${selector}').value`\n  const res = await evaluate(Runtime, expression)\n  return res\n}\nconst setValue = async (Runtime, selector, value) => {\n  const expression = `document.querySelector('${selector}').value = \"${value}\"`\n  await evaluate(Runtime, expression)\n}\nconst click = async (Runtime, selector) => {\n  const expression = `document.querySelector('${selector}').click()`\n  const res = await evaluate(Runtime, expression)\n  return res\n}\nconst focus = async (Runtime, selector) => {\n  const expression = `document.querySelector('${selector}').focus()`\n  const res = await evaluate(Runtime, expression)\n  return res\n}\n\nconst enterCode = async (Runtime) => {\n  const val = await getValue(Runtime, 'input[type=\"submit\"]')\n  equal(val, 'Submit Security Code', 'Did not get to the page with verification of security code')\n\n  /** @type {string} */\n  const info = await Runtime.evaluate({\n    expression: `document.querySelector('.info').innerText`, // eslint-disable-line\n  })\n  const r = /Your \\d-digit code begins with (\\d)/.exec(info.result.value)\n  if (!r) {\n    await checkLimit(Runtime)\n    throw new Error('Could not enter the code') // return\n  }\n\n  const [, b] = r\n\n  const code = await askSingle({\n    text: `Security code (begins with ${b})`,\n  })\n\n  await setValue(Runtime, 'input[placeholder=\"Verification Code\"]', code)\n  await click(Runtime, 'input[type=\"submit\"]')\n}\n\nexport default authenticate\n"],"file":"authenticate.js"}