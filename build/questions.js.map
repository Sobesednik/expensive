{"version":3,"sources":["../src/questions.js"],"names":["ApiUser","text","validation","a","Error","ApiKey","ClientIp","getDefault","ip","privateQuestions","phone","aws_id","console","warn","aws_key"],"mappings":";;;;;;;AAAA;;;;eAEe;AACbA,WAAS;AACPC,UAAM,YADC;AAEPC,gBAAYC,KAAK;AAAE,UAAI,CAACA,CAAL,EAAQ,MAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AAAyD;AAF7E,GADI;AAKbC,UAAQ;AACNJ,UAAM,kEADA;AAENC,gBAAYC,KAAK;AAAE,UAAI,CAACA,CAAL,EAAQ,MAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AAA0D;AAF/E,GALK;AASbE,YAAU;AACRL,UAAM,WADE;;AAER;AACA,UAAMM,UAAN,GAAmB;AACjB,YAAMC,KAAK,MAAM,kBAAI,uBAAJ,CAAjB;AACA,aAAOA,EAAP;AACD;;AANO;AATG,C;;AAmBR,MAAMC,mBAAmB;AAC9BC,SAAO;AACLT,UAAM;AADD,GADuB;AAI9BU,UAAQ;AACNV,UAAM,qBADA;AAENC,gBAAYC,KAAK;AAAE,UAAI,CAACA,CAAL,EAAQS,QAAQC,IAAR,CAAa,kDAAb;AAAmE;AAFxF,GAJsB;AAQ9BC,WAAS;AACPb,UAAM,yBADC;AAEPC,gBAAYC,KAAK;AAAE,UAAI,CAACA,CAAL,EAAQS,QAAQC,IAAR,CAAa,kDAAb;AAAmE;AAFvF;AARqB,CAAzB","sourcesContent":["import rqt from 'rqt'\n\nexport default {\n  ApiUser: {\n    text: 'username: ',\n    validation: a => { if (!a) throw new Error('Please enter the namecheap username.') },\n  },\n  ApiKey: {\n    text: 'api key https://ap.www.namecheap.com/settings/tools/apiaccess/: ',\n    validation: a => { if (!a) throw new Error('Please provide the namecheap api key.') },\n  },\n  ClientIp: {\n    text: 'client ip',\n    // validation: a => { if (!a) throw new Error('Please give the Client Ip and whitelist it.') },\n    async getDefault() {\n      const ip = await rqt('https://api.ipify.org')\n      return ip\n    },\n  },\n}\n\nexport const privateQuestions = {\n  phone: {\n    text: 'Last 3 digit of phone to use for 2 factor auth: ',\n  },\n  aws_id: {\n    text: 'AWS access key id: ',\n    validation: a => { if (!a) console.warn('without aws key the route 53 updates won\\'t work' ) },\n  },\n  aws_key: {\n    text: 'AWS secret access key: ',\n    validation: a => { if (!a) console.warn('without aws key the route 53 updates won\\'t work' ) },\n  },\n}\n"],"file":"questions.js"}